{"ast":null,"code":"var _s = $RefreshSig$();\n// // export default ProfilePage;\n//\n// import React, {useState} from 'react';\n// import '../styles/pages/ProfileStyle.css';\n// import Navbar from '../components/Navbar';\n//\n// function ProfilePage() {\n//\n//     const [isEditing, setIsEditing] = useState(false); // Start with inputs disabled\n//     const [userData, setUserData] = useState({\n//         email: 'b.alramlawi360@gmail.com',\n//         username: 'ggg',\n//         isVerified: 'Yes',\n//     });\n//\n//     const handleSaveClick = () => {\n//         setIsEditing(false);\n//         // Add logic to save updated data here\n//     };\n//\n//     const handleEditClick = () => {\n//         setIsEditing(true); // Enable inputs when Edit is clicked\n//     };\n//\n//     const handleInputChange = (e) => {\n//         const {name, value} = e.target;\n//         setUserData({\n//             ...userData,\n//             [name]: value,\n//         });\n//     };\n//\n//     return (\n//         <div className=\"profile-container\">\n//             <Navbar/>\n//             <div className=\"profile-card\">\n//                 <div className=\"profile-header\">\n//                     <img\n//                         src={process.env.PUBLIC_URL + '/profile.png'}\n//                         alt=\"ProfilePage\"\n//                         className=\"profile-image\"\n//                     />\n//                     <h2 className=\"profile-title\">ProfilePage Information</h2>\n//                 </div>\n//                 <div className={`status-rectangle ${userData.isVerified === 'Yes' ? 'verified' : 'not-verified'}`}>\n//                     {userData.isVerified === 'Yes' ? 'Verified' : 'Not Verified'}\n//                 </div>\n//                 <div className=\"profile-info\">\n//                     <div className=\"profile-item\">\n//                         <label className=\"profile-label\">Email:</label>\n//                         <input\n//                             type=\"text\"\n//                             name=\"email\"\n//                             value={userData.email}\n//                             onChange={handleInputChange}\n//                             className=\"profile-input\"\n//                             disabled={!isEditing} // Disable input when not in edit mode\n//                         />\n//                     </div>\n//                     <div className=\"profile-item\">\n//                         <label className=\"profile-label\">Username:</label>\n//                         <input\n//                             type=\"text\"\n//                             name=\"username\"\n//                             value={userData.username}\n//                             onChange={handleInputChange}\n//                             className=\"profile-input\"\n//                             disabled={!isEditing} // Disable input when not in edit mode\n//                         />\n//                     </div>\n//                     <button\n//                         className={isEditing ? \"profile-save-button\" : \"profile-edit-button\"}\n//                         onClick={isEditing ? handleSaveClick : handleEditClick}\n//                     >\n//                         {isEditing ? \"Save\" : \"Edit\"}\n//                     </button>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n//\n// export default ProfilePage;\n//\nimport React, { useState, useEffect } from 'react';\nfunction ProfilePage() {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [userData, setUserData] = useState({\n    email: '',\n    username: '',\n    isVerified: ''\n  });\n  useEffect(() => {\n    // Fetch user data from the backend using an HTTP GET request\n    fetch(`/api/profile/${userId}`, {\n      method: 'GET',\n      headers: {\n        // Add any necessary headers, e.g., authentication token\n      }\n    }).then(response => response.json()).then(data => {\n      if (data.status.statusCode === 200) {\n        setUserData(data.data); // Update userData state with fetched data\n      } else {\n        // Handle error, e.g., redirect to an error page\n      }\n    }).catch(error => {\n      console.error('Error fetching user data:', error);\n      // Handle error\n    });\n  }, [userId]); // Make the request when userId changes\n\n  // Rest of your component code\n}\n_s(ProfilePage, \"tGQr/Ere94oZauIfTDu9kbn8OOU=\");\n_c = ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","ProfilePage","_s","isEditing","setIsEditing","userData","setUserData","email","username","isVerified","fetch","userId","method","headers","then","response","json","data","status","statusCode","catch","error","console","_c","$RefreshReg$"],"sources":["C:/Projects/NodeJSProjects/map-mark-ui/src/pages/ProfilePage.js"],"sourcesContent":["// // export default ProfilePage;\r\n//\r\n// import React, {useState} from 'react';\r\n// import '../styles/pages/ProfileStyle.css';\r\n// import Navbar from '../components/Navbar';\r\n//\r\n// function ProfilePage() {\r\n//\r\n//     const [isEditing, setIsEditing] = useState(false); // Start with inputs disabled\r\n//     const [userData, setUserData] = useState({\r\n//         email: 'b.alramlawi360@gmail.com',\r\n//         username: 'ggg',\r\n//         isVerified: 'Yes',\r\n//     });\r\n//\r\n//     const handleSaveClick = () => {\r\n//         setIsEditing(false);\r\n//         // Add logic to save updated data here\r\n//     };\r\n//\r\n//     const handleEditClick = () => {\r\n//         setIsEditing(true); // Enable inputs when Edit is clicked\r\n//     };\r\n//\r\n//     const handleInputChange = (e) => {\r\n//         const {name, value} = e.target;\r\n//         setUserData({\r\n//             ...userData,\r\n//             [name]: value,\r\n//         });\r\n//     };\r\n//\r\n//     return (\r\n//         <div className=\"profile-container\">\r\n//             <Navbar/>\r\n//             <div className=\"profile-card\">\r\n//                 <div className=\"profile-header\">\r\n//                     <img\r\n//                         src={process.env.PUBLIC_URL + '/profile.png'}\r\n//                         alt=\"ProfilePage\"\r\n//                         className=\"profile-image\"\r\n//                     />\r\n//                     <h2 className=\"profile-title\">ProfilePage Information</h2>\r\n//                 </div>\r\n//                 <div className={`status-rectangle ${userData.isVerified === 'Yes' ? 'verified' : 'not-verified'}`}>\r\n//                     {userData.isVerified === 'Yes' ? 'Verified' : 'Not Verified'}\r\n//                 </div>\r\n//                 <div className=\"profile-info\">\r\n//                     <div className=\"profile-item\">\r\n//                         <label className=\"profile-label\">Email:</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             name=\"email\"\r\n//                             value={userData.email}\r\n//                             onChange={handleInputChange}\r\n//                             className=\"profile-input\"\r\n//                             disabled={!isEditing} // Disable input when not in edit mode\r\n//                         />\r\n//                     </div>\r\n//                     <div className=\"profile-item\">\r\n//                         <label className=\"profile-label\">Username:</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             name=\"username\"\r\n//                             value={userData.username}\r\n//                             onChange={handleInputChange}\r\n//                             className=\"profile-input\"\r\n//                             disabled={!isEditing} // Disable input when not in edit mode\r\n//                         />\r\n//                     </div>\r\n//                     <button\r\n//                         className={isEditing ? \"profile-save-button\" : \"profile-edit-button\"}\r\n//                         onClick={isEditing ? handleSaveClick : handleEditClick}\r\n//                     >\r\n//                         {isEditing ? \"Save\" : \"Edit\"}\r\n//                     </button>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n//\r\n// export default ProfilePage;\r\n//\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction ProfilePage() {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [userData, setUserData] = useState({\r\n        email: '',\r\n        username: '',\r\n        isVerified: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        // Fetch user data from the backend using an HTTP GET request\r\n        fetch(`/api/profile/${userId}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                // Add any necessary headers, e.g., authentication token\r\n            },\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                if (data.status.statusCode === 200) {\r\n                    setUserData(data.data); // Update userData state with fetched data\r\n                } else {\r\n                    // Handle error, e.g., redirect to an error page\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching user data:', error);\r\n                // Handle error\r\n            });\r\n    }, [userId]); // Make the request when userId changes\r\n\r\n    // Rest of your component code\r\n}\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACrCQ,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EAChB,CAAC,CAAC;EAEFT,SAAS,CAAC,MAAM;IACZ;IACAU,KAAK,CAAE,gBAAeC,MAAO,EAAC,EAAE;MAC5BC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL;MAAA;IAER,CAAC,CAAC,CACGC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACZ,IAAIA,IAAI,CAACC,MAAM,CAACC,UAAU,KAAK,GAAG,EAAE;QAChCb,WAAW,CAACW,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC;MAC5B,CAAC,MAAM;QACH;MAAA;IAER,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC,CAAC;EACV,CAAC,EAAE,CAACV,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEd;AACJ;AAACT,EAAA,CA/BQD,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}