{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\NodeJSProjects\\\\map-mark-ui\\\\src\\\\pages\\\\authentication\\\\ResetPasswordPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../../styles/pages/authentication/ResetPasswordStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPasswordPage() {\n  _s();\n  const [newPassword, setNewPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Add your logic here to reset the password\n    // You can use an API call to update the password\n\n    // Display a success or error message based on the result\n    setMessage('Password reset successful.');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-password-container\",\n    style: {\n      backgroundImage: `url(${process.env.PUBLIC_URL}/map.png)`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reset-password-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"form-title\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"new-password\",\n            children: \"New Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"new-password\",\n            value: newPassword,\n            onChange: e => setNewPassword(e.target.value),\n            required: true,\n            className: \"input-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_s(ResetPasswordPage, \"1+mpSwJIZjk03r8Gd1JNJm0XhZY=\");\n_c = ResetPasswordPage;\nexport default ResetPasswordPage;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ResetPasswordPage","_s","newPassword","setNewPassword","message","setMessage","handleSubmit","e","preventDefault","className","style","backgroundImage","process","env","PUBLIC_URL","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Projects/NodeJSProjects/map-mark-ui/src/pages/authentication/ResetPasswordPage.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport '../../styles/pages/authentication/ResetPasswordStyle.css';\r\n\r\nfunction ResetPasswordPage() {\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Add your logic here to reset the password\r\n        // You can use an API call to update the password\r\n\r\n        // Display a success or error message based on the result\r\n        setMessage('Password reset successful.');\r\n    };\r\n\r\n    return (\r\n        <div className=\"reset-password-container\" style={{backgroundImage: `url(${process.env.PUBLIC_URL}/map.png)`}}>\r\n            <div className=\"reset-password-form\">\r\n                <h2 className=\"form-title\">Reset Password</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"new-password\">New Password:</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"new-password\"\r\n                            value={newPassword}\r\n                            onChange={(e) => setNewPassword(e.target.value)}\r\n                            required\r\n                            className=\"input-field\"\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"submit-button\">\r\n                        Reset Password\r\n                    </button>\r\n                </form>\r\n                <p className=\"message\">{message}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResetPasswordPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,0DAA0D;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMS,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA;;IAEA;IACAH,UAAU,CAAC,4BAA4B,CAAC;EAC5C,CAAC;EAED,oBACIN,OAAA;IAAKU,SAAS,EAAC,0BAA0B;IAACC,KAAK,EAAE;MAACC,eAAe,EAAG,OAAMC,OAAO,CAACC,GAAG,CAACC,UAAW;IAAU,CAAE;IAAAC,QAAA,eACzGhB,OAAA;MAAKU,SAAS,EAAC,qBAAqB;MAAAM,QAAA,gBAChChB,OAAA;QAAIU,SAAS,EAAC,YAAY;QAAAM,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9CpB,OAAA;QAAMqB,QAAQ,EAAEd,YAAa;QAAAS,QAAA,gBACzBhB,OAAA;UAAKU,SAAS,EAAC,YAAY;UAAAM,QAAA,gBACvBhB,OAAA;YAAOsB,OAAO,EAAC,cAAc;YAAAN,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACnDpB,OAAA;YACIuB,IAAI,EAAC,UAAU;YACfC,EAAE,EAAC,cAAc;YACjBC,KAAK,EAAEtB,WAAY;YACnBuB,QAAQ,EAAGlB,CAAC,IAAKJ,cAAc,CAACI,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAE;YAChDG,QAAQ;YACRlB,SAAS,EAAC;UAAa;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNpB,OAAA;UAAQuB,IAAI,EAAC,QAAQ;UAACb,SAAS,EAAC,eAAe;UAAAM,QAAA,EAAC;QAEhD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eACPpB,OAAA;QAAGU,SAAS,EAAC,SAAS;QAAAM,QAAA,EAAEX;MAAO;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAClB,EAAA,CAtCQD,iBAAiB;AAAA4B,EAAA,GAAjB5B,iBAAiB;AAwC1B,eAAeA,iBAAiB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}