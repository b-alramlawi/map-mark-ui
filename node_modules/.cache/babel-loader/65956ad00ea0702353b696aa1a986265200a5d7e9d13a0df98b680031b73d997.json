{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\NodeJSProjects\\\\map-mark-ui\\\\src\\\\pages\\\\authentication\\\\VerificationSuccessPage.js\",\n  _s = $RefreshSig$();\n// // export default VerificationSuccessPage;\n// import React from 'react';\n// import '../../styles/pages/authentication/VerificationSuccessStyle.css'; // Import the CSS for styling\n//\n// function VerificationSuccessPage() {\n//     return (\n//         <div className=\"email-verification-success-container\"\n//              style={{backgroundImage: `url(${process.env.PUBLIC_URL}/map.png)`}}>\n//             <div className=\"email-verification-success-message\">\n//                 <h2 className=\"success-title\">Email Verified</h2>\n//                 <p className=\"success-text\">Email verified successfully.</p>\n//                 <a href=\"/login\" className=\"home-button\">Go Login</a>\n//             </div>\n//         </div>\n//     );\n// }\n//\n// export default VerificationSuccessPage;\nimport React, { useEffect, useState } from 'react';\nimport '../../styles/pages/authentication/VerificationSuccessStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmailVerificationPage({\n  match\n}) {\n  _s();\n  const [verificationMessage, setVerificationMessage] = useState('Verifying email...');\n  useEffect(() => {\n    // Extract the token from the URL params\n    const {\n      token\n    } = match.params;\n\n    // Make a GET request to your backend to verify the email\n    fetch(`http://localhost:3000/verify/${token}`).then(response => response.json()).then(data => {\n      if (data.success) {\n        setVerificationMessage('Email verified successfully.');\n      } else {\n        setVerificationMessage('Email verification failed. Please try again.');\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n      setVerificationMessage('Email verification failed. Please try again.');\n    });\n  }, [match.params]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"email-verification-success-container\",\n    style: {\n      backgroundImage: `url(${process.env.PUBLIC_URL}/map.png)`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"email-verification-success-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"success-title\",\n        children: \"Email Verification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-text\",\n        children: verificationMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/login\",\n        className: \"home-button\",\n        children: \"Go to Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(EmailVerificationPage, \"ogRo6DQDlImhPHyYb3Q3nqXY/XM=\");\n_c = EmailVerificationPage;\nexport default EmailVerificationPage;\nvar _c;\n$RefreshReg$(_c, \"EmailVerificationPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","EmailVerificationPage","match","_s","verificationMessage","setVerificationMessage","token","params","fetch","then","response","json","data","success","catch","error","console","className","style","backgroundImage","process","env","PUBLIC_URL","children","fileName","_jsxFileName","lineNumber","columnNumber","href","_c","$RefreshReg$"],"sources":["C:/Projects/NodeJSProjects/map-mark-ui/src/pages/authentication/VerificationSuccessPage.js"],"sourcesContent":["// // export default VerificationSuccessPage;\r\n// import React from 'react';\r\n// import '../../styles/pages/authentication/VerificationSuccessStyle.css'; // Import the CSS for styling\r\n//\r\n// function VerificationSuccessPage() {\r\n//     return (\r\n//         <div className=\"email-verification-success-container\"\r\n//              style={{backgroundImage: `url(${process.env.PUBLIC_URL}/map.png)`}}>\r\n//             <div className=\"email-verification-success-message\">\r\n//                 <h2 className=\"success-title\">Email Verified</h2>\r\n//                 <p className=\"success-text\">Email verified successfully.</p>\r\n//                 <a href=\"/login\" className=\"home-button\">Go Login</a>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n//\r\n// export default VerificationSuccessPage;\r\nimport React, { useEffect, useState } from 'react';\r\nimport '../../styles/pages/authentication/VerificationSuccessStyle.css';\r\n\r\nfunction EmailVerificationPage({ match }) {\r\n    const [verificationMessage, setVerificationMessage] = useState('Verifying email...');\r\n\r\n    useEffect(() => {\r\n        // Extract the token from the URL params\r\n        const { token } = match.params;\r\n\r\n        // Make a GET request to your backend to verify the email\r\n        fetch(`http://localhost:3000/verify/${token}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    setVerificationMessage('Email verified successfully.');\r\n                } else {\r\n                    setVerificationMessage('Email verification failed. Please try again.');\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n                setVerificationMessage('Email verification failed. Please try again.');\r\n            });\r\n    }, [match.params]);\r\n\r\n    return (\r\n        <div className=\"email-verification-success-container\" style={{backgroundImage: `url(${process.env.PUBLIC_URL}/map.png)`}}>\r\n            <div className=\"email-verification-success-message\">\r\n                <h2 className=\"success-title\">Email Verification</h2>\r\n                <p className=\"success-text\">{verificationMessage}</p>\r\n                <a href=\"/login\" className=\"home-button\">Go to Login</a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EmailVerificationPage;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,gEAAgE;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExE,SAASC,qBAAqBA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACtC,MAAM,CAACC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGP,QAAQ,CAAC,oBAAoB,CAAC;EAEpFD,SAAS,CAAC,MAAM;IACZ;IACA,MAAM;MAAES;IAAM,CAAC,GAAGJ,KAAK,CAACK,MAAM;;IAE9B;IACAC,KAAK,CAAE,gCAA+BF,KAAM,EAAC,CAAC,CACzCG,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACZ,IAAIA,IAAI,CAACC,OAAO,EAAE;QACdR,sBAAsB,CAAC,8BAA8B,CAAC;MAC1D,CAAC,MAAM;QACHA,sBAAsB,CAAC,8CAA8C,CAAC;MAC1E;IACJ,CAAC,CAAC,CACDS,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BV,sBAAsB,CAAC,8CAA8C,CAAC;IAC1E,CAAC,CAAC;EACV,CAAC,EAAE,CAACH,KAAK,CAACK,MAAM,CAAC,CAAC;EAElB,oBACIP,OAAA;IAAKiB,SAAS,EAAC,sCAAsC;IAACC,KAAK,EAAE;MAACC,eAAe,EAAG,OAAMC,OAAO,CAACC,GAAG,CAACC,UAAW;IAAU,CAAE;IAAAC,QAAA,eACrHvB,OAAA;MAAKiB,SAAS,EAAC,oCAAoC;MAAAM,QAAA,gBAC/CvB,OAAA;QAAIiB,SAAS,EAAC,eAAe;QAAAM,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrD3B,OAAA;QAAGiB,SAAS,EAAC,cAAc;QAAAM,QAAA,EAAEnB;MAAmB;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrD3B,OAAA;QAAG4B,IAAI,EAAC,QAAQ;QAACX,SAAS,EAAC,aAAa;QAAAM,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACxB,EAAA,CAhCQF,qBAAqB;AAAA4B,EAAA,GAArB5B,qBAAqB;AAkC9B,eAAeA,qBAAqB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}