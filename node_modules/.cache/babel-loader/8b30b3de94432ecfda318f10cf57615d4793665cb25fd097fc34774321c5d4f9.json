{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\NodeJSProjects\\\\map-mark-ui\\\\src\\\\pages\\\\authentication\\\\SignUpPage.js\",\n  _s = $RefreshSig$();\n// import React, {useState} from 'react';\n// import '../../styles/pages/authentication/SignUpStyle.css';\n//\n// function SignUpPage() {\n//     const [formData, setFormData] = useState({\n//         email: '',\n//         password: '',\n//         username: '',\n//     });\n//\n//     return (\n//         <div className=\"signup-container\" style={{backgroundImage: `url(${process.env.PUBLIC_URL}/map.png)`}}>\n//             <div className=\"signup-form\">\n//                 <h2 className=\"form-title\">Signup</h2>\n//                 <form>\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"email\">Email</label>\n//                         <input\n//                             type=\"email\"\n//                             id=\"email\"\n//                             name=\"email\"\n//                             value={formData.email}\n//                             onChange={(e) => setFormData({...formData, email: e.target.value})}\n//                             required\n//                             className=\"input-field\"\n//                         />\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"password\">Password</label>\n//                         <input\n//                             type=\"password\"\n//                             id=\"password\"\n//                             name=\"password\"\n//                             value={formData.password}\n//                             onChange={(e) => setFormData({...formData, password: e.target.value})}\n//                             required\n//                             className=\"input-field\"\n//                         />\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"username\">Username</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"username\"\n//                             name=\"username\"\n//                             value={formData.username}\n//                             onChange={(e) => setFormData({...formData, username: e.target.value})}\n//                             required\n//                             className=\"input-field\"\n//                         />\n//                     </div>\n//                     <button type=\"submit\" className=\"submit-button\">\n//                         Register\n//                     </button>\n//                 </form>\n//                 <p className=\"login-link\">\n//                     Already have an account? <a href=\"/login\">Login</a>\n//                 </p>\n//             </div>\n//         </div>\n//     );\n// }\n//\n// export default SignUpPage;\n\n// import React, {useState} from 'react';\n// import '../../styles/pages/authentication/SignUpStyle.css';\n//\n// function SignUpPage() {\n//     const [formData, setFormData] = useState({\n//         email: '',\n//         password: '',\n//         username: '',\n//     });\n//\n//     const handleFormSubmit = async (e) => {\n//         e.preventDefault();\n//\n//         try {\n//             const response = await fetch('http://localhost:3000/api/auth/signup', {\n//                 method: 'POST',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                 },\n//                 body: JSON.stringify(formData),\n//             });\n//\n//             if (response.ok) {\n//                 // Registration successful, you can redirect the user to a success page or take other actions\n//                 console.log('Registration successful');\n//             } else {\n//                 // Registration failed, handle the error\n//                 console.error('Registration failed');\n//             }\n//         } catch (error) {\n//             console.error('Error:', error);\n//         }\n//     };\n//\n//     const handleInputChange = (e) => {\n//         const {name, value} = e.target;\n//         setFormData({...formData, [name]: value});\n//     };\n//\n//     return (\n//         <div className=\"signup-container\" style={{backgroundImage: `url(${process.env.PUBLIC_URL}/map.png)`}}>\n//             <div className=\"signup-form\">\n//                 <h2 className=\"form-title\">Signup</h2>\n//                 <form onSubmit={handleFormSubmit}>\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"email\">Email</label>\n//                         <input\n//                             type=\"email\"\n//                             id=\"email\"\n//                             name=\"email\"\n//                             value={formData.email}\n//                             onChange={handleInputChange}\n//                             required\n//                             className=\"input-field\"\n//                         />\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"password\">Password</label>\n//                         <input\n//                             type=\"password\"\n//                             id=\"password\"\n//                             name=\"password\"\n//                             value={formData.password}\n//                             onChange={handleInputChange}\n//                             required\n//                             className=\"input-field\"\n//                         />\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"username\">Username</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"username\"\n//                             name=\"username\"\n//                             value={formData.username}\n//                             onChange={handleInputChange}\n//                             required\n//                             className=\"input-field\"\n//                         />\n//                     </div>\n//                     <button type=\"submit\" className=\"submit-button\">\n//                         Register\n//                     </button>\n//                 </form>\n//                 <p className=\"login-link\">\n//                     Already have an account? <a href=\"/login\">Login</a>\n//                 </p>\n//             </div>\n//         </div>\n//     );\n// }\n//\n// export default SignUpPage;\n\n// import React, { useState } from 'react';\n// import '../../styles/pages/authentication/SignUpStyle.css';\n//\n// function SignUpPage() {\n//     const [formData, setFormData] = useState({\n//         email: '',\n//         password: '',\n//         username: '',\n//     });\n//\n//     const [isRegistering, setIsRegistering] = useState(false);\n//\n//     const handleFormSubmit = async (e) => {\n//         e.preventDefault();\n//\n//         try {\n//             setIsRegistering(true); // Start the registration process\n//             const response = await fetch('http://localhost:3000/api/auth/signup', {\n//                 method: 'POST',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                 },\n//                 body: JSON.stringify(formData),\n//             });\n//\n//             if (response.ok) {\n//                 // Registration successful, you can redirect the user to a success page or take other actions\n//                 console.log('Registration successful');\n//             } else {\n//                 // Registration failed, handle the error\n//                 console.error('Registration failed');\n//             }\n//         } catch (error) {\n//             console.error('Error:', error);\n//         } finally {\n//             setIsRegistering(false); // Registration process completed\n//         }\n//     };\n//\n//     const handleInputChange = (e) => {\n//         const { name, value } = e.target;\n//         setFormData({ ...formData, [name]: value });\n//     };\n//\n//     return (\n//         <div className=\"signup-container\" style={{ backgroundImage: `url(${process.env.PUBLIC_URL}/map.png)` }}>\n//             <div className=\"signup-form\">\n//                 <h2 className=\"form-title\">Signup</h2>\n//                 <form onSubmit={handleFormSubmit}>\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"email\">Email</label>\n//                         <input\n//                             type=\"email\"\n//                             id=\"email\"\n//                             name=\"email\"\n//                             value={formData.email}\n//                             onChange={handleInputChange}\n//                             required\n//                             className=\"input-field\"\n//                         />\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"password\">Password</label>\n//                         <input\n//                             type=\"password\"\n//                             id=\"password\"\n//                             name=\"password\"\n//                             value={formData.password}\n//                             onChange={handleInputChange}\n//                             required\n//                             className=\"input-field\"\n//                         />\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"username\">Username</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"username\"\n//                             name=\"username\"\n//                             value={formData.username}\n//                             onChange={handleInputChange}\n//                             required\n//                             className=\"input-field\"\n//                         />\n//                     </div>\n//                     <button type=\"submit\" className=\"submit-button\" disabled={isRegistering}>\n//                         {isRegistering ? 'Registering...' : 'Register'}\n//                     </button>\n//                 </form>\n//                 <p className=\"login-link\">\n//                     Already have an account? <a href=\"/login\">Login</a>\n//                 </p>\n//             </div>\n//         </div>\n//     );\n// }\n//\n// export default SignUpPage;\n\nimport React, { useState } from 'react';\nimport '../../styles/pages/authentication/SignUpStyle.css';\nimport SuccessMessage from \"../../components/SuccessMessage\";\nimport FailedMessage from \"../../components/FailedMessage\";\nimport { useHistory } from 'react-router-dom'; // Import useHistory\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignUpPage() {\n  _s();\n  const history = useHistory(); // Initialize useHistory\n\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    username: ''\n  });\n  const [isRegistering, setIsRegistering] = useState(false);\n  const [registrationSuccess, setRegistrationSuccess] = useState(null);\n\n  // const handleFormSubmit = async (e) => {\n  //     e.preventDefault();\n  //\n  //     try {\n  //         setIsRegistering(true); // Start the registration process\n  //         const response = await fetch('http://localhost:3000/api/auth/signup', {\n  //             method: 'POST',\n  //             headers: {\n  //                 'Content-Type': 'application/json',\n  //             },\n  //             body: JSON.stringify(formData),\n  //         });\n  //\n  //         if (response.ok) {\n  //             // Registration successful\n  //             setRegistrationSuccess(true);\n  //             console.log('Registration successful');\n  //             // Redirect to the home page after successful registration\n  //             history.push('/home');\n  //         } else {\n  //             // Registration failed\n  //             setRegistrationSuccess(false);\n  //             console.error('Registration failed');\n  //         }\n  //     } catch (error) {\n  //         console.error('Error:', error);\n  //         setRegistrationSuccess(false);\n  //     } finally {\n  //         setIsRegistering(false); // Registration process completed\n  //     }\n  // };\n\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    try {\n      setIsRegistering(true);\n      const response = await fetch('http://localhost:3000/api/auth/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        // // Registration successful\n        // setRegistrationSuccess(true);\n        // console.log('Registration successful');\n        //\n        // // Redirect to the home page after successful registration\n        // history.push('/');\n        // Registration successful\n        setRegistrationSuccess(true);\n        console.log('Registration successful');\n\n        // Delay the redirection by 2 seconds\n        setTimeout(() => {\n          history.push('/');\n        }, 2000);\n      } else {\n        // Registration failed\n        setRegistrationSuccess(false);\n        console.error('Registration failed');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setRegistrationSuccess(false);\n    } finally {\n      setIsRegistering(false);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    style: {\n      backgroundImage: `url(${process.env.PUBLIC_URL}/map.png)`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"form-title\",\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 17\n      }, this), registrationSuccess === true && /*#__PURE__*/_jsxDEV(SuccessMessage, {\n        message: \"Registration successful!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 21\n      }, this), registrationSuccess === false && /*#__PURE__*/_jsxDEV(FailedMessage, {\n        message: \"Registration failed. Please try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleInputChange,\n            required: true,\n            className: \"input-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            value: formData.password,\n            onChange: handleInputChange,\n            required: true,\n            className: \"input-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            name: \"username\",\n            value: formData.username,\n            onChange: handleInputChange,\n            required: true,\n            className: \"input-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          disabled: isRegistering,\n          children: isRegistering ? 'Registering...' : 'Register'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login-link\",\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 359,\n    columnNumber: 9\n  }, this);\n}\n_s(SignUpPage, \"ifmFrjhIQv2XwwFY/eag+Y06eq8=\", false, function () {\n  return [useHistory];\n});\n_c = SignUpPage;\nexport default SignUpPage;\nvar _c;\n$RefreshReg$(_c, \"SignUpPage\");","map":{"version":3,"names":["React","useState","SuccessMessage","FailedMessage","useHistory","jsxDEV","_jsxDEV","SignUpPage","_s","history","formData","setFormData","email","password","username","isRegistering","setIsRegistering","registrationSuccess","setRegistrationSuccess","handleFormSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","console","log","setTimeout","push","error","handleInputChange","name","value","target","className","style","backgroundImage","process","env","PUBLIC_URL","children","fileName","_jsxFileName","lineNumber","columnNumber","message","onSubmit","htmlFor","type","id","onChange","required","disabled","href","_c","$RefreshReg$"],"sources":["C:/Projects/NodeJSProjects/map-mark-ui/src/pages/authentication/SignUpPage.js"],"sourcesContent":["// import React, {useState} from 'react';\r\n// import '../../styles/pages/authentication/SignUpStyle.css';\r\n//\r\n// function SignUpPage() {\r\n//     const [formData, setFormData] = useState({\r\n//         email: '',\r\n//         password: '',\r\n//         username: '',\r\n//     });\r\n//\r\n//     return (\r\n//         <div className=\"signup-container\" style={{backgroundImage: `url(${process.env.PUBLIC_URL}/map.png)`}}>\r\n//             <div className=\"signup-form\">\r\n//                 <h2 className=\"form-title\">Signup</h2>\r\n//                 <form>\r\n//                     <div className=\"form-group\">\r\n//                         <label htmlFor=\"email\">Email</label>\r\n//                         <input\r\n//                             type=\"email\"\r\n//                             id=\"email\"\r\n//                             name=\"email\"\r\n//                             value={formData.email}\r\n//                             onChange={(e) => setFormData({...formData, email: e.target.value})}\r\n//                             required\r\n//                             className=\"input-field\"\r\n//                         />\r\n//                     </div>\r\n//                     <div className=\"form-group\">\r\n//                         <label htmlFor=\"password\">Password</label>\r\n//                         <input\r\n//                             type=\"password\"\r\n//                             id=\"password\"\r\n//                             name=\"password\"\r\n//                             value={formData.password}\r\n//                             onChange={(e) => setFormData({...formData, password: e.target.value})}\r\n//                             required\r\n//                             className=\"input-field\"\r\n//                         />\r\n//                     </div>\r\n//                     <div className=\"form-group\">\r\n//                         <label htmlFor=\"username\">Username</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             id=\"username\"\r\n//                             name=\"username\"\r\n//                             value={formData.username}\r\n//                             onChange={(e) => setFormData({...formData, username: e.target.value})}\r\n//                             required\r\n//                             className=\"input-field\"\r\n//                         />\r\n//                     </div>\r\n//                     <button type=\"submit\" className=\"submit-button\">\r\n//                         Register\r\n//                     </button>\r\n//                 </form>\r\n//                 <p className=\"login-link\">\r\n//                     Already have an account? <a href=\"/login\">Login</a>\r\n//                 </p>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n//\r\n// export default SignUpPage;\r\n\r\n// import React, {useState} from 'react';\r\n// import '../../styles/pages/authentication/SignUpStyle.css';\r\n//\r\n// function SignUpPage() {\r\n//     const [formData, setFormData] = useState({\r\n//         email: '',\r\n//         password: '',\r\n//         username: '',\r\n//     });\r\n//\r\n//     const handleFormSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//\r\n//         try {\r\n//             const response = await fetch('http://localhost:3000/api/auth/signup', {\r\n//                 method: 'POST',\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                 },\r\n//                 body: JSON.stringify(formData),\r\n//             });\r\n//\r\n//             if (response.ok) {\r\n//                 // Registration successful, you can redirect the user to a success page or take other actions\r\n//                 console.log('Registration successful');\r\n//             } else {\r\n//                 // Registration failed, handle the error\r\n//                 console.error('Registration failed');\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('Error:', error);\r\n//         }\r\n//     };\r\n//\r\n//     const handleInputChange = (e) => {\r\n//         const {name, value} = e.target;\r\n//         setFormData({...formData, [name]: value});\r\n//     };\r\n//\r\n//     return (\r\n//         <div className=\"signup-container\" style={{backgroundImage: `url(${process.env.PUBLIC_URL}/map.png)`}}>\r\n//             <div className=\"signup-form\">\r\n//                 <h2 className=\"form-title\">Signup</h2>\r\n//                 <form onSubmit={handleFormSubmit}>\r\n//                     <div className=\"form-group\">\r\n//                         <label htmlFor=\"email\">Email</label>\r\n//                         <input\r\n//                             type=\"email\"\r\n//                             id=\"email\"\r\n//                             name=\"email\"\r\n//                             value={formData.email}\r\n//                             onChange={handleInputChange}\r\n//                             required\r\n//                             className=\"input-field\"\r\n//                         />\r\n//                     </div>\r\n//                     <div className=\"form-group\">\r\n//                         <label htmlFor=\"password\">Password</label>\r\n//                         <input\r\n//                             type=\"password\"\r\n//                             id=\"password\"\r\n//                             name=\"password\"\r\n//                             value={formData.password}\r\n//                             onChange={handleInputChange}\r\n//                             required\r\n//                             className=\"input-field\"\r\n//                         />\r\n//                     </div>\r\n//                     <div className=\"form-group\">\r\n//                         <label htmlFor=\"username\">Username</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             id=\"username\"\r\n//                             name=\"username\"\r\n//                             value={formData.username}\r\n//                             onChange={handleInputChange}\r\n//                             required\r\n//                             className=\"input-field\"\r\n//                         />\r\n//                     </div>\r\n//                     <button type=\"submit\" className=\"submit-button\">\r\n//                         Register\r\n//                     </button>\r\n//                 </form>\r\n//                 <p className=\"login-link\">\r\n//                     Already have an account? <a href=\"/login\">Login</a>\r\n//                 </p>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n//\r\n// export default SignUpPage;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import '../../styles/pages/authentication/SignUpStyle.css';\r\n//\r\n// function SignUpPage() {\r\n//     const [formData, setFormData] = useState({\r\n//         email: '',\r\n//         password: '',\r\n//         username: '',\r\n//     });\r\n//\r\n//     const [isRegistering, setIsRegistering] = useState(false);\r\n//\r\n//     const handleFormSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//\r\n//         try {\r\n//             setIsRegistering(true); // Start the registration process\r\n//             const response = await fetch('http://localhost:3000/api/auth/signup', {\r\n//                 method: 'POST',\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                 },\r\n//                 body: JSON.stringify(formData),\r\n//             });\r\n//\r\n//             if (response.ok) {\r\n//                 // Registration successful, you can redirect the user to a success page or take other actions\r\n//                 console.log('Registration successful');\r\n//             } else {\r\n//                 // Registration failed, handle the error\r\n//                 console.error('Registration failed');\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('Error:', error);\r\n//         } finally {\r\n//             setIsRegistering(false); // Registration process completed\r\n//         }\r\n//     };\r\n//\r\n//     const handleInputChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setFormData({ ...formData, [name]: value });\r\n//     };\r\n//\r\n//     return (\r\n//         <div className=\"signup-container\" style={{ backgroundImage: `url(${process.env.PUBLIC_URL}/map.png)` }}>\r\n//             <div className=\"signup-form\">\r\n//                 <h2 className=\"form-title\">Signup</h2>\r\n//                 <form onSubmit={handleFormSubmit}>\r\n//                     <div className=\"form-group\">\r\n//                         <label htmlFor=\"email\">Email</label>\r\n//                         <input\r\n//                             type=\"email\"\r\n//                             id=\"email\"\r\n//                             name=\"email\"\r\n//                             value={formData.email}\r\n//                             onChange={handleInputChange}\r\n//                             required\r\n//                             className=\"input-field\"\r\n//                         />\r\n//                     </div>\r\n//                     <div className=\"form-group\">\r\n//                         <label htmlFor=\"password\">Password</label>\r\n//                         <input\r\n//                             type=\"password\"\r\n//                             id=\"password\"\r\n//                             name=\"password\"\r\n//                             value={formData.password}\r\n//                             onChange={handleInputChange}\r\n//                             required\r\n//                             className=\"input-field\"\r\n//                         />\r\n//                     </div>\r\n//                     <div className=\"form-group\">\r\n//                         <label htmlFor=\"username\">Username</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             id=\"username\"\r\n//                             name=\"username\"\r\n//                             value={formData.username}\r\n//                             onChange={handleInputChange}\r\n//                             required\r\n//                             className=\"input-field\"\r\n//                         />\r\n//                     </div>\r\n//                     <button type=\"submit\" className=\"submit-button\" disabled={isRegistering}>\r\n//                         {isRegistering ? 'Registering...' : 'Register'}\r\n//                     </button>\r\n//                 </form>\r\n//                 <p className=\"login-link\">\r\n//                     Already have an account? <a href=\"/login\">Login</a>\r\n//                 </p>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n//\r\n// export default SignUpPage;\r\n\r\nimport React, {useState} from 'react';\r\nimport '../../styles/pages/authentication/SignUpStyle.css';\r\nimport SuccessMessage from \"../../components/SuccessMessage\";\r\nimport FailedMessage from \"../../components/FailedMessage\";\r\nimport {useHistory} from 'react-router-dom'; // Import useHistory\r\n\r\n\r\nfunction SignUpPage() {\r\n    const history = useHistory(); // Initialize useHistory\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '',\r\n        username: '',\r\n    });\r\n\r\n    const [isRegistering, setIsRegistering] = useState(false);\r\n    const [registrationSuccess, setRegistrationSuccess] = useState(null);\r\n\r\n    // const handleFormSubmit = async (e) => {\r\n    //     e.preventDefault();\r\n    //\r\n    //     try {\r\n    //         setIsRegistering(true); // Start the registration process\r\n    //         const response = await fetch('http://localhost:3000/api/auth/signup', {\r\n    //             method: 'POST',\r\n    //             headers: {\r\n    //                 'Content-Type': 'application/json',\r\n    //             },\r\n    //             body: JSON.stringify(formData),\r\n    //         });\r\n    //\r\n    //         if (response.ok) {\r\n    //             // Registration successful\r\n    //             setRegistrationSuccess(true);\r\n    //             console.log('Registration successful');\r\n    //             // Redirect to the home page after successful registration\r\n    //             history.push('/home');\r\n    //         } else {\r\n    //             // Registration failed\r\n    //             setRegistrationSuccess(false);\r\n    //             console.error('Registration failed');\r\n    //         }\r\n    //     } catch (error) {\r\n    //         console.error('Error:', error);\r\n    //         setRegistrationSuccess(false);\r\n    //     } finally {\r\n    //         setIsRegistering(false); // Registration process completed\r\n    //     }\r\n    // };\r\n\r\n    const handleFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            setIsRegistering(true);\r\n            const response = await fetch('http://localhost:3000/api/auth/signup', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            });\r\n\r\n            if (response.ok) {\r\n                // // Registration successful\r\n                // setRegistrationSuccess(true);\r\n                // console.log('Registration successful');\r\n                //\r\n                // // Redirect to the home page after successful registration\r\n                // history.push('/');\r\n                // Registration successful\r\n                setRegistrationSuccess(true);\r\n                console.log('Registration successful');\r\n\r\n                // Delay the redirection by 2 seconds\r\n                setTimeout(() => {\r\n                    history.push('/');\r\n                }, 2000);\r\n            } else {\r\n                // Registration failed\r\n                setRegistrationSuccess(false);\r\n                console.error('Registration failed');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            setRegistrationSuccess(false);\r\n        } finally {\r\n            setIsRegistering(false);\r\n        }\r\n    };\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n        const {name, value} = e.target;\r\n        setFormData({...formData, [name]: value});\r\n    };\r\n\r\n    return (\r\n        <div className=\"signup-container\" style={{backgroundImage: `url(${process.env.PUBLIC_URL}/map.png)`}}>\r\n            <div className=\"signup-form\">\r\n                <h2 className=\"form-title\">Signup</h2>\r\n                {registrationSuccess === true && (\r\n                    <SuccessMessage message=\"Registration successful!\"/>\r\n                )}\r\n                {registrationSuccess === false && (\r\n                    <FailedMessage message=\"Registration failed. Please try again.\"/>\r\n                )}\r\n                <form onSubmit={handleFormSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            value={formData.email}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                            className=\"input-field\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            value={formData.password}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                            className=\"input-field\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">Username</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            name=\"username\"\r\n                            value={formData.username}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                            className=\"input-field\"\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"submit-button\" disabled={isRegistering}>\r\n                        {isRegistering ? 'Registering...' : 'Register'}\r\n                    </button>\r\n                </form>\r\n                <p className=\"login-link\">\r\n                    Already have an account? <a href=\"/login\">Login</a>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignUpPage;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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"},"metadata":{},"sourceType":"module","externalDependencies":[]}