{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\NodeJSProjects\\\\map-mark-ui\\\\src\\\\pages\\\\ProfilePage.js\",\n  _s = $RefreshSig$();\n// // export default ProfilePage;\n//\n// import React, {useState} from 'react';\n// import '../styles/pages/ProfileStyle.css';\n// import Navbar from '../components/Navbar';\n//\n// function ProfilePage() {\n//\n//     const [isEditing, setIsEditing] = useState(false); // Start with inputs disabled\n//     const [userData, setUserData] = useState({\n//         email: 'b.alramlawi360@gmail.com',\n//         username: 'ggg',\n//         isVerified: 'Yes',\n//     });\n//\n//     const handleSaveClick = () => {\n//         setIsEditing(false);\n//         // Add logic to save updated data here\n//     };\n//\n//     const handleEditClick = () => {\n//         setIsEditing(true); // Enable inputs when Edit is clicked\n//     };\n//\n//     const handleInputChange = (e) => {\n//         const {name, value} = e.target;\n//         setUserData({\n//             ...userData,\n//             [name]: value,\n//         });\n//     };\n//\n//     return (\n//         <div className=\"profile-container\">\n//             <Navbar/>\n//             <div className=\"profile-card\">\n//                 <div className=\"profile-header\">\n//                     <img\n//                         src={process.env.PUBLIC_URL + '/profile.png'}\n//                         alt=\"ProfilePage\"\n//                         className=\"profile-image\"\n//                     />\n//                     <h2 className=\"profile-title\">ProfilePage Information</h2>\n//                 </div>\n//                 <div className={`status-rectangle ${userData.isVerified === 'Yes' ? 'verified' : 'not-verified'}`}>\n//                     {userData.isVerified === 'Yes' ? 'Verified' : 'Not Verified'}\n//                 </div>\n//                 <div className=\"profile-info\">\n//                     <div className=\"profile-item\">\n//                         <label className=\"profile-label\">Email:</label>\n//                         <input\n//                             type=\"text\"\n//                             name=\"email\"\n//                             value={userData.email}\n//                             onChange={handleInputChange}\n//                             className=\"profile-input\"\n//                             disabled={!isEditing} // Disable input when not in edit mode\n//                         />\n//                     </div>\n//                     <div className=\"profile-item\">\n//                         <label className=\"profile-label\">Username:</label>\n//                         <input\n//                             type=\"text\"\n//                             name=\"username\"\n//                             value={userData.username}\n//                             onChange={handleInputChange}\n//                             className=\"profile-input\"\n//                             disabled={!isEditing} // Disable input when not in edit mode\n//                         />\n//                     </div>\n//                     <button\n//                         className={isEditing ? \"profile-save-button\" : \"profile-edit-button\"}\n//                         onClick={isEditing ? handleSaveClick : handleEditClick}\n//                     >\n//                         {isEditing ? \"Save\" : \"Edit\"}\n//                     </button>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default ProfilePage;\n//\n// import React, {useState, useEffect} from 'react';\n// import {useParams} from 'react-router-dom';\n// import '../styles/pages/ProfileStyle.css';\n// import Navbar from '../components/Navbar';\n//\n// function ProfilePage() {\n//     const token = localStorage.getItem('authToken');\n//     const {userId} = useParams();\n//     const [isEditing, setIsEditing] = useState(false);\n//     const [userData, setUserData] = useState({\n//         email: '',\n//         username: '',\n//         isVerified: false,\n//     });\n//\n//     useEffect(() => {\n//         // Fetch user data from the backend using an HTTP GET request\n//         fetch(`http://localhost:3000/api/auth/profile/${userId}`, {\n//             method: 'GET',\n//             headers: {\n//                 'Authorization': `${token}`, // Include the token in the Authorization header\n//             },\n//         })\n//             .then((response) => response.json())\n//             .then((data) => {\n//                 if (data.status.statusCode === 200) {\n//                     setUserData(data.data); // Update userData state with fetched data\n//                 } else {\n//                     // Handle error, e.g., redirect to an error page\n//                 }\n//             })\n//             .catch((error) => {\n//                 console.error('Error fetching user data:', error);\n//                 // Handle error\n//             });\n//     }, [userId, token]);\n//\n//     const handleSaveClick = () => {\n//         setIsEditing(false);\n//\n//         // Send updated user data to the backend\n//         fetch(`http://localhost:3000/api/auth/update-profile/${userId}`, {\n//             method: 'PUT',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 'Authorization': `${token}`,\n//             },\n//             body: JSON.stringify(userData), // Send updated user data\n//         })\n//             .then((response) => response.json())\n//             .then((data) => {\n//                 if (data.status.statusCode === 200) {\n//                     // Data updated successfully\n//                 } else {\n//                     // Handle error, e.g., show an error message\n//                 }\n//             })\n//             .catch((error) => {\n//                 console.error('Error updating user data:', error);\n//                 // Handle error\n//             });\n//     };\n//\n//     const handleEditClick = () => {\n//         setIsEditing(true);\n//     };\n//\n//     const handleInputChange = (e) => {\n//         const {name, value} = e.target;\n//         setUserData({\n//             ...userData,\n//             [name]: value,\n//         });\n//     };\n//\n//     return (\n//         <div className=\"profile-container\">\n//             <Navbar/>\n//             <div className=\"profile-card\">\n//                 {token}\n//                 <div className=\"profile-header\">\n//                     <img\n//                         src={process.env.PUBLIC_URL + '/profile.png'}\n//                         alt=\"ProfilePage\"\n//                         className=\"profile-image\"\n//                     />\n//                     <h2 className=\"profile-title\">ProfilePage Information</h2>\n//                 </div>\n//                 <div className={`status-rectangle ${userData.isVerified ? 'verified' : 'not-verified'}`}>\n//                     {userData.isVerified ? 'Verified' : 'Not Verified'}\n//                 </div>\n//                 <div className=\"profile-info\">\n//                     <div className=\"profile-item\">\n//                         <label className=\"profile-label\">Email:</label>\n//                         <input\n//                             type=\"text\"\n//                             name=\"email\"\n//                             value={userData.email}\n//                             onChange={handleInputChange}\n//                             className=\"profile-input\"\n//                             disabled={!isEditing} // Disable input when not in edit mode\n//                         />\n//                     </div>\n//                     <div className=\"profile-item\">\n//                         <label className=\"profile-label\">Username:</label>\n//                         <input\n//                             type=\"text\"\n//                             name=\"username\"\n//                             value={userData.username}\n//                             onChange={handleInputChange}\n//                             className=\"profile-input\"\n//                             disabled={!isEditing} // Disable input when not in edit mode\n//                         />\n//                     </div>\n//                     <button\n//                         className={isEditing ? \"profile-save-button\" : \"profile-edit-button\"}\n//                         onClick={isEditing ? handleSaveClick : handleEditClick}\n//                     >\n//                         {isEditing ? \"Save\" : \"Edit\"}\n//                     </button>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n//\n// export default ProfilePage;\n\n//\n// import React, {useState, useEffect} from 'react';\n// import {useParams} from 'react-router-dom';\n// import '../styles/pages/ProfileStyle.css';\n// import Navbar from '../components/Navbar';\n//\n// function ProfilePage() {\n//     const token = localStorage.getItem('authToken');\n//     const {userId} = useParams();\n//     const [isEditing, setIsEditing] = useState(false);\n//     const [userData, setUserData] = useState({\n//         email: '',\n//         username: '',\n//         isVerified: false,\n//     });\n//\n//     useEffect(() => {\n//         // Fetch user data from the backend using an HTTP GET request\n//         fetch(`http://localhost:3000/api/auth/profile/${userId}`, {\n//             method: 'GET',\n//             headers: {\n//                 'Authorization': `${token}`, // Include the token in the Authorization header\n//             },\n//         })\n//             .then((response) => response.json())\n//             .then((data) => {\n//                 if (data.status.statusCode === 200) {\n//                     setUserData(data.data); // Update userData state with fetched data\n//                 } else {\n//                     // Handle error, e.g., redirect to an error page\n//                 }\n//             })\n//             .catch((error) => {\n//                 console.error('Error fetching user data:', error);\n//                 // Handle error\n//             });\n//     }, [userId, token]);\n//\n//     const handleSaveClick = () => {\n//         setIsEditing(false);\n//\n//         // Send updated user data to the backend\n//         fetch(`http://localhost:3000/api/auth/update-profile/${userId}`, {\n//             method: 'PUT',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 'Authorization': `${token}`,\n//             },\n//             body: JSON.stringify(userData), // Send updated user data\n//         })\n//             .then((response) => response.json())\n//             .then((data) => {\n//\n//             })\n//             .catch((error) => {\n//             });\n//     };\n//\n//     const handleEditClick = () => {\n//         setIsEditing(true);\n//     };\n//\n//     const handleInputChange = (e) => {\n//         const {name, value} = e.target;\n//         setUserData({\n//             ...userData,\n//             [name]: value,\n//         });\n//     };\n//\n//     return (\n//         <div className=\"profile-container\">\n//             <Navbar/>\n//             <div className=\"profile-card\">\n//                 {token}\n//                 <div className=\"profile-header\">\n//                     <img\n//                         src={process.env.PUBLIC_URL + '/profile.png'}\n//                         alt=\"ProfilePage\"\n//                         className=\"profile-image\"\n//                     />\n//                     <h2 className=\"profile-title\">ProfilePage Information</h2>\n//                 </div>\n//                 <div className={`status-rectangle ${userData.isVerified ? 'verified' : 'not-verified'}`}>\n//                     {userData.isVerified ? 'Verified' : 'Not Verified'}\n//                 </div>\n//                 <div className=\"profile-info\">\n//                     <div className=\"profile-item\">\n//                         <label className=\"profile-label\">Email:</label>\n//                         <input\n//                             type=\"text\"\n//                             name=\"email\"\n//                             value={userData.email}\n//                             onChange={handleInputChange}\n//                             className=\"profile-input\"\n//                             disabled={!isEditing} // Disable input when not in edit mode\n//                         />\n//                     </div>\n//                     <div className=\"profile-item\">\n//                         <label className=\"profile-label\">Username:</label>\n//                         <input\n//                             type=\"text\"\n//                             name=\"username\"\n//                             value={userData.username}\n//                             onChange={handleInputChange}\n//                             className=\"profile-input\"\n//                             disabled={!isEditing} // Disable input when not in edit mode\n//                         />\n//                     </div>\n//                     <button\n//                         className={isEditing ? \"profile-save-button\" : \"profile-edit-button\"}\n//                         onClick={isEditing ? handleSaveClick : handleEditClick}\n//                     >\n//                         {isEditing ? \"Save\" : \"Edit\"}\n//                     </button>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n//\n// export default ProfilePage;\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/pages/ProfileStyle.css';\nimport Navbar from '../components/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfilePage() {\n  _s();\n  const token = localStorage.getItem('authToken');\n  const {\n    userId\n  } = useParams();\n  const [isEditing, setIsEditing] = useState(false);\n  const [userData, setUserData] = useState({\n    email: '',\n    username: '',\n    isVerified: false\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [status, setStatus] = useState('');\n  useEffect(() => {\n    setIsLoading(true);\n    setStatus('');\n    fetch(`http://localhost:3000/api/auth/profile/${userId}`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `${token}`\n      }\n    }).then(response => response.json()).then(data => {\n      setIsLoading(false);\n      if (data.status.statusCode === 200) {\n        setUserData(data.data);\n      } else {\n        setStatus('Error fetching user data');\n      }\n    }).catch(error => {\n      setIsLoading(false);\n      setStatus('Error fetching user data');\n      console.error('Error fetching user data:', error);\n    });\n  }, [userId, token]);\n  const handleSaveClick = () => {\n    console.log('Before update:', userData);\n    setIsLoading(true);\n    setStatus('');\n    fetch(`http://localhost:3000/api/auth/profile/${userId}`, {\n      method: 'PUT',\n      headers: {\n        'Authorization': `${token}`\n      },\n      body: JSON.stringify(userData)\n    }).then(response => response.json()).then(data => {\n      setIsLoading(false);\n      if (data.status.statusCode === 200) {\n        setStatus('Profile updated successfully');\n      } else {\n        setStatus('Error updating profile');\n      }\n    }).catch(error => {\n      setIsLoading(false);\n      setStatus('Error updating profile');\n      console.error('Error updating profile:', error);\n    });\n    console.log('After update:', userData);\n  };\n  const handleEditClick = () => {\n    setIsEditing(true);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserData(prevUserData => ({\n      ...prevUserData,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-card\",\n      children: [token, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: process.env.PUBLIC_URL + '/profile.png',\n          alt: \"ProfilePage\",\n          className: \"profile-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"profile-title\",\n          children: \"ProfilePage Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `status-rectangle ${userData.isVerified ? 'verified' : 'not-verified'}`,\n        children: userData.isVerified ? 'Verified' : 'Not Verified'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"profile-label\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"email\",\n            value: userData.email,\n            onChange: handleInputChange,\n            className: \"profile-input\",\n            disabled: !isEditing || isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"profile-label\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            value: userData.username,\n            onChange: handleInputChange,\n            className: \"profile-input\",\n            disabled: !isEditing || isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: isEditing ? \"profile-save-button\" : \"profile-edit-button\",\n          onClick: isEditing ? handleSaveClick : handleEditClick,\n          disabled: isLoading,\n          children: isLoading ? 'Updating...' : isEditing ? \"Save\" : \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 21\n        }, this), status && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-message\",\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 431,\n    columnNumber: 9\n  }, this);\n}\n_s(ProfilePage, \"N3FQQcfAnHS5xvZptkpTZAE9eJ8=\", false, function () {\n  return [useParams];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Navbar","jsxDEV","_jsxDEV","ProfilePage","_s","token","localStorage","getItem","userId","isEditing","setIsEditing","userData","setUserData","email","username","isVerified","isLoading","setIsLoading","status","setStatus","fetch","method","headers","then","response","json","data","statusCode","catch","error","console","handleSaveClick","log","body","JSON","stringify","handleEditClick","handleInputChange","e","name","value","target","prevUserData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","process","env","PUBLIC_URL","alt","type","onChange","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Projects/NodeJSProjects/map-mark-ui/src/pages/ProfilePage.js"],"sourcesContent":["// // export default ProfilePage;\r\n//\r\n// import React, {useState} from 'react';\r\n// import '../styles/pages/ProfileStyle.css';\r\n// import Navbar from '../components/Navbar';\r\n//\r\n// function ProfilePage() {\r\n//\r\n//     const [isEditing, setIsEditing] = useState(false); // Start with inputs disabled\r\n//     const [userData, setUserData] = useState({\r\n//         email: 'b.alramlawi360@gmail.com',\r\n//         username: 'ggg',\r\n//         isVerified: 'Yes',\r\n//     });\r\n//\r\n//     const handleSaveClick = () => {\r\n//         setIsEditing(false);\r\n//         // Add logic to save updated data here\r\n//     };\r\n//\r\n//     const handleEditClick = () => {\r\n//         setIsEditing(true); // Enable inputs when Edit is clicked\r\n//     };\r\n//\r\n//     const handleInputChange = (e) => {\r\n//         const {name, value} = e.target;\r\n//         setUserData({\r\n//             ...userData,\r\n//             [name]: value,\r\n//         });\r\n//     };\r\n//\r\n//     return (\r\n//         <div className=\"profile-container\">\r\n//             <Navbar/>\r\n//             <div className=\"profile-card\">\r\n//                 <div className=\"profile-header\">\r\n//                     <img\r\n//                         src={process.env.PUBLIC_URL + '/profile.png'}\r\n//                         alt=\"ProfilePage\"\r\n//                         className=\"profile-image\"\r\n//                     />\r\n//                     <h2 className=\"profile-title\">ProfilePage Information</h2>\r\n//                 </div>\r\n//                 <div className={`status-rectangle ${userData.isVerified === 'Yes' ? 'verified' : 'not-verified'}`}>\r\n//                     {userData.isVerified === 'Yes' ? 'Verified' : 'Not Verified'}\r\n//                 </div>\r\n//                 <div className=\"profile-info\">\r\n//                     <div className=\"profile-item\">\r\n//                         <label className=\"profile-label\">Email:</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             name=\"email\"\r\n//                             value={userData.email}\r\n//                             onChange={handleInputChange}\r\n//                             className=\"profile-input\"\r\n//                             disabled={!isEditing} // Disable input when not in edit mode\r\n//                         />\r\n//                     </div>\r\n//                     <div className=\"profile-item\">\r\n//                         <label className=\"profile-label\">Username:</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             name=\"username\"\r\n//                             value={userData.username}\r\n//                             onChange={handleInputChange}\r\n//                             className=\"profile-input\"\r\n//                             disabled={!isEditing} // Disable input when not in edit mode\r\n//                         />\r\n//                     </div>\r\n//                     <button\r\n//                         className={isEditing ? \"profile-save-button\" : \"profile-edit-button\"}\r\n//                         onClick={isEditing ? handleSaveClick : handleEditClick}\r\n//                     >\r\n//                         {isEditing ? \"Save\" : \"Edit\"}\r\n//                     </button>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default ProfilePage;\r\n//\r\n// import React, {useState, useEffect} from 'react';\r\n// import {useParams} from 'react-router-dom';\r\n// import '../styles/pages/ProfileStyle.css';\r\n// import Navbar from '../components/Navbar';\r\n//\r\n// function ProfilePage() {\r\n//     const token = localStorage.getItem('authToken');\r\n//     const {userId} = useParams();\r\n//     const [isEditing, setIsEditing] = useState(false);\r\n//     const [userData, setUserData] = useState({\r\n//         email: '',\r\n//         username: '',\r\n//         isVerified: false,\r\n//     });\r\n//\r\n//     useEffect(() => {\r\n//         // Fetch user data from the backend using an HTTP GET request\r\n//         fetch(`http://localhost:3000/api/auth/profile/${userId}`, {\r\n//             method: 'GET',\r\n//             headers: {\r\n//                 'Authorization': `${token}`, // Include the token in the Authorization header\r\n//             },\r\n//         })\r\n//             .then((response) => response.json())\r\n//             .then((data) => {\r\n//                 if (data.status.statusCode === 200) {\r\n//                     setUserData(data.data); // Update userData state with fetched data\r\n//                 } else {\r\n//                     // Handle error, e.g., redirect to an error page\r\n//                 }\r\n//             })\r\n//             .catch((error) => {\r\n//                 console.error('Error fetching user data:', error);\r\n//                 // Handle error\r\n//             });\r\n//     }, [userId, token]);\r\n//\r\n//     const handleSaveClick = () => {\r\n//         setIsEditing(false);\r\n//\r\n//         // Send updated user data to the backend\r\n//         fetch(`http://localhost:3000/api/auth/update-profile/${userId}`, {\r\n//             method: 'PUT',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json',\r\n//                 'Authorization': `${token}`,\r\n//             },\r\n//             body: JSON.stringify(userData), // Send updated user data\r\n//         })\r\n//             .then((response) => response.json())\r\n//             .then((data) => {\r\n//                 if (data.status.statusCode === 200) {\r\n//                     // Data updated successfully\r\n//                 } else {\r\n//                     // Handle error, e.g., show an error message\r\n//                 }\r\n//             })\r\n//             .catch((error) => {\r\n//                 console.error('Error updating user data:', error);\r\n//                 // Handle error\r\n//             });\r\n//     };\r\n//\r\n//     const handleEditClick = () => {\r\n//         setIsEditing(true);\r\n//     };\r\n//\r\n//     const handleInputChange = (e) => {\r\n//         const {name, value} = e.target;\r\n//         setUserData({\r\n//             ...userData,\r\n//             [name]: value,\r\n//         });\r\n//     };\r\n//\r\n//     return (\r\n//         <div className=\"profile-container\">\r\n//             <Navbar/>\r\n//             <div className=\"profile-card\">\r\n//                 {token}\r\n//                 <div className=\"profile-header\">\r\n//                     <img\r\n//                         src={process.env.PUBLIC_URL + '/profile.png'}\r\n//                         alt=\"ProfilePage\"\r\n//                         className=\"profile-image\"\r\n//                     />\r\n//                     <h2 className=\"profile-title\">ProfilePage Information</h2>\r\n//                 </div>\r\n//                 <div className={`status-rectangle ${userData.isVerified ? 'verified' : 'not-verified'}`}>\r\n//                     {userData.isVerified ? 'Verified' : 'Not Verified'}\r\n//                 </div>\r\n//                 <div className=\"profile-info\">\r\n//                     <div className=\"profile-item\">\r\n//                         <label className=\"profile-label\">Email:</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             name=\"email\"\r\n//                             value={userData.email}\r\n//                             onChange={handleInputChange}\r\n//                             className=\"profile-input\"\r\n//                             disabled={!isEditing} // Disable input when not in edit mode\r\n//                         />\r\n//                     </div>\r\n//                     <div className=\"profile-item\">\r\n//                         <label className=\"profile-label\">Username:</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             name=\"username\"\r\n//                             value={userData.username}\r\n//                             onChange={handleInputChange}\r\n//                             className=\"profile-input\"\r\n//                             disabled={!isEditing} // Disable input when not in edit mode\r\n//                         />\r\n//                     </div>\r\n//                     <button\r\n//                         className={isEditing ? \"profile-save-button\" : \"profile-edit-button\"}\r\n//                         onClick={isEditing ? handleSaveClick : handleEditClick}\r\n//                     >\r\n//                         {isEditing ? \"Save\" : \"Edit\"}\r\n//                     </button>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n//\r\n// export default ProfilePage;\r\n\r\n//\r\n// import React, {useState, useEffect} from 'react';\r\n// import {useParams} from 'react-router-dom';\r\n// import '../styles/pages/ProfileStyle.css';\r\n// import Navbar from '../components/Navbar';\r\n//\r\n// function ProfilePage() {\r\n//     const token = localStorage.getItem('authToken');\r\n//     const {userId} = useParams();\r\n//     const [isEditing, setIsEditing] = useState(false);\r\n//     const [userData, setUserData] = useState({\r\n//         email: '',\r\n//         username: '',\r\n//         isVerified: false,\r\n//     });\r\n//\r\n//     useEffect(() => {\r\n//         // Fetch user data from the backend using an HTTP GET request\r\n//         fetch(`http://localhost:3000/api/auth/profile/${userId}`, {\r\n//             method: 'GET',\r\n//             headers: {\r\n//                 'Authorization': `${token}`, // Include the token in the Authorization header\r\n//             },\r\n//         })\r\n//             .then((response) => response.json())\r\n//             .then((data) => {\r\n//                 if (data.status.statusCode === 200) {\r\n//                     setUserData(data.data); // Update userData state with fetched data\r\n//                 } else {\r\n//                     // Handle error, e.g., redirect to an error page\r\n//                 }\r\n//             })\r\n//             .catch((error) => {\r\n//                 console.error('Error fetching user data:', error);\r\n//                 // Handle error\r\n//             });\r\n//     }, [userId, token]);\r\n//\r\n//     const handleSaveClick = () => {\r\n//         setIsEditing(false);\r\n//\r\n//         // Send updated user data to the backend\r\n//         fetch(`http://localhost:3000/api/auth/update-profile/${userId}`, {\r\n//             method: 'PUT',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json',\r\n//                 'Authorization': `${token}`,\r\n//             },\r\n//             body: JSON.stringify(userData), // Send updated user data\r\n//         })\r\n//             .then((response) => response.json())\r\n//             .then((data) => {\r\n//\r\n//             })\r\n//             .catch((error) => {\r\n//             });\r\n//     };\r\n//\r\n//     const handleEditClick = () => {\r\n//         setIsEditing(true);\r\n//     };\r\n//\r\n//     const handleInputChange = (e) => {\r\n//         const {name, value} = e.target;\r\n//         setUserData({\r\n//             ...userData,\r\n//             [name]: value,\r\n//         });\r\n//     };\r\n//\r\n//     return (\r\n//         <div className=\"profile-container\">\r\n//             <Navbar/>\r\n//             <div className=\"profile-card\">\r\n//                 {token}\r\n//                 <div className=\"profile-header\">\r\n//                     <img\r\n//                         src={process.env.PUBLIC_URL + '/profile.png'}\r\n//                         alt=\"ProfilePage\"\r\n//                         className=\"profile-image\"\r\n//                     />\r\n//                     <h2 className=\"profile-title\">ProfilePage Information</h2>\r\n//                 </div>\r\n//                 <div className={`status-rectangle ${userData.isVerified ? 'verified' : 'not-verified'}`}>\r\n//                     {userData.isVerified ? 'Verified' : 'Not Verified'}\r\n//                 </div>\r\n//                 <div className=\"profile-info\">\r\n//                     <div className=\"profile-item\">\r\n//                         <label className=\"profile-label\">Email:</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             name=\"email\"\r\n//                             value={userData.email}\r\n//                             onChange={handleInputChange}\r\n//                             className=\"profile-input\"\r\n//                             disabled={!isEditing} // Disable input when not in edit mode\r\n//                         />\r\n//                     </div>\r\n//                     <div className=\"profile-item\">\r\n//                         <label className=\"profile-label\">Username:</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             name=\"username\"\r\n//                             value={userData.username}\r\n//                             onChange={handleInputChange}\r\n//                             className=\"profile-input\"\r\n//                             disabled={!isEditing} // Disable input when not in edit mode\r\n//                         />\r\n//                     </div>\r\n//                     <button\r\n//                         className={isEditing ? \"profile-save-button\" : \"profile-edit-button\"}\r\n//                         onClick={isEditing ? handleSaveClick : handleEditClick}\r\n//                     >\r\n//                         {isEditing ? \"Save\" : \"Edit\"}\r\n//                     </button>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n//\r\n// export default ProfilePage;\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport '../styles/pages/ProfileStyle.css';\r\nimport Navbar from '../components/Navbar';\r\n\r\nfunction ProfilePage() {\r\n    const token = localStorage.getItem('authToken');\r\n    const { userId } = useParams();\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [userData, setUserData] = useState({\r\n        email: '',\r\n        username: '',\r\n        isVerified: false,\r\n    });\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [status, setStatus] = useState('');\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        setStatus('');\r\n\r\n        fetch(`http://localhost:3000/api/auth/profile/${userId}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `${token}`,\r\n            },\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setIsLoading(false);\r\n\r\n                if (data.status.statusCode === 200) {\r\n                    setUserData(data.data);\r\n                } else {\r\n                    setStatus('Error fetching user data');\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setIsLoading(false);\r\n                setStatus('Error fetching user data');\r\n                console.error('Error fetching user data:', error);\r\n            });\r\n    }, [userId, token]);\r\n\r\n    const handleSaveClick = () => {\r\n        console.log('Before update:', userData);\r\n\r\n        setIsLoading(true);\r\n        setStatus('');\r\n\r\n\r\n\r\n        fetch(`http://localhost:3000/api/auth/profile/${userId}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Authorization': `${token}`,\r\n            },\r\n            body: JSON.stringify(userData),\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setIsLoading(false);\r\n\r\n                if (data.status.statusCode === 200) {\r\n                    setStatus('Profile updated successfully');\r\n                } else {\r\n                    setStatus('Error updating profile');\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setIsLoading(false);\r\n                setStatus('Error updating profile');\r\n                console.error('Error updating profile:', error);\r\n            });\r\n        console.log('After update:', userData);\r\n\r\n    };\r\n\r\n    const handleEditClick = () => {\r\n        setIsEditing(true);\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUserData((prevUserData) => ({\r\n            ...prevUserData,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"profile-container\">\r\n            <Navbar />\r\n            <div className=\"profile-card\">\r\n                {token}\r\n                <div className=\"profile-header\">\r\n                    <img\r\n                        src={process.env.PUBLIC_URL + '/profile.png'}\r\n                        alt=\"ProfilePage\"\r\n                        className=\"profile-image\"\r\n                    />\r\n                    <h2 className=\"profile-title\">ProfilePage Information</h2>\r\n                </div>\r\n                <div className={`status-rectangle ${userData.isVerified ? 'verified' : 'not-verified'}`}>\r\n                    {userData.isVerified ? 'Verified' : 'Not Verified'}\r\n                </div>\r\n                <div className=\"profile-info\">\r\n                    <div className=\"profile-item\">\r\n                        <label className=\"profile-label\">Email:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            value={userData.email}\r\n                            onChange={handleInputChange}\r\n                            className=\"profile-input\"\r\n                            disabled={!isEditing || isLoading}\r\n                        />\r\n                    </div>\r\n                    <div className=\"profile-item\">\r\n                        <label className=\"profile-label\">Username:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            value={userData.username}\r\n                            onChange={handleInputChange}\r\n                            className=\"profile-input\"\r\n                            disabled={!isEditing || isLoading}\r\n                        />\r\n                    </div>\r\n                    <button\r\n                        className={isEditing ? \"profile-save-button\" : \"profile-edit-button\"}\r\n                        onClick={isEditing ? handleSaveClick : handleEditClick}\r\n                        disabled={isLoading}\r\n                    >\r\n                        {isLoading ? 'Updating...' : (isEditing ? \"Save\" : \"Edit\")}\r\n                    </button>\r\n                    {status && <div className=\"status-message\">{status}</div>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfilePage;\r\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}