{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\NodeJSProjects\\\\map-mark-ui\\\\src\\\\components\\\\Navbar.js\",\n  _s = $RefreshSig$();\n// import React, {useState} from 'react';\n// import {Link, useHistory} from 'react-router-dom';\n// import '../styles/components/NavbarStyle.css';\n//\n// function Navbar() {\n//     const history = useHistory();\n//\n//     // Check if the user is authenticated\n//     const isAuthenticated = !!localStorage.getItem('authToken');\n//\n//     // State to track the loading status\n//     const [loading, setLoading] = useState(false);\n//\n//     // Function to handle logout\n//     const handleLogout = () => {\n//         // Show the loading animation\n//         setLoading(true);\n//\n//         // Simulate a delay (you can replace this with your actual logout logic)\n//         setTimeout(() => {\n//             // Clear the authentication token from localStorage\n//             localStorage.removeItem('authToken');\n//\n//             // Hide the loading animation\n//             setLoading(false);\n//\n//             // Redirect to the login page\n//             history.push('/login');\n//         }, 2000); // Simulated 2-second delay for the loading animation\n//     };\n//\n//     return (<nav className=\"navbar\">\n//             <div className=\"navbar-container\">\n//                 <Link to=\"/\" className=\"navbar-logo\">\n//                     Map Mark\n//                 </Link>\n//                 <ul className=\"navbar-menu\">\n//                     <li className=\"navbar-item\">\n//                         <a href=\"/home\" className=\"navbar-link\">\n//                             Home\n//                         </a>\n//                     </li>\n//                     <li className=\"navbar-item\">\n//                         <a href=\"/profile\" className=\"navbar-link\">\n//                             Profile\n//                         </a>\n//                     </li>\n//                     {isAuthenticated ? (<li className=\"navbar-item\">\n//                             {loading ? (<span>Loading...</span> // Display loading message or animation\n//                             ) : (<a href=\"/login\" className=\"navbar-link\" onClick={handleLogout}>\n//                                     Logout\n//                                 </a>)}\n//                         </li>) : null}\n//                 </ul>\n//             </div>\n//         </nav>);\n// }\n//\n// export default Navbar;\nimport React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport '../styles/components/NavbarStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Navbar() {\n  _s();\n  const history = useHistory();\n\n  // Check if the user is authenticated\n  const isAuthenticated = !!localStorage.getItem('authToken');\n\n  // State to track the loading status\n  const [loading, setLoading] = useState(false);\n\n  // Function to handle logout\n  const handleLogout = () => {\n    // Show the confirmation dialog\n    const confirmLogout = window.confirm('Are you sure you want to logout?');\n    if (confirmLogout) {\n      // User confirmed, proceed with logout\n\n      // Show the loading animation\n      setLoading(true);\n\n      // Simulate a delay (you can replace this with your actual logout logic)\n      setTimeout(() => {\n        // Clear the authentication token from localStorage\n        localStorage.removeItem('authToken');\n\n        // Hide the loading animation\n        setLoading(false);\n\n        // Redirect to the login page\n        history.push('/login');\n      }, 2000); // Simulated 2-second delay for the loading animation\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-container\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"navbar-logo\",\n        children: \"Map Mark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"navbar-menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"navbar-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/home\",\n            className: \"navbar-link\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"navbar-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/profile\",\n            className: \"navbar-link\",\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), isAuthenticated ? /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"navbar-item\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 33\n          }, this) // Display loading message or animation\n          : /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/login\",\n            className: \"navbar-link\",\n            onClick: handleLogout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n_s(Navbar, \"7cklWyBK6NEibDH5DpDw1pqvq04=\", false, function () {\n  return [useHistory];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","Link","useHistory","jsxDEV","_jsxDEV","Navbar","_s","history","isAuthenticated","localStorage","getItem","loading","setLoading","handleLogout","confirmLogout","window","confirm","setTimeout","removeItem","push","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","href","onClick","_c","$RefreshReg$"],"sources":["C:/Projects/NodeJSProjects/map-mark-ui/src/components/Navbar.js"],"sourcesContent":["// import React, {useState} from 'react';\r\n// import {Link, useHistory} from 'react-router-dom';\r\n// import '../styles/components/NavbarStyle.css';\r\n//\r\n// function Navbar() {\r\n//     const history = useHistory();\r\n//\r\n//     // Check if the user is authenticated\r\n//     const isAuthenticated = !!localStorage.getItem('authToken');\r\n//\r\n//     // State to track the loading status\r\n//     const [loading, setLoading] = useState(false);\r\n//\r\n//     // Function to handle logout\r\n//     const handleLogout = () => {\r\n//         // Show the loading animation\r\n//         setLoading(true);\r\n//\r\n//         // Simulate a delay (you can replace this with your actual logout logic)\r\n//         setTimeout(() => {\r\n//             // Clear the authentication token from localStorage\r\n//             localStorage.removeItem('authToken');\r\n//\r\n//             // Hide the loading animation\r\n//             setLoading(false);\r\n//\r\n//             // Redirect to the login page\r\n//             history.push('/login');\r\n//         }, 2000); // Simulated 2-second delay for the loading animation\r\n//     };\r\n//\r\n//     return (<nav className=\"navbar\">\r\n//             <div className=\"navbar-container\">\r\n//                 <Link to=\"/\" className=\"navbar-logo\">\r\n//                     Map Mark\r\n//                 </Link>\r\n//                 <ul className=\"navbar-menu\">\r\n//                     <li className=\"navbar-item\">\r\n//                         <a href=\"/home\" className=\"navbar-link\">\r\n//                             Home\r\n//                         </a>\r\n//                     </li>\r\n//                     <li className=\"navbar-item\">\r\n//                         <a href=\"/profile\" className=\"navbar-link\">\r\n//                             Profile\r\n//                         </a>\r\n//                     </li>\r\n//                     {isAuthenticated ? (<li className=\"navbar-item\">\r\n//                             {loading ? (<span>Loading...</span> // Display loading message or animation\r\n//                             ) : (<a href=\"/login\" className=\"navbar-link\" onClick={handleLogout}>\r\n//                                     Logout\r\n//                                 </a>)}\r\n//                         </li>) : null}\r\n//                 </ul>\r\n//             </div>\r\n//         </nav>);\r\n// }\r\n//\r\n// export default Navbar;\r\nimport React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport '../styles/components/NavbarStyle.css';\r\n\r\nfunction Navbar() {\r\n    const history = useHistory();\r\n\r\n    // Check if the user is authenticated\r\n    const isAuthenticated = !!localStorage.getItem('authToken');\r\n\r\n    // State to track the loading status\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    // Function to handle logout\r\n    const handleLogout = () => {\r\n        // Show the confirmation dialog\r\n        const confirmLogout = window.confirm('Are you sure you want to logout?');\r\n\r\n        if (confirmLogout) {\r\n            // User confirmed, proceed with logout\r\n\r\n            // Show the loading animation\r\n            setLoading(true);\r\n\r\n            // Simulate a delay (you can replace this with your actual logout logic)\r\n            setTimeout(() => {\r\n                // Clear the authentication token from localStorage\r\n                localStorage.removeItem('authToken');\r\n\r\n                // Hide the loading animation\r\n                setLoading(false);\r\n\r\n                // Redirect to the login page\r\n                history.push('/login');\r\n            }, 2000); // Simulated 2-second delay for the loading animation\r\n        }\r\n    };\r\n\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <div className=\"navbar-container\">\r\n                <Link to=\"/\" className=\"navbar-logo\">\r\n                    Map Mark\r\n                </Link>\r\n                <ul className=\"navbar-menu\">\r\n                    <li className=\"navbar-item\">\r\n                        <a href=\"/home\" className=\"navbar-link\">\r\n                            Home\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"navbar-item\">\r\n                        <a href=\"/profile\" className=\"navbar-link\">\r\n                            Profile\r\n                        </a>\r\n                    </li>\r\n                    {isAuthenticated ? (\r\n                        <li className=\"navbar-item\">\r\n                            {loading ? (\r\n                                <span>Loading...</span> // Display loading message or animation\r\n                            ) : (\r\n                                <a\r\n                                    href=\"/login\"\r\n                                    className=\"navbar-link\"\r\n                                    onClick={handleLogout}\r\n                                >\r\n                                    Logout\r\n                                </a>\r\n                            )}\r\n                        </li>\r\n                    ) : null}\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}