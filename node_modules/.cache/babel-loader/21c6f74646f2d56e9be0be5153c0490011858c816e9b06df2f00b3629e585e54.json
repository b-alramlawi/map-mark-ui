{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\NodeJSProjects\\\\map-mark-ui\\\\src\\\\components\\\\GoogleMap.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import {GoogleMap, LoadScript} from '@react-google-maps/api';\n//\n// const containerStyle = {\n//     width: '100%', // Full width of the available space\n//     height: '100%', // Full height of the available space\n// };\n//\n//\n// const center = {\n//     lat: 30.046981762780838,\n//     lng: 31.237174094852456\n// };\n//\n// function MyGoogleMap() {\n//     return (\n//         <LoadScript\n//             googleMapsApiKey=\"AIzaSyC3phyjN4feKgzWWAVQOURiVIkvYlSMWLg\"\n//         >\n//             <GoogleMap\n//                 mapContainerStyle={containerStyle}\n//                 center={center}\n//                 zoom={14}\n//             >\n//                 {/* You can add markers, polygons, or other map elements here */}\n//             </GoogleMap>\n//         </LoadScript>\n//     );\n// }\n//\n// export default MyGoogleMap;\n\nimport React, { useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from 'use-places-autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '100%'\n};\nconst defaultCenter = {\n  lat: 30.046981762780838,\n  lng: 31.237174094852456\n};\nfunction MyGoogleMap() {\n  _s();\n  const [map, setMap] = useState(null);\n  const [searchValue, setSearchValue] = useState('');\n  const [markers, setMarkers] = useState([]);\n  const {\n    value,\n    suggestions: {\n      status\n    },\n    setValue,\n    clearSuggestions\n  } = usePlacesAutocomplete();\n  const onMapLoad = map => {\n    setMap(map);\n  };\n  const onSearchChange = e => {\n    setValue(e.target.value);\n    setSearchValue(e.target.value);\n  };\n  const onSearchSubmit = e => {\n    e.preventDefault();\n    clearSuggestions();\n\n    // Use the selected place value to perform a search\n    getGeocode({\n      address: searchValue\n    }).then(results => getLatLng(results[0])).then(latLng => {\n      setMarkers([latLng]);\n    }).catch(error => console.error('Error:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSearchSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search for places...\",\n        value: value,\n        onChange: onSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"YOUR_API_KEY\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: containerStyle,\n        center: defaultCenter,\n        zoom: 14,\n        onLoad: onMapLoad,\n        children: markers.map((position, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: position\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n_s(MyGoogleMap, \"y22I5N+0rlfuwZzpdjxL90ubkyg=\", false, function () {\n  return [usePlacesAutocomplete];\n});\n_c = MyGoogleMap;\nexport default MyGoogleMap;\nvar _c;\n$RefreshReg$(_c, \"MyGoogleMap\");","map":{"version":3,"names":["React","useState","GoogleMap","LoadScript","Marker","usePlacesAutocomplete","getGeocode","getLatLng","jsxDEV","_jsxDEV","containerStyle","width","height","defaultCenter","lat","lng","MyGoogleMap","_s","map","setMap","searchValue","setSearchValue","markers","setMarkers","value","suggestions","status","setValue","clearSuggestions","onMapLoad","onSearchChange","e","target","onSearchSubmit","preventDefault","address","then","results","latLng","catch","error","console","children","onSubmit","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","googleMapsApiKey","mapContainerStyle","center","zoom","onLoad","position","index","_c","$RefreshReg$"],"sources":["C:/Projects/NodeJSProjects/map-mark-ui/src/components/GoogleMap.js"],"sourcesContent":["// import React from 'react';\r\n// import {GoogleMap, LoadScript} from '@react-google-maps/api';\r\n//\r\n// const containerStyle = {\r\n//     width: '100%', // Full width of the available space\r\n//     height: '100%', // Full height of the available space\r\n// };\r\n//\r\n//\r\n// const center = {\r\n//     lat: 30.046981762780838,\r\n//     lng: 31.237174094852456\r\n// };\r\n//\r\n// function MyGoogleMap() {\r\n//     return (\r\n//         <LoadScript\r\n//             googleMapsApiKey=\"AIzaSyC3phyjN4feKgzWWAVQOURiVIkvYlSMWLg\"\r\n//         >\r\n//             <GoogleMap\r\n//                 mapContainerStyle={containerStyle}\r\n//                 center={center}\r\n//                 zoom={14}\r\n//             >\r\n//                 {/* You can add markers, polygons, or other map elements here */}\r\n//             </GoogleMap>\r\n//         </LoadScript>\r\n//     );\r\n// }\r\n//\r\n// export default MyGoogleMap;\r\n\r\nimport React, { useState } from 'react';\r\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\r\nimport usePlacesAutocomplete, {\r\n    getGeocode,\r\n    getLatLng,\r\n} from 'use-places-autocomplete';\r\n\r\nconst containerStyle = {\r\n    width: '100%',\r\n    height: '100%',\r\n};\r\n\r\nconst defaultCenter = {\r\n    lat: 30.046981762780838,\r\n    lng: 31.237174094852456,\r\n};\r\n\r\nfunction MyGoogleMap() {\r\n    const [map, setMap] = useState(null);\r\n    const [searchValue, setSearchValue] = useState('');\r\n    const [markers, setMarkers] = useState([]);\r\n    const { value, suggestions: { status }, setValue, clearSuggestions } = usePlacesAutocomplete();\r\n\r\n    const onMapLoad = (map) => {\r\n        setMap(map);\r\n    };\r\n\r\n    const onSearchChange = (e) => {\r\n        setValue(e.target.value);\r\n        setSearchValue(e.target.value);\r\n    };\r\n\r\n    const onSearchSubmit = (e) => {\r\n        e.preventDefault();\r\n        clearSuggestions();\r\n\r\n        // Use the selected place value to perform a search\r\n        getGeocode({ address: searchValue })\r\n            .then((results) => getLatLng(results[0]))\r\n            .then((latLng) => {\r\n                setMarkers([latLng]);\r\n            })\r\n            .catch((error) => console.error('Error:', error));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSearchSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search for places...\"\r\n                    value={value}\r\n                    onChange={onSearchChange}\r\n                />\r\n                <button type=\"submit\">Search</button>\r\n            </form>\r\n\r\n            <LoadScript googleMapsApiKey=\"YOUR_API_KEY\">\r\n                <GoogleMap\r\n                    mapContainerStyle={containerStyle}\r\n                    center={defaultCenter}\r\n                    zoom={14}\r\n                    onLoad={onMapLoad}\r\n                >\r\n                    {markers.map((position, index) => (\r\n                        <Marker\r\n                            key={index}\r\n                            position={position}\r\n                        />\r\n                    ))}\r\n                </GoogleMap>\r\n            </LoadScript>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyGoogleMap;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}