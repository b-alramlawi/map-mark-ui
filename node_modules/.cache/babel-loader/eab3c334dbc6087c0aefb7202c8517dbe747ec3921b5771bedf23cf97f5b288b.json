{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\NodeJSProjects\\\\map-mark-ui\\\\src\\\\pages\\\\authentication\\\\ForgotPasswordPage.js\",\n  _s = $RefreshSig$();\n// import React, {useState} from 'react';\n// import '../../styles/pages/authentication/ForgotPasswordStyle.css'; // Import the CSS for styling\n//\n// function ForgotPasswordPage() {\n//     const [email, setEmail] = useState('');\n//     const [message, setMessage] = useState('');\n//\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//\n//         // Add your logic here to send a password reset email\n//         // You can use an API call to send the email\n//\n//         // Display a success or error message based on the result\n//         setMessage('Password reset email sent successfully.');\n//     };\n//\n//     return (\n//         <div className=\"forgot-password-container\" style={{backgroundImage: `url(${process.env.PUBLIC_URL}/map.png)`}}>\n//             <div className=\"forgot-password-form\">\n//                 <h2 className=\"form-title\">Forgot Password</h2>\n//                 <form onSubmit={handleSubmit}>\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"email\">Email:</label>\n//                         <input\n//                             type=\"email\"\n//                             id=\"email\"\n//                             value={email}\n//                             onChange={(e) => setEmail(e.target.value)}\n//                             required\n//                             className=\"input-field\"\n//                         />\n//                     </div>\n//                     <button type=\"submit\" className=\"submit-button\">\n//                         Send Reset Email\n//                     </button>\n//                 </form>\n//                 <p className=\"message\">{message}</p>\n//             </div>\n//         </div>\n//     );\n// }\n//\n// export default ForgotPasswordPage;\n\nimport React, { useState } from 'react';\nimport '../../styles/pages/authentication/ForgotPasswordStyle.css'; // Import the CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ForgotPasswordPage() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Add your logic here to send a password reset email\n    try {\n      const response = await fetch('/api/auth/reset-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      if (response.status === 200) {\n        setMessage('Password reset email sent successfully.');\n      } else {\n        setMessage('Error sending password reset email. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error sending password reset email:', error);\n      setMessage('Internal server error. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forgot-password-container\",\n    style: {\n      backgroundImage: `url(${process.env.PUBLIC_URL}/map.png)`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forgot-password-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"form-title\",\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true,\n            className: \"input-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          children: \"Send Reset Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n_s(ForgotPasswordPage, \"mxdRTHxkiTeLOv2akPbesFCh75U=\");\n_c = ForgotPasswordPage;\nexport default ForgotPasswordPage;\nvar _c;\n$RefreshReg$(_c, \"ForgotPasswordPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ForgotPasswordPage","_s","email","setEmail","message","setMessage","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","status","error","console","className","style","backgroundImage","process","env","PUBLIC_URL","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Projects/NodeJSProjects/map-mark-ui/src/pages/authentication/ForgotPasswordPage.js"],"sourcesContent":["// import React, {useState} from 'react';\r\n// import '../../styles/pages/authentication/ForgotPasswordStyle.css'; // Import the CSS for styling\r\n//\r\n// function ForgotPasswordPage() {\r\n//     const [email, setEmail] = useState('');\r\n//     const [message, setMessage] = useState('');\r\n//\r\n//     const handleSubmit = (e) => {\r\n//         e.preventDefault();\r\n//\r\n//         // Add your logic here to send a password reset email\r\n//         // You can use an API call to send the email\r\n//\r\n//         // Display a success or error message based on the result\r\n//         setMessage('Password reset email sent successfully.');\r\n//     };\r\n//\r\n//     return (\r\n//         <div className=\"forgot-password-container\" style={{backgroundImage: `url(${process.env.PUBLIC_URL}/map.png)`}}>\r\n//             <div className=\"forgot-password-form\">\r\n//                 <h2 className=\"form-title\">Forgot Password</h2>\r\n//                 <form onSubmit={handleSubmit}>\r\n//                     <div className=\"form-group\">\r\n//                         <label htmlFor=\"email\">Email:</label>\r\n//                         <input\r\n//                             type=\"email\"\r\n//                             id=\"email\"\r\n//                             value={email}\r\n//                             onChange={(e) => setEmail(e.target.value)}\r\n//                             required\r\n//                             className=\"input-field\"\r\n//                         />\r\n//                     </div>\r\n//                     <button type=\"submit\" className=\"submit-button\">\r\n//                         Send Reset Email\r\n//                     </button>\r\n//                 </form>\r\n//                 <p className=\"message\">{message}</p>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n//\r\n// export default ForgotPasswordPage;\r\n\r\nimport React, { useState } from 'react';\r\nimport '../../styles/pages/authentication/ForgotPasswordStyle.css'; // Import the CSS for styling\r\n\r\nfunction ForgotPasswordPage() {\r\n    const [email, setEmail] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Add your logic here to send a password reset email\r\n        try {\r\n            const response = await fetch('/api/auth/reset-password', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ email }),\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                setMessage('Password reset email sent successfully.');\r\n            } else {\r\n                setMessage('Error sending password reset email. Please try again.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error sending password reset email:', error);\r\n            setMessage('Internal server error. Please try again later.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"forgot-password-container\" style={{ backgroundImage: `url(${process.env.PUBLIC_URL}/map.png)` }}>\r\n            <div className=\"forgot-password-form\">\r\n                <h2 className=\"form-title\">Forgot Password</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email:</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            required\r\n                            className=\"input-field\"\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"submit-button\">\r\n                        Send Reset Email\r\n                    </button>\r\n                </form>\r\n                <p className=\"message\">{message}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ForgotPasswordPage;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}