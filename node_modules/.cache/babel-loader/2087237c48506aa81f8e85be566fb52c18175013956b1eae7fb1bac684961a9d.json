{"ast":null,"code":"import _slicedToArray from\"C:/Projects/NodeJSProjects/map-mark-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import'../../styles/pages/authentication/ForgotPasswordStyle.css';// Import the CSS for styling\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ForgotPasswordPage(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),message=_useState4[0],setMessage=_useState4[1];var handleSubmit=function handleSubmit(e){e.preventDefault();// Add your logic here to send a password reset email\n// You can use an API call to send the email\n// Display a success or error message based on the result\nsetMessage('Password reset email sent successfully.');};return/*#__PURE__*/_jsx(\"div\",{className:\"forgot-password-container\",style:{backgroundImage:\"url(\".concat(process.env.PUBLIC_URL,\"/map.png)\")},children:/*#__PURE__*/_jsxs(\"div\",{className:\"forgot-password-form\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"form-title\",children:\"Forgot Password\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);},required:true,className:\"input-field\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"submit-button\",children:\"Send Reset Email\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"message\",children:message})]})});}export default ForgotPasswordPage;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","ForgotPasswordPage","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","message","setMessage","handleSubmit","e","preventDefault","className","style","backgroundImage","concat","process","env","PUBLIC_URL","children","onSubmit","htmlFor","type","id","value","onChange","target","required"],"sources":["C:/Projects/NodeJSProjects/map-mark-ui/src/pages/authentication/ForgotPasswordPage.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport '../../styles/pages/authentication/ForgotPasswordStyle.css'; // Import the CSS for styling\r\n\r\nfunction ForgotPasswordPage() {\r\n    const [email, setEmail] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Add your logic here to send a password reset email\r\n        // You can use an API call to send the email\r\n\r\n        // Display a success or error message based on the result\r\n        setMessage('Password reset email sent successfully.');\r\n    };\r\n\r\n    return (\r\n        <div className=\"forgot-password-container\" style={{backgroundImage: `url(${process.env.PUBLIC_URL}/map.png)`}}>\r\n            <div className=\"forgot-password-form\">\r\n                <h2 className=\"form-title\">Forgot Password</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email:</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            required\r\n                            className=\"input-field\"\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"submit-button\">\r\n                        Send Reset Email\r\n                    </button>\r\n                </form>\r\n                <p className=\"message\">{message}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ForgotPasswordPage;\r\n"],"mappings":"4HAAA,MAAO,CAAAA,KAAK,EAAGC,QAAQ,KAAO,OAAO,CACrC,MAAO,2DAA2D,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEpE,QAAS,CAAAC,kBAAkBA,CAAA,CAAG,CAC1B,IAAAC,SAAA,CAA0BN,QAAQ,CAAC,EAAE,CAAC,CAAAO,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA/BG,KAAK,CAAAF,UAAA,IAAEG,QAAQ,CAAAH,UAAA,IACtB,IAAAI,UAAA,CAA8BX,QAAQ,CAAC,EAAE,CAAC,CAAAY,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAnCE,OAAO,CAAAD,UAAA,IAAEE,UAAU,CAAAF,UAAA,IAE1B,GAAM,CAAAG,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAIC,CAAC,CAAK,CACxBA,CAAC,CAACC,cAAc,CAAC,CAAC,CAElB;AACA;AAEA;AACAH,UAAU,CAAC,yCAAyC,CAAC,CACzD,CAAC,CAED,mBACIZ,IAAA,QAAKgB,SAAS,CAAC,2BAA2B,CAACC,KAAK,CAAE,CAACC,eAAe,QAAAC,MAAA,CAASC,OAAO,CAACC,GAAG,CAACC,UAAU,aAAW,CAAE,CAAAC,QAAA,cAC1GrB,KAAA,QAAKc,SAAS,CAAC,sBAAsB,CAAAO,QAAA,eACjCvB,IAAA,OAAIgB,SAAS,CAAC,YAAY,CAAAO,QAAA,CAAC,iBAAe,CAAI,CAAC,cAC/CrB,KAAA,SAAMsB,QAAQ,CAAEX,YAAa,CAAAU,QAAA,eACzBrB,KAAA,QAAKc,SAAS,CAAC,YAAY,CAAAO,QAAA,eACvBvB,IAAA,UAAOyB,OAAO,CAAC,OAAO,CAAAF,QAAA,CAAC,QAAM,CAAO,CAAC,cACrCvB,IAAA,UACI0B,IAAI,CAAC,OAAO,CACZC,EAAE,CAAC,OAAO,CACVC,KAAK,CAAErB,KAAM,CACbsB,QAAQ,CAAE,SAAAA,SAACf,CAAC,QAAK,CAAAN,QAAQ,CAACM,CAAC,CAACgB,MAAM,CAACF,KAAK,CAAC,EAAC,CAC1CG,QAAQ,MACRf,SAAS,CAAC,aAAa,CAC1B,CAAC,EACD,CAAC,cACNhB,IAAA,WAAQ0B,IAAI,CAAC,QAAQ,CAACV,SAAS,CAAC,eAAe,CAAAO,QAAA,CAAC,kBAEhD,CAAQ,CAAC,EACP,CAAC,cACPvB,IAAA,MAAGgB,SAAS,CAAC,SAAS,CAAAO,QAAA,CAAEZ,OAAO,CAAI,CAAC,EACnC,CAAC,CACL,CAAC,CAEd,CAEA,cAAe,CAAAR,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}