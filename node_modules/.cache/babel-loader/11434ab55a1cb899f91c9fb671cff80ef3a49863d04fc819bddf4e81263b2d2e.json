{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\NodeJSProjects\\\\map-mark-ui\\\\src\\\\pages\\\\ProfilePage.js\",\n  _s = $RefreshSig$();\n// // export default ProfilePage;\n//\n// import React, {useState} from 'react';\n// import '../styles/pages/ProfileStyle.css';\n// import Navbar from '../components/Navbar';\n//\n// function ProfilePage() {\n//\n//     const [isEditing, setIsEditing] = useState(false); // Start with inputs disabled\n//     const [userData, setUserData] = useState({\n//         email: 'b.alramlawi360@gmail.com',\n//         username: 'ggg',\n//         isVerified: 'Yes',\n//     });\n//\n//     const handleSaveClick = () => {\n//         setIsEditing(false);\n//         // Add logic to save updated data here\n//     };\n//\n//     const handleEditClick = () => {\n//         setIsEditing(true); // Enable inputs when Edit is clicked\n//     };\n//\n//     const handleInputChange = (e) => {\n//         const {name, value} = e.target;\n//         setUserData({\n//             ...userData,\n//             [name]: value,\n//         });\n//     };\n//\n//     return (\n//         <div className=\"profile-container\">\n//             <Navbar/>\n//             <div className=\"profile-card\">\n//                 <div className=\"profile-header\">\n//                     <img\n//                         src={process.env.PUBLIC_URL + '/profile.png'}\n//                         alt=\"ProfilePage\"\n//                         className=\"profile-image\"\n//                     />\n//                     <h2 className=\"profile-title\">ProfilePage Information</h2>\n//                 </div>\n//                 <div className={`status-rectangle ${userData.isVerified === 'Yes' ? 'verified' : 'not-verified'}`}>\n//                     {userData.isVerified === 'Yes' ? 'Verified' : 'Not Verified'}\n//                 </div>\n//                 <div className=\"profile-info\">\n//                     <div className=\"profile-item\">\n//                         <label className=\"profile-label\">Email:</label>\n//                         <input\n//                             type=\"text\"\n//                             name=\"email\"\n//                             value={userData.email}\n//                             onChange={handleInputChange}\n//                             className=\"profile-input\"\n//                             disabled={!isEditing} // Disable input when not in edit mode\n//                         />\n//                     </div>\n//                     <div className=\"profile-item\">\n//                         <label className=\"profile-label\">Username:</label>\n//                         <input\n//                             type=\"text\"\n//                             name=\"username\"\n//                             value={userData.username}\n//                             onChange={handleInputChange}\n//                             className=\"profile-input\"\n//                             disabled={!isEditing} // Disable input when not in edit mode\n//                         />\n//                     </div>\n//                     <button\n//                         className={isEditing ? \"profile-save-button\" : \"profile-edit-button\"}\n//                         onClick={isEditing ? handleSaveClick : handleEditClick}\n//                     >\n//                         {isEditing ? \"Save\" : \"Edit\"}\n//                     </button>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n//\n// export default ProfilePage;\n//\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfilePage() {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [isEditing, setIsEditing] = useState(false);\n  const [userData, setUserData] = useState({\n    email: '',\n    username: '',\n    isVerified: ''\n  });\n  useEffect(() => {\n    // Fetch user data from the backend using an HTTP GET request\n    fetch(`http://localhost:3000/api/auth/profile/${userId}`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `TVkYzY4M2E2ZjkiLCJpYXQiOjE2OTY0MzYyNDUsImV4cCI6MTY5NjQzOTg0NX0.LsDpUnBJG8eQ4Xx5jx85v_6vBz77-neqV2a4Fzisy2Q` // Include the token in the Authorization header\n      }\n    }).then(response => response.json()).then(data => {\n      if (data.status.statusCode === 200) {\n        setUserData(data.data); // Update userData state with fetched data\n      } else {\n        // Handle error, e.g., redirect to an error page\n      }\n    }).catch(error => {\n      console.error('Error fetching user data:', error);\n      // Handle error\n    });\n  }, [userId]);\n  const handleSaveClick = () => {\n    setIsEditing(false);\n\n    // Send updated user data to the backend\n    fetch(`http://localhost:3000/api/auth/update-profile/${userId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n        // Add any necessary headers, e.g., authentication token\n      },\n\n      body: JSON.stringify(userData) // Send updated user data\n    }).then(response => response.json()).then(data => {\n      if (data.status.statusCode === 200) {\n        // Data updated successfully\n      } else {\n        // Handle error, e.g., show an error message\n      }\n    }).catch(error => {\n      console.error('Error updating user data:', error);\n      // Handle error\n    });\n  };\n\n  const handleEditClick = () => {\n    setIsEditing(true);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserData({\n      ...userData,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"profile-label\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          value: userData.email,\n          onChange: handleInputChange,\n          className: \"profile-input\",\n          disabled: !isEditing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"profile-label\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: userData.username,\n          onChange: handleInputChange,\n          className: \"profile-input\",\n          disabled: !isEditing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: isEditing ? \"profile-save-button\" : \"profile-edit-button\",\n        onClick: isEditing ? handleSaveClick : handleEditClick,\n        children: isEditing ? \"Save\" : \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n}\n_s(ProfilePage, \"e+zLFfwuNElFI/tesrWr366gNe0=\", false, function () {\n  return [useParams];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","ProfilePage","_s","userId","isEditing","setIsEditing","userData","setUserData","email","username","isVerified","fetch","method","headers","then","response","json","data","status","statusCode","catch","error","console","handleSaveClick","body","JSON","stringify","handleEditClick","handleInputChange","e","name","value","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Projects/NodeJSProjects/map-mark-ui/src/pages/ProfilePage.js"],"sourcesContent":["// // export default ProfilePage;\r\n//\r\n// import React, {useState} from 'react';\r\n// import '../styles/pages/ProfileStyle.css';\r\n// import Navbar from '../components/Navbar';\r\n//\r\n// function ProfilePage() {\r\n//\r\n//     const [isEditing, setIsEditing] = useState(false); // Start with inputs disabled\r\n//     const [userData, setUserData] = useState({\r\n//         email: 'b.alramlawi360@gmail.com',\r\n//         username: 'ggg',\r\n//         isVerified: 'Yes',\r\n//     });\r\n//\r\n//     const handleSaveClick = () => {\r\n//         setIsEditing(false);\r\n//         // Add logic to save updated data here\r\n//     };\r\n//\r\n//     const handleEditClick = () => {\r\n//         setIsEditing(true); // Enable inputs when Edit is clicked\r\n//     };\r\n//\r\n//     const handleInputChange = (e) => {\r\n//         const {name, value} = e.target;\r\n//         setUserData({\r\n//             ...userData,\r\n//             [name]: value,\r\n//         });\r\n//     };\r\n//\r\n//     return (\r\n//         <div className=\"profile-container\">\r\n//             <Navbar/>\r\n//             <div className=\"profile-card\">\r\n//                 <div className=\"profile-header\">\r\n//                     <img\r\n//                         src={process.env.PUBLIC_URL + '/profile.png'}\r\n//                         alt=\"ProfilePage\"\r\n//                         className=\"profile-image\"\r\n//                     />\r\n//                     <h2 className=\"profile-title\">ProfilePage Information</h2>\r\n//                 </div>\r\n//                 <div className={`status-rectangle ${userData.isVerified === 'Yes' ? 'verified' : 'not-verified'}`}>\r\n//                     {userData.isVerified === 'Yes' ? 'Verified' : 'Not Verified'}\r\n//                 </div>\r\n//                 <div className=\"profile-info\">\r\n//                     <div className=\"profile-item\">\r\n//                         <label className=\"profile-label\">Email:</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             name=\"email\"\r\n//                             value={userData.email}\r\n//                             onChange={handleInputChange}\r\n//                             className=\"profile-input\"\r\n//                             disabled={!isEditing} // Disable input when not in edit mode\r\n//                         />\r\n//                     </div>\r\n//                     <div className=\"profile-item\">\r\n//                         <label className=\"profile-label\">Username:</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             name=\"username\"\r\n//                             value={userData.username}\r\n//                             onChange={handleInputChange}\r\n//                             className=\"profile-input\"\r\n//                             disabled={!isEditing} // Disable input when not in edit mode\r\n//                         />\r\n//                     </div>\r\n//                     <button\r\n//                         className={isEditing ? \"profile-save-button\" : \"profile-edit-button\"}\r\n//                         onClick={isEditing ? handleSaveClick : handleEditClick}\r\n//                     >\r\n//                         {isEditing ? \"Save\" : \"Edit\"}\r\n//                     </button>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n//\r\n// export default ProfilePage;\r\n//\r\nimport React, {useState, useEffect} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\n\r\nfunction ProfilePage() {\r\n    const {userId} = useParams();\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [userData, setUserData] = useState({\r\n        email: '',\r\n        username: '',\r\n        isVerified: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        // Fetch user data from the backend using an HTTP GET request\r\n        fetch(`http://localhost:3000/api/auth/profile/${userId}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `TVkYzY4M2E2ZjkiLCJpYXQiOjE2OTY0MzYyNDUsImV4cCI6MTY5NjQzOTg0NX0.LsDpUnBJG8eQ4Xx5jx85v_6vBz77-neqV2a4Fzisy2Q`, // Include the token in the Authorization header\r\n            },\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                if (data.status.statusCode === 200) {\r\n                    setUserData(data.data); // Update userData state with fetched data\r\n                } else {\r\n                    // Handle error, e.g., redirect to an error page\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching user data:', error);\r\n                // Handle error\r\n            });\r\n    }, [userId]);\r\n\r\n    const handleSaveClick = () => {\r\n        setIsEditing(false);\r\n\r\n        // Send updated user data to the backend\r\n        fetch(`http://localhost:3000/api/auth/update-profile/${userId}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // Add any necessary headers, e.g., authentication token\r\n            },\r\n            body: JSON.stringify(userData), // Send updated user data\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                if (data.status.statusCode === 200) {\r\n                    // Data updated successfully\r\n                } else {\r\n                    // Handle error, e.g., show an error message\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error updating user data:', error);\r\n                // Handle error\r\n            });\r\n    };\r\n\r\n    const handleEditClick = () => {\r\n        setIsEditing(true);\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const {name, value} = e.target;\r\n        setUserData({\r\n            ...userData,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"profile-container\">\r\n            {/* ...other JSX code */}\r\n            <div className=\"profile-info\">\r\n                <div className=\"profile-item\">\r\n                    <label className=\"profile-label\">Email:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"email\"\r\n                        value={userData.email}\r\n                        onChange={handleInputChange}\r\n                        className=\"profile-input\"\r\n                        disabled={!isEditing}\r\n                    />\r\n                </div>\r\n                <div className=\"profile-item\">\r\n                    <label className=\"profile-label\">Username:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        value={userData.username}\r\n                        onChange={handleInputChange}\r\n                        className=\"profile-input\"\r\n                        disabled={!isEditing}\r\n                    />\r\n                </div>\r\n                <button\r\n                    className={isEditing ? \"profile-save-button\" : \"profile-edit-button\"}\r\n                    onClick={isEditing ? handleSaveClick : handleEditClick}\r\n                >\r\n                    {isEditing ? \"Save\" : \"Edit\"}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfilePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}