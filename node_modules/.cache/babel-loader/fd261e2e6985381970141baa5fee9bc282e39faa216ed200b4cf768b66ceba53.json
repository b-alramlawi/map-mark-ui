{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\NodeJSProjects\\\\map-mark-ui\\\\src\\\\components\\\\Navbar.js\",\n  _s = $RefreshSig$();\n// import React, {useState} from 'react';\n// import {Link, useHistory} from 'react-router-dom';\n// import '../styles/components/NavbarStyle.css';\n//\n// function Navbar() {\n//     const history = useHistory();\n//\n//     // Check if the user is authenticated\n//     const isAuthenticated = !!localStorage.getItem('authToken');\n//\n//     // State to track the loading status\n//     const [loading, setLoading] = useState(false);\n//\n//     // Function to handle logout\n//     const handleLogout = () => {\n//         // Show the loading animation\n//         setLoading(true);\n//\n//         // Simulate a delay (you can replace this with your actual logout logic)\n//         setTimeout(() => {\n//             // Clear the authentication token from localStorage\n//             localStorage.removeItem('authToken');\n//\n//             // Hide the loading animation\n//             setLoading(false);\n//\n//             // Redirect to the login page\n//             history.push('/login');\n//         }, 2000); // Simulated 2-second delay for the loading animation\n//     };\n//\n//     return (<nav className=\"navbar\">\n//             <div className=\"navbar-container\">\n//                 <Link to=\"/\" className=\"navbar-logo\">\n//                     Map Mark\n//                 </Link>\n//                 <ul className=\"navbar-menu\">\n//                     <li className=\"navbar-item\">\n//                         <a href=\"/home\" className=\"navbar-link\">\n//                             Home\n//                         </a>\n//                     </li>\n//                     <li className=\"navbar-item\">\n//                         <a href=\"/profile\" className=\"navbar-link\">\n//                             Profile\n//                         </a>\n//                     </li>\n//                     {isAuthenticated ? (<li className=\"navbar-item\">\n//                             {loading ? (<span>Loading...</span> // Display loading message or animation\n//                             ) : (<a href=\"/login\" className=\"navbar-link\" onClick={handleLogout}>\n//                                     Logout\n//                                 </a>)}\n//                         </li>) : null}\n//                 </ul>\n//             </div>\n//         </nav>);\n// }\n//\n// export default Navbar;\nimport React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport CustomModal from './CustomModal'; // Import the custom modal component\nimport '../styles/components/NavbarStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Navbar() {\n  _s();\n  const history = useHistory();\n\n  // Check if the user is authenticated\n  const isAuthenticated = !!localStorage.getItem('authToken');\n\n  // State to track the loading status\n  const [loading, setLoading] = useState(false);\n\n  // State to track the confirmation modal visibility\n  const [isModalOpen, setModalOpen] = useState(false);\n\n  // Function to open the confirmation modal\n  const openModal = () => {\n    setModalOpen(true);\n  };\n\n  // Function to close the confirmation modal\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n\n  // Function to handle logout\n  const handleLogout = () => {\n    // Show the confirmation modal\n    openModal();\n  };\n\n  // Function to confirm logout and proceed\n  const confirmLogout = () => {\n    // Close the confirmation modal\n    closeModal();\n\n    // Show the loading animation\n    setLoading(true);\n\n    // Simulate a delay (you can replace this with your actual logout logic)\n    setTimeout(() => {\n      // Clear the authentication token from localStorage\n      localStorage.removeItem('authToken');\n\n      // Hide the loading animation\n      setLoading(false);\n\n      // Redirect to the login page\n      history.push('/login');\n    }, 2000); // Simulated 2-second delay for the loading animation\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-container\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"navbar-logo\",\n        children: \"Map Mark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"navbar-menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"navbar-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/home\",\n            className: \"navbar-link\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"navbar-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/profile\",\n            className: \"navbar-link\",\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), isAuthenticated ? /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"navbar-item\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 33\n          }, this) // Display loading message or animation\n          : /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/login\",\n            className: \"navbar-link\",\n            onClick: handleLogout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomModal, {\n      isOpen: isModalOpen,\n      onClose: closeModal,\n      onConfirm: confirmLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n}\n_s(Navbar, \"TXHLLglGmOuIXNQLELGZhBfIp+o=\", false, function () {\n  return [useHistory];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","Link","useHistory","CustomModal","jsxDEV","_jsxDEV","Navbar","_s","history","isAuthenticated","localStorage","getItem","loading","setLoading","isModalOpen","setModalOpen","openModal","closeModal","handleLogout","confirmLogout","setTimeout","removeItem","push","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","href","onClick","isOpen","onClose","onConfirm","_c","$RefreshReg$"],"sources":["C:/Projects/NodeJSProjects/map-mark-ui/src/components/Navbar.js"],"sourcesContent":["// import React, {useState} from 'react';\r\n// import {Link, useHistory} from 'react-router-dom';\r\n// import '../styles/components/NavbarStyle.css';\r\n//\r\n// function Navbar() {\r\n//     const history = useHistory();\r\n//\r\n//     // Check if the user is authenticated\r\n//     const isAuthenticated = !!localStorage.getItem('authToken');\r\n//\r\n//     // State to track the loading status\r\n//     const [loading, setLoading] = useState(false);\r\n//\r\n//     // Function to handle logout\r\n//     const handleLogout = () => {\r\n//         // Show the loading animation\r\n//         setLoading(true);\r\n//\r\n//         // Simulate a delay (you can replace this with your actual logout logic)\r\n//         setTimeout(() => {\r\n//             // Clear the authentication token from localStorage\r\n//             localStorage.removeItem('authToken');\r\n//\r\n//             // Hide the loading animation\r\n//             setLoading(false);\r\n//\r\n//             // Redirect to the login page\r\n//             history.push('/login');\r\n//         }, 2000); // Simulated 2-second delay for the loading animation\r\n//     };\r\n//\r\n//     return (<nav className=\"navbar\">\r\n//             <div className=\"navbar-container\">\r\n//                 <Link to=\"/\" className=\"navbar-logo\">\r\n//                     Map Mark\r\n//                 </Link>\r\n//                 <ul className=\"navbar-menu\">\r\n//                     <li className=\"navbar-item\">\r\n//                         <a href=\"/home\" className=\"navbar-link\">\r\n//                             Home\r\n//                         </a>\r\n//                     </li>\r\n//                     <li className=\"navbar-item\">\r\n//                         <a href=\"/profile\" className=\"navbar-link\">\r\n//                             Profile\r\n//                         </a>\r\n//                     </li>\r\n//                     {isAuthenticated ? (<li className=\"navbar-item\">\r\n//                             {loading ? (<span>Loading...</span> // Display loading message or animation\r\n//                             ) : (<a href=\"/login\" className=\"navbar-link\" onClick={handleLogout}>\r\n//                                     Logout\r\n//                                 </a>)}\r\n//                         </li>) : null}\r\n//                 </ul>\r\n//             </div>\r\n//         </nav>);\r\n// }\r\n//\r\n// export default Navbar;\r\nimport React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport CustomModal from './CustomModal'; // Import the custom modal component\r\nimport '../styles/components/NavbarStyle.css';\r\n\r\nfunction Navbar() {\r\n    const history = useHistory();\r\n\r\n    // Check if the user is authenticated\r\n    const isAuthenticated = !!localStorage.getItem('authToken');\r\n\r\n    // State to track the loading status\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    // State to track the confirmation modal visibility\r\n    const [isModalOpen, setModalOpen] = useState(false);\r\n\r\n    // Function to open the confirmation modal\r\n    const openModal = () => {\r\n        setModalOpen(true);\r\n    };\r\n\r\n    // Function to close the confirmation modal\r\n    const closeModal = () => {\r\n        setModalOpen(false);\r\n    };\r\n\r\n    // Function to handle logout\r\n    const handleLogout = () => {\r\n        // Show the confirmation modal\r\n        openModal();\r\n    };\r\n\r\n    // Function to confirm logout and proceed\r\n    const confirmLogout = () => {\r\n        // Close the confirmation modal\r\n        closeModal();\r\n\r\n        // Show the loading animation\r\n        setLoading(true);\r\n\r\n        // Simulate a delay (you can replace this with your actual logout logic)\r\n        setTimeout(() => {\r\n            // Clear the authentication token from localStorage\r\n            localStorage.removeItem('authToken');\r\n\r\n            // Hide the loading animation\r\n            setLoading(false);\r\n\r\n            // Redirect to the login page\r\n            history.push('/login');\r\n        }, 2000); // Simulated 2-second delay for the loading animation\r\n    };\r\n\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <div className=\"navbar-container\">\r\n                <Link to=\"/\" className=\"navbar-logo\">\r\n                    Map Mark\r\n                </Link>\r\n                <ul className=\"navbar-menu\">\r\n                    <li className=\"navbar-item\">\r\n                        <a href=\"/home\" className=\"navbar-link\">\r\n                            Home\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"navbar-item\">\r\n                        <a href=\"/profile\" className=\"navbar-link\">\r\n                            Profile\r\n                        </a>\r\n                    </li>\r\n                    {isAuthenticated ? (\r\n                        <li className=\"navbar-item\">\r\n                            {loading ? (\r\n                                <span>Loading...</span> // Display loading message or animation\r\n                            ) : (\r\n                                <a\r\n                                    href=\"/login\"\r\n                                    className=\"navbar-link\"\r\n                                    onClick={handleLogout}\r\n                                >\r\n                                    Logout\r\n                                </a>\r\n                            )}\r\n                        </li>\r\n                    ) : null}\r\n                </ul>\r\n            </div>\r\n            {/* Custom confirmation modal */}\r\n            <CustomModal\r\n                isOpen={isModalOpen}\r\n                onClose={closeModal}\r\n                onConfirm={confirmLogout}\r\n            />\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}