{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\NodeJSProjects\\\\map-mark-ui\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// // export default App;\n// import React from 'react';\n// import {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n// import SignUpPage from './pages/authentication/SignUpPage';\n// import LoginPage from './pages/authentication/LoginPage';\n// import HomePage from './pages/HomePage';\n// import ForgotPasswordPage from './pages/authentication/ForgotPasswordPage';\n// import ResetPasswordPage from './pages/authentication/ResetPasswordPage';\n// import VerificationSuccessPage from \"./pages/authentication/VerificationSuccessPage\";\n// import ProfilePage from \"./pages/ProfilePage\";\n// import VerificationFailedPage from \"./pages/authentication/VerificationFailedPage\";\n// import './styles/App.css'\n//\n// // import Logout from './pages/Logout';\n//\n// function App() {\n//     return (\n//         <Router>\n//             <Switch>\n//                 <Route path=\"/signup\" component={SignUpPage}/>\n//                 <Route path=\"/login\" component={LoginPage}/>\n//                 <Route path=\"/home\" component={HomePage}/>\n//                 <Route path=\"/v-success\" component={VerificationSuccessPage}/>\n//                 <Route path=\"/v-error\" component={VerificationFailedPage}/>\n//                 <Route path=\"/forgot-password\" component={ForgotPasswordPage}/>\n//                 <Route path=\"/reset-password/:token\" component={ResetPasswordPage}/>\n//                 <Route path=\"/profile/:userId\" component={ProfilePage}/>\n//                 {/*<Route path=\"/logout\" component={Logout} />*/}\n//             </Switch>\n//         </Router>\n//     );\n// }\n//\n// export default App;\n\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport SignUpPage from './pages/authentication/SignUpPage';\nimport LoginPage from './pages/authentication/LoginPage';\nimport HomePage from './pages/HomePage';\nimport ForgotPasswordPage from './pages/authentication/ForgotPasswordPage';\nimport ResetPasswordPage from './pages/authentication/ResetPasswordPage';\nimport VerificationSuccessPage from './pages/authentication/VerificationSuccessPage';\nimport ProfilePage from './pages/ProfilePage';\nimport VerificationFailedPage from './pages/authentication/VerificationFailedPage';\nimport ProtectedRoute from './ProtectedRoute'; // Import the ProtectedRoute component\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // You can manage authentication state here\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        component: SignUpPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        component: LoginPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/forgot-password\",\n        component: ForgotPasswordPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/reset-password/:token\",\n        component: ResetPasswordPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/v-success\",\n        component: VerificationSuccessPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/v-error\",\n        component: VerificationFailedPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        path: \"/home\",\n        component: HomePage,\n        isAuthenticated: isAuthenticated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        path: \"/profile/:userId\",\n        component: ProfilePage,\n        isAuthenticated: isAuthenticated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"BT2f1XiqCgFHwobQTWR7kond0Ig=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Switch","SignUpPage","LoginPage","HomePage","ForgotPasswordPage","ResetPasswordPage","VerificationSuccessPage","ProfilePage","VerificationFailedPage","ProtectedRoute","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setIsAuthenticated","children","path","component","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Projects/NodeJSProjects/map-mark-ui/src/App.js"],"sourcesContent":["// // export default App;\n// import React from 'react';\n// import {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n// import SignUpPage from './pages/authentication/SignUpPage';\n// import LoginPage from './pages/authentication/LoginPage';\n// import HomePage from './pages/HomePage';\n// import ForgotPasswordPage from './pages/authentication/ForgotPasswordPage';\n// import ResetPasswordPage from './pages/authentication/ResetPasswordPage';\n// import VerificationSuccessPage from \"./pages/authentication/VerificationSuccessPage\";\n// import ProfilePage from \"./pages/ProfilePage\";\n// import VerificationFailedPage from \"./pages/authentication/VerificationFailedPage\";\n// import './styles/App.css'\n//\n// // import Logout from './pages/Logout';\n//\n// function App() {\n//     return (\n//         <Router>\n//             <Switch>\n//                 <Route path=\"/signup\" component={SignUpPage}/>\n//                 <Route path=\"/login\" component={LoginPage}/>\n//                 <Route path=\"/home\" component={HomePage}/>\n//                 <Route path=\"/v-success\" component={VerificationSuccessPage}/>\n//                 <Route path=\"/v-error\" component={VerificationFailedPage}/>\n//                 <Route path=\"/forgot-password\" component={ForgotPasswordPage}/>\n//                 <Route path=\"/reset-password/:token\" component={ResetPasswordPage}/>\n//                 <Route path=\"/profile/:userId\" component={ProfilePage}/>\n//                 {/*<Route path=\"/logout\" component={Logout} />*/}\n//             </Switch>\n//         </Router>\n//     );\n// }\n//\n// export default App;\n\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport SignUpPage from './pages/authentication/SignUpPage';\nimport LoginPage from './pages/authentication/LoginPage';\nimport HomePage from './pages/HomePage';\nimport ForgotPasswordPage from './pages/authentication/ForgotPasswordPage';\nimport ResetPasswordPage from './pages/authentication/ResetPasswordPage';\nimport VerificationSuccessPage from './pages/authentication/VerificationSuccessPage';\nimport ProfilePage from './pages/ProfilePage';\nimport VerificationFailedPage from './pages/authentication/VerificationFailedPage';\nimport ProtectedRoute from './ProtectedRoute'; // Import the ProtectedRoute component\nimport './styles/App.css';\n\nfunction App() {\n    const [isAuthenticated, setIsAuthenticated] = useState(false); // You can manage authentication state here\n\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/signup\" component={SignUpPage} />\n                <Route path=\"/login\" component={LoginPage} />\n                <Route path=\"/forgot-password\" component={ForgotPasswordPage} />\n                <Route\n                    path=\"/reset-password/:token\"\n                    component={ResetPasswordPage}\n                />\n                <Route\n                    path=\"/v-success\"\n                    component={VerificationSuccessPage}\n                />\n                <Route\n                    path=\"/v-error\"\n                    component={VerificationFailedPage}\n                />\n                <ProtectedRoute\n                    path=\"/home\"\n                    component={HomePage}\n                    isAuthenticated={isAuthenticated}\n                />\n                <ProtectedRoute\n                    path=\"/profile/:userId\"\n                    component={ProfilePage}\n                    isAuthenticated={isAuthenticated}\n                />\n                {/* Add other routes as needed */}\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}