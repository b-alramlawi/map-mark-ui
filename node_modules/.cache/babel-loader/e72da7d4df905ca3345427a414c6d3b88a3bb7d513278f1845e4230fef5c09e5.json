{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\NodeJSProjects\\\\map-mark-ui\\\\src\\\\pages\\\\ProfilePage.js\",\n  _s = $RefreshSig$();\n// // export default ProfilePage;\n//\n// import React, {useState} from 'react';\n// import '../styles/pages/ProfileStyle.css';\n// import Navbar from '../components/Navbar';\n//\n// function ProfilePage() {\n//     const [isEditing, setIsEditing] = useState(false); // Start with inputs disabled\n//     const [userData, setUserData] = useState({\n//         email: 'b.alramlawi360@gmail.com',\n//         username: 'ggg',\n//         isVerified: 'Yes',\n//     });\n//\n//     const handleSaveClick = () => {\n//         setIsEditing(false);\n//         // Add logic to save updated data here\n//     };\n//\n//     const handleEditClick = () => {\n//         setIsEditing(true); // Enable inputs when Edit is clicked\n//     };\n//\n//     const handleInputChange = (e) => {\n//         const {name, value} = e.target;\n//         setUserData({\n//             ...userData,\n//             [name]: value,\n//         });\n//     };\n//\n//     return (\n//         <div className=\"profile-container\">\n//             <Navbar/>\n//             <div className=\"profile-card\">\n//                 <div className=\"profile-header\">\n//                     <img\n//                         src={process.env.PUBLIC_URL + '/profile.png'}\n//                         alt=\"ProfilePage\"\n//                         className=\"profile-image\"\n//                     />\n//                     <h2 className=\"profile-title\">ProfilePage Information</h2>\n//                 </div>\n//                 <div className={`status-rectangle ${userData.isVerified === 'Yes' ? 'verified' : 'not-verified'}`}>\n//                     {userData.isVerified === 'Yes' ? 'Verified' : 'Not Verified'}\n//                 </div>\n//                 <div className=\"profile-info\">\n//                     <div className=\"profile-item\">\n//                         <label className=\"profile-label\">Email:</label>\n//                         <input\n//                             type=\"text\"\n//                             name=\"email\"\n//                             value={userData.email}\n//                             onChange={handleInputChange}\n//                             className=\"profile-input\"\n//                             disabled={!isEditing} // Disable input when not in edit mode\n//                         />\n//                     </div>\n//                     <div className=\"profile-item\">\n//                         <label className=\"profile-label\">Username:</label>\n//                         <input\n//                             type=\"text\"\n//                             name=\"username\"\n//                             value={userData.username}\n//                             onChange={handleInputChange}\n//                             className=\"profile-input\"\n//                             disabled={!isEditing} // Disable input when not in edit mode\n//                         />\n//                     </div>\n//                     <button\n//                         className={isEditing ? \"profile-save-button\" : \"profile-edit-button\"}\n//                         onClick={isEditing ? handleSaveClick : handleEditClick}\n//                     >\n//                         {isEditing ? \"Save\" : \"Edit\"}\n//                     </button>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n//\n// export default ProfilePage;\n//\nimport React, { useState, useEffect } from 'react';\nimport '../styles/pages/ProfileStyle.css';\nimport Navbar from '../components/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfilePage() {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [userData, setUserData] = useState({\n    email: '',\n    username: '',\n    isVerified: ''\n  });\n  useEffect(() => {\n    // Fetch user data when the component mounts\n    async function fetchUserData() {\n      try {\n        const response = await fetch('http://localhost:3000/api/auth/profile/:userId', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setUserData(data); // Update userData state with the fetched data\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    }\n    fetchUserData();\n  }, []); // Empty dependency array to fetch data only once when the component mounts\n\n  const handleSaveClick = async () => {\n    setIsEditing(false);\n    // Add logic to save updated data here\n    try {\n      const response = await fetch('http://localhost:3000/profile/:userId', {\n        method: 'PUT',\n        // Assuming you want to update the user data with a PUT request\n        headers: {\n          'Content-Type': 'application/json'\n          // Add any other headers if needed\n        },\n\n        body: JSON.stringify(userData) // Send the updated user data\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      // Handle success\n    } catch (error) {\n      console.error('Error saving user data:', error);\n    }\n  };\n  const handleEditClick = () => {\n    setIsEditing(true);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserData({\n      ...userData,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: process.env.PUBLIC_URL + '/profile.png',\n          alt: \"ProfilePage\",\n          className: \"profile-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"profile-title\",\n          children: \"ProfilePage Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 9\n  }, this);\n}\n_s(ProfilePage, \"tGQr/Ere94oZauIfTDu9kbn8OOU=\");\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","jsxDEV","_jsxDEV","ProfilePage","_s","isEditing","setIsEditing","userData","setUserData","email","username","isVerified","fetchUserData","response","fetch","method","headers","ok","Error","data","json","error","console","handleSaveClick","body","JSON","stringify","handleEditClick","handleInputChange","e","name","value","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","process","env","PUBLIC_URL","alt","_c","$RefreshReg$"],"sources":["C:/Projects/NodeJSProjects/map-mark-ui/src/pages/ProfilePage.js"],"sourcesContent":["// // export default ProfilePage;\r\n//\r\n// import React, {useState} from 'react';\r\n// import '../styles/pages/ProfileStyle.css';\r\n// import Navbar from '../components/Navbar';\r\n//\r\n// function ProfilePage() {\r\n//     const [isEditing, setIsEditing] = useState(false); // Start with inputs disabled\r\n//     const [userData, setUserData] = useState({\r\n//         email: 'b.alramlawi360@gmail.com',\r\n//         username: 'ggg',\r\n//         isVerified: 'Yes',\r\n//     });\r\n//\r\n//     const handleSaveClick = () => {\r\n//         setIsEditing(false);\r\n//         // Add logic to save updated data here\r\n//     };\r\n//\r\n//     const handleEditClick = () => {\r\n//         setIsEditing(true); // Enable inputs when Edit is clicked\r\n//     };\r\n//\r\n//     const handleInputChange = (e) => {\r\n//         const {name, value} = e.target;\r\n//         setUserData({\r\n//             ...userData,\r\n//             [name]: value,\r\n//         });\r\n//     };\r\n//\r\n//     return (\r\n//         <div className=\"profile-container\">\r\n//             <Navbar/>\r\n//             <div className=\"profile-card\">\r\n//                 <div className=\"profile-header\">\r\n//                     <img\r\n//                         src={process.env.PUBLIC_URL + '/profile.png'}\r\n//                         alt=\"ProfilePage\"\r\n//                         className=\"profile-image\"\r\n//                     />\r\n//                     <h2 className=\"profile-title\">ProfilePage Information</h2>\r\n//                 </div>\r\n//                 <div className={`status-rectangle ${userData.isVerified === 'Yes' ? 'verified' : 'not-verified'}`}>\r\n//                     {userData.isVerified === 'Yes' ? 'Verified' : 'Not Verified'}\r\n//                 </div>\r\n//                 <div className=\"profile-info\">\r\n//                     <div className=\"profile-item\">\r\n//                         <label className=\"profile-label\">Email:</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             name=\"email\"\r\n//                             value={userData.email}\r\n//                             onChange={handleInputChange}\r\n//                             className=\"profile-input\"\r\n//                             disabled={!isEditing} // Disable input when not in edit mode\r\n//                         />\r\n//                     </div>\r\n//                     <div className=\"profile-item\">\r\n//                         <label className=\"profile-label\">Username:</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             name=\"username\"\r\n//                             value={userData.username}\r\n//                             onChange={handleInputChange}\r\n//                             className=\"profile-input\"\r\n//                             disabled={!isEditing} // Disable input when not in edit mode\r\n//                         />\r\n//                     </div>\r\n//                     <button\r\n//                         className={isEditing ? \"profile-save-button\" : \"profile-edit-button\"}\r\n//                         onClick={isEditing ? handleSaveClick : handleEditClick}\r\n//                     >\r\n//                         {isEditing ? \"Save\" : \"Edit\"}\r\n//                     </button>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n//\r\n// export default ProfilePage;\r\n//\r\nimport React, {useState, useEffect} from 'react';\r\nimport '../styles/pages/ProfileStyle.css';\r\nimport Navbar from '../components/Navbar';\r\n\r\nfunction ProfilePage() {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [userData, setUserData] = useState({\r\n        email: '',\r\n        username: '',\r\n        isVerified: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        // Fetch user data when the component mounts\r\n        async function fetchUserData() {\r\n            try {\r\n                const response = await fetch('http://localhost:3000/api/auth/profile/:userId', {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n\r\n                const data = await response.json();\r\n                setUserData(data); // Update userData state with the fetched data\r\n            } catch (error) {\r\n                console.error('Error fetching user data:', error);\r\n            }\r\n        }\r\n\r\n        fetchUserData();\r\n    }, []); // Empty dependency array to fetch data only once when the component mounts\r\n\r\n    const handleSaveClick = async () => {\r\n        setIsEditing(false);\r\n        // Add logic to save updated data here\r\n        try {\r\n            const response = await fetch('http://localhost:3000/profile/:userId', {\r\n                method: 'PUT', // Assuming you want to update the user data with a PUT request\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    // Add any other headers if needed\r\n                },\r\n                body: JSON.stringify(userData), // Send the updated user data\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n\r\n            // Handle success\r\n        } catch (error) {\r\n            console.error('Error saving user data:', error);\r\n        }\r\n    };\r\n\r\n    const handleEditClick = () => {\r\n        setIsEditing(true);\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const {name, value} = e.target;\r\n        setUserData({\r\n            ...userData,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"profile-container\">\r\n            <Navbar/>\r\n            <div className=\"profile-card\">\r\n                <div className=\"profile-header\">\r\n                    <img\r\n                        src={process.env.PUBLIC_URL + '/profile.png'}\r\n                        alt=\"ProfilePage\"\r\n                        className=\"profile-image\"\r\n                    />\r\n                    <h2 className=\"profile-title\">ProfilePage Information</h2>\r\n                </div>\r\n                {/* Rest of your component code remains the same */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfilePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}