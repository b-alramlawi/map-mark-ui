{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\NodeJSProjects\\\\map-mark-ui\\\\src\\\\pages\\\\ProfilePage.js\",\n  _s = $RefreshSig$();\n// // export default ProfilePage;\n//\n// import React, {useState} from 'react';\n// import '../styles/pages/ProfileStyle.css';\n// import Navbar from '../components/Navbar';\n//\n// function ProfilePage() {\n//     const [isEditing, setIsEditing] = useState(false); // Start with inputs disabled\n//     const [userData, setUserData] = useState({\n//         email: 'b.alramlawi360@gmail.com',\n//         username: 'ggg',\n//         isVerified: 'Yes',\n//     });\n//\n//     const handleSaveClick = () => {\n//         setIsEditing(false);\n//         // Add logic to save updated data here\n//     };\n//\n//     const handleEditClick = () => {\n//         setIsEditing(true); // Enable inputs when Edit is clicked\n//     };\n//\n//     const handleInputChange = (e) => {\n//         const {name, value} = e.target;\n//         setUserData({\n//             ...userData,\n//             [name]: value,\n//         });\n//     };\n//\n//     return (\n//         <div className=\"profile-container\">\n//             <Navbar/>\n//             <div className=\"profile-card\">\n//                 <div className=\"profile-header\">\n//                     <img\n//                         src={process.env.PUBLIC_URL + '/profile.png'}\n//                         alt=\"ProfilePage\"\n//                         className=\"profile-image\"\n//                     />\n//                     <h2 className=\"profile-title\">ProfilePage Information</h2>\n//                 </div>\n//                 <div className={`status-rectangle ${userData.isVerified === 'Yes' ? 'verified' : 'not-verified'}`}>\n//                     {userData.isVerified === 'Yes' ? 'Verified' : 'Not Verified'}\n//                 </div>\n//                 <div className=\"profile-info\">\n//                     <div className=\"profile-item\">\n//                         <label className=\"profile-label\">Email:</label>\n//                         <input\n//                             type=\"text\"\n//                             name=\"email\"\n//                             value={userData.email}\n//                             onChange={handleInputChange}\n//                             className=\"profile-input\"\n//                             disabled={!isEditing} // Disable input when not in edit mode\n//                         />\n//                     </div>\n//                     <div className=\"profile-item\">\n//                         <label className=\"profile-label\">Username:</label>\n//                         <input\n//                             type=\"text\"\n//                             name=\"username\"\n//                             value={userData.username}\n//                             onChange={handleInputChange}\n//                             className=\"profile-input\"\n//                             disabled={!isEditing} // Disable input when not in edit mode\n//                         />\n//                     </div>\n//                     <button\n//                         className={isEditing ? \"profile-save-button\" : \"profile-edit-button\"}\n//                         onClick={isEditing ? handleSaveClick : handleEditClick}\n//                     >\n//                         {isEditing ? \"Save\" : \"Edit\"}\n//                     </button>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n//\n// export default ProfilePage;\n//\nimport React, { useEffect, useState } from 'react';\nimport '../styles/pages/ProfileStyle.css';\nimport Navbar from '../components/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfilePage() {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [userData, setUserData] = useState({\n    email: '',\n    username: '',\n    isVerified: ''\n  });\n  useEffect(() => {\n    // Fetch user data using the stored user ID from sessionStorage\n    const userId = sessionStorage.getItem('userId');\n    if (userId) {\n      fetchUserData(userId);\n    }\n  }, []); // Empty dependency array to run this effect only once\n\n  const fetchUserData = async userId => {\n    try {\n      const response = await fetch(`http://localhost:3000/api/auth/profile/${userId}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setUserData(data); // Update user data in the state\n      } else {\n        console.error('Error fetching user data.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleSaveClick = () => {\n    setIsEditing(false);\n    // Add logic to save updated data here\n  };\n\n  const handleEditClick = () => {\n    setIsEditing(true); // Enable inputs when Edit is clicked\n  };\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserData({\n      ...userData,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: process.env.PUBLIC_URL + '/profile.png',\n          alt: \"ProfilePage\",\n          className: \"profile-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"profile-title\",\n          children: \"ProfilePage Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `status-rectangle ${userData.isVerified === 'Yes' ? 'verified' : 'not-verified'}`,\n        children: userData.isVerified === 'Yes' ? 'Verified' : 'Not Verified'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"profile-label\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"email\",\n            value: userData.email,\n            onChange: handleInputChange,\n            className: \"profile-input\",\n            disabled: !isEditing // Disable input when not in edit mode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"profile-label\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            value: userData.username,\n            onChange: handleInputChange,\n            className: \"profile-input\",\n            disabled: !isEditing // Disable input when not in edit mode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: isEditing ? \"profile-save-button\" : \"profile-edit-button\",\n          onClick: isEditing ? handleSaveClick : handleEditClick,\n          children: isEditing ? \"Save\" : \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 9\n  }, this);\n}\n_s(ProfilePage, \"tGQr/Ere94oZauIfTDu9kbn8OOU=\");\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","jsxDEV","_jsxDEV","ProfilePage","_s","isEditing","setIsEditing","userData","setUserData","email","username","isVerified","userId","sessionStorage","getItem","fetchUserData","response","fetch","method","headers","ok","data","json","console","error","handleSaveClick","handleEditClick","handleInputChange","e","name","value","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","process","env","PUBLIC_URL","alt","type","onChange","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Projects/NodeJSProjects/map-mark-ui/src/pages/ProfilePage.js"],"sourcesContent":["// // export default ProfilePage;\r\n//\r\n// import React, {useState} from 'react';\r\n// import '../styles/pages/ProfileStyle.css';\r\n// import Navbar from '../components/Navbar';\r\n//\r\n// function ProfilePage() {\r\n//     const [isEditing, setIsEditing] = useState(false); // Start with inputs disabled\r\n//     const [userData, setUserData] = useState({\r\n//         email: 'b.alramlawi360@gmail.com',\r\n//         username: 'ggg',\r\n//         isVerified: 'Yes',\r\n//     });\r\n//\r\n//     const handleSaveClick = () => {\r\n//         setIsEditing(false);\r\n//         // Add logic to save updated data here\r\n//     };\r\n//\r\n//     const handleEditClick = () => {\r\n//         setIsEditing(true); // Enable inputs when Edit is clicked\r\n//     };\r\n//\r\n//     const handleInputChange = (e) => {\r\n//         const {name, value} = e.target;\r\n//         setUserData({\r\n//             ...userData,\r\n//             [name]: value,\r\n//         });\r\n//     };\r\n//\r\n//     return (\r\n//         <div className=\"profile-container\">\r\n//             <Navbar/>\r\n//             <div className=\"profile-card\">\r\n//                 <div className=\"profile-header\">\r\n//                     <img\r\n//                         src={process.env.PUBLIC_URL + '/profile.png'}\r\n//                         alt=\"ProfilePage\"\r\n//                         className=\"profile-image\"\r\n//                     />\r\n//                     <h2 className=\"profile-title\">ProfilePage Information</h2>\r\n//                 </div>\r\n//                 <div className={`status-rectangle ${userData.isVerified === 'Yes' ? 'verified' : 'not-verified'}`}>\r\n//                     {userData.isVerified === 'Yes' ? 'Verified' : 'Not Verified'}\r\n//                 </div>\r\n//                 <div className=\"profile-info\">\r\n//                     <div className=\"profile-item\">\r\n//                         <label className=\"profile-label\">Email:</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             name=\"email\"\r\n//                             value={userData.email}\r\n//                             onChange={handleInputChange}\r\n//                             className=\"profile-input\"\r\n//                             disabled={!isEditing} // Disable input when not in edit mode\r\n//                         />\r\n//                     </div>\r\n//                     <div className=\"profile-item\">\r\n//                         <label className=\"profile-label\">Username:</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             name=\"username\"\r\n//                             value={userData.username}\r\n//                             onChange={handleInputChange}\r\n//                             className=\"profile-input\"\r\n//                             disabled={!isEditing} // Disable input when not in edit mode\r\n//                         />\r\n//                     </div>\r\n//                     <button\r\n//                         className={isEditing ? \"profile-save-button\" : \"profile-edit-button\"}\r\n//                         onClick={isEditing ? handleSaveClick : handleEditClick}\r\n//                     >\r\n//                         {isEditing ? \"Save\" : \"Edit\"}\r\n//                     </button>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n//\r\n// export default ProfilePage;\r\n//\r\nimport React, { useEffect, useState } from 'react';\r\nimport '../styles/pages/ProfileStyle.css';\r\nimport Navbar from '../components/Navbar';\r\n\r\nfunction ProfilePage() {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [userData, setUserData] = useState({\r\n        email: '',\r\n        username: '',\r\n        isVerified: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        // Fetch user data using the stored user ID from sessionStorage\r\n        const userId = sessionStorage.getItem('userId');\r\n        if (userId) {\r\n            fetchUserData(userId);\r\n        }\r\n    }, []); // Empty dependency array to run this effect only once\r\n\r\n    const fetchUserData = async (userId) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:3000/api/auth/profile/${userId}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setUserData(data); // Update user data in the state\r\n            } else {\r\n                console.error('Error fetching user data.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    };\r\n\r\n    const handleSaveClick = () => {\r\n        setIsEditing(false);\r\n        // Add logic to save updated data here\r\n    };\r\n\r\n    const handleEditClick = () => {\r\n        setIsEditing(true); // Enable inputs when Edit is clicked\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUserData({\r\n            ...userData,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"profile-container\">\r\n            <Navbar />\r\n            <div className=\"profile-card\">\r\n                <div className=\"profile-header\">\r\n                    <img\r\n                        src={process.env.PUBLIC_URL + '/profile.png'}\r\n                        alt=\"ProfilePage\"\r\n                        className=\"profile-image\"\r\n                    />\r\n                    <h2 className=\"profile-title\">ProfilePage Information</h2>\r\n                </div>\r\n                <div className={`status-rectangle ${userData.isVerified === 'Yes' ? 'verified' : 'not-verified'}`}>\r\n                    {userData.isVerified === 'Yes' ? 'Verified' : 'Not Verified'}\r\n                </div>\r\n                <div className=\"profile-info\">\r\n                    <div className=\"profile-item\">\r\n                        <label className=\"profile-label\">Email:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            value={userData.email}\r\n                            onChange={handleInputChange}\r\n                            className=\"profile-input\"\r\n                            disabled={!isEditing} // Disable input when not in edit mode\r\n                        />\r\n                    </div>\r\n                    <div className=\"profile-item\">\r\n                        <label className=\"profile-label\">Username:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            value={userData.username}\r\n                            onChange={handleInputChange}\r\n                            className=\"profile-input\"\r\n                            disabled={!isEditing} // Disable input when not in edit mode\r\n                        />\r\n                    </div>\r\n                    <button\r\n                        className={isEditing ? \"profile-save-button\" : \"profile-edit-button\"}\r\n                        onClick={isEditing ? handleSaveClick : handleEditClick}\r\n                    >\r\n                        {isEditing ? \"Save\" : \"Edit\"}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfilePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}