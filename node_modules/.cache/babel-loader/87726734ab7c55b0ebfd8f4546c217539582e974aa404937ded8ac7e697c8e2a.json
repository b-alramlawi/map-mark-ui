{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\NodeJSProjects\\\\map-mark-ui\\\\src\\\\components\\\\GoogleMap.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import {GoogleMap, LoadScript} from '@react-google-maps/api';\n//\n// const containerStyle = {\n//     width: '100%', // Full width of the available space\n//     height: '100%', // Full height of the available space\n// };\n//\n//\n// const center = {\n//     lat: 30.046981762780838,\n//     lng: 31.237174094852456\n// };\n//\n// function MyGoogleMap() {\n//     return (\n//         <LoadScript\n//             googleMapsApiKey=\"AIzaSyC3phyjN4feKgzWWAVQOURiVIkvYlSMWLg\"\n//         >\n//             <GoogleMap\n//                 mapContainerStyle={containerStyle}\n//                 center={center}\n//                 zoom={14}\n//             >\n//                 {/* You can add markers, polygons, or other map elements here */}\n//             </GoogleMap>\n//         </LoadScript>\n//     );\n// }\n//\n// export default MyGoogleMap;\nimport React, { useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '100%'\n};\nconst center = {\n  lat: 30.046981762780838,\n  lng: 31.237174094852456\n};\nfunction MyGoogleMap() {\n  _s();\n  const [markerPosition, setMarkerPosition] = useState(null);\n  const [bookmarkData, setBookmarkData] = useState({\n    name: '',\n    description: ''\n  });\n  const handleMapClick = event => {\n    const lat = event.latLng.lat();\n    const lng = event.latLng.lng();\n    setMarkerPosition({\n      lat,\n      lng\n    });\n  };\n  const handleNameChange = event => {\n    setBookmarkData({\n      ...bookmarkData,\n      name: event.target.value\n    });\n  };\n  const handleDescriptionChange = event => {\n    setBookmarkData({\n      ...bookmarkData,\n      description: event.target.value\n    });\n  };\n  const saveBookmark = async () => {\n    if (!markerPosition || !bookmarkData.name) {\n      return;\n    }\n    const userId = localStorage.getItem('userId'); // Replace with the actual user ID\n    const bookmarkToSend = {\n      userId,\n      name: bookmarkData.name,\n      coordinates: markerPosition,\n      description: bookmarkData.description\n    };\n    try {\n      const response = await axios.post(`/bookmarks/${userId}/add`, bookmarkToSend);\n      if (response.status === 201) {\n        // Bookmark created successfully\n        // You can update the UI or show a success message here\n        console.log('Bookmark created successfully');\n        setMarkerPosition(null); // Clear the marker and input fields\n        setBookmarkData({\n          name: '',\n          description: ''\n        });\n      } else {\n        // Handle errors or display an error message\n        console.error('Error creating bookmark');\n      }\n    } catch (error) {\n      // Handle network errors or other exceptions\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyC3phyjN4feKgzWWAVQOURiVIkvYlSMWLg\",\n    children: [/*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 14,\n      onClick: handleMapClick,\n      children: markerPosition && /*#__PURE__*/_jsxDEV(Marker, {\n        position: markerPosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Bookmark Name\",\n        value: bookmarkData.name,\n        onChange: handleNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Bookmark Description\",\n        value: bookmarkData.description,\n        onChange: handleDescriptionChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveBookmark,\n        children: \"Save Bookmark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n_s(MyGoogleMap, \"Vq2K17rRqhRUsAwZNZ729l2xl04=\");\n_c = MyGoogleMap;\nexport default MyGoogleMap;\nvar _c;\n$RefreshReg$(_c, \"MyGoogleMap\");","map":{"version":3,"names":["React","useState","GoogleMap","LoadScript","Marker","axios","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","MyGoogleMap","_s","markerPosition","setMarkerPosition","bookmarkData","setBookmarkData","name","description","handleMapClick","event","latLng","handleNameChange","target","value","handleDescriptionChange","saveBookmark","userId","localStorage","getItem","bookmarkToSend","coordinates","response","post","status","console","log","error","googleMapsApiKey","children","mapContainerStyle","zoom","onClick","position","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Projects/NodeJSProjects/map-mark-ui/src/components/GoogleMap.js"],"sourcesContent":["// import React from 'react';\r\n// import {GoogleMap, LoadScript} from '@react-google-maps/api';\r\n//\r\n// const containerStyle = {\r\n//     width: '100%', // Full width of the available space\r\n//     height: '100%', // Full height of the available space\r\n// };\r\n//\r\n//\r\n// const center = {\r\n//     lat: 30.046981762780838,\r\n//     lng: 31.237174094852456\r\n// };\r\n//\r\n// function MyGoogleMap() {\r\n//     return (\r\n//         <LoadScript\r\n//             googleMapsApiKey=\"AIzaSyC3phyjN4feKgzWWAVQOURiVIkvYlSMWLg\"\r\n//         >\r\n//             <GoogleMap\r\n//                 mapContainerStyle={containerStyle}\r\n//                 center={center}\r\n//                 zoom={14}\r\n//             >\r\n//                 {/* You can add markers, polygons, or other map elements here */}\r\n//             </GoogleMap>\r\n//         </LoadScript>\r\n//     );\r\n// }\r\n//\r\n// export default MyGoogleMap;\r\nimport React, { useState } from 'react';\r\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\r\nimport axios from 'axios';\r\n\r\nconst containerStyle = {\r\n    width: '100%',\r\n    height: '100%',\r\n};\r\n\r\nconst center = {\r\n    lat: 30.046981762780838,\r\n    lng: 31.237174094852456,\r\n};\r\n\r\nfunction MyGoogleMap() {\r\n    const [markerPosition, setMarkerPosition] = useState(null);\r\n    const [bookmarkData, setBookmarkData] = useState({\r\n        name: '',\r\n        description: '',\r\n    });\r\n\r\n    const handleMapClick = (event) => {\r\n        const lat = event.latLng.lat();\r\n        const lng = event.latLng.lng();\r\n        setMarkerPosition({ lat, lng });\r\n    };\r\n\r\n    const handleNameChange = (event) => {\r\n        setBookmarkData({\r\n            ...bookmarkData,\r\n            name: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleDescriptionChange = (event) => {\r\n        setBookmarkData({\r\n            ...bookmarkData,\r\n            description: event.target.value,\r\n        });\r\n    };\r\n\r\n    const saveBookmark = async () => {\r\n        if (!markerPosition || !bookmarkData.name) {\r\n            return;\r\n        }\r\n\r\n        const userId = localStorage.getItem('userId'); // Replace with the actual user ID\r\n        const bookmarkToSend = {\r\n            userId,\r\n            name: bookmarkData.name,\r\n            coordinates: markerPosition,\r\n            description: bookmarkData.description,\r\n        };\r\n\r\n        try {\r\n            const response = await axios.post(`/bookmarks/${userId}/add`, bookmarkToSend);\r\n\r\n            if (response.status === 201) {\r\n                // Bookmark created successfully\r\n                // You can update the UI or show a success message here\r\n                console.log('Bookmark created successfully');\r\n                setMarkerPosition(null); // Clear the marker and input fields\r\n                setBookmarkData({ name: '', description: '' });\r\n            } else {\r\n                // Handle errors or display an error message\r\n                console.error('Error creating bookmark');\r\n            }\r\n        } catch (error) {\r\n            // Handle network errors or other exceptions\r\n            console.error('Error:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <LoadScript googleMapsApiKey=\"AIzaSyC3phyjN4feKgzWWAVQOURiVIkvYlSMWLg\">\r\n            <GoogleMap\r\n                mapContainerStyle={containerStyle}\r\n                center={center}\r\n                zoom={14}\r\n                onClick={handleMapClick}\r\n            >\r\n                {markerPosition && <Marker position={markerPosition} />}\r\n            </GoogleMap>\r\n\r\n            <div>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Bookmark Name\"\r\n                    value={bookmarkData.name}\r\n                    onChange={handleNameChange}\r\n                />\r\n                <textarea\r\n                    placeholder=\"Bookmark Description\"\r\n                    value={bookmarkData.description}\r\n                    onChange={handleDescriptionChange}\r\n                />\r\n                <button onClick={saveBookmark}>Save Bookmark</button>\r\n            </div>\r\n        </LoadScript>\r\n    );\r\n}\r\n\r\nexport default MyGoogleMap;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}