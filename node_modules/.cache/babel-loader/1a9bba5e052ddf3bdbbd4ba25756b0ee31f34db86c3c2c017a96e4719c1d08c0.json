{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\NodeJSProjects\\\\map-mark-ui\\\\src\\\\pages\\\\Signup.js\",\n  _s = $RefreshSig$();\n// import React, {useState} from 'react';\n// import '../styles/Signup.css'; // Import the CSS for styling\n// import {useHistory} from 'react-router-dom'; // Import useHistory for redirection\n//\n// function Signup() {\n//     const [formData, setFormData] = useState({\n//         email: '',\n//         password: '',\n//         username: '',\n//     });\n//\n//     const [registrationStatus, setRegistrationStatus] = useState(null);\n//\n//     const history = useHistory(); // Initialize useHistory\n//\n//     const handleChange = (e) => {\n//         const {name, value} = e.target;\n//         setFormData({...formData, [name]: value});\n//     };\n//\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//\n//         const apiUrl = 'http://localhost:3000/api/auth/signup'; // Update with your API endpoint\n//\n//         try {\n//             const response = await fetch(apiUrl, {\n//                 method: 'POST',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                 },\n//                 body: JSON.stringify(formData),\n//             });\n//\n//             if (!response.ok) {\n//                 // Handle non-2xx HTTP responses here\n//                 throw new Error('Registration failed');\n//             }\n//\n//             const data = await response.json();\n//\n//             // Handle success response\n//             console.log('Registration successful:', data);\n//             setRegistrationStatus('success');\n//\n//             // Optionally, you can redirect the user to another page here if needed\n//             history.push('/home');\n//         } catch (error) {\n//             // Handle network error or non-successful response\n//             setRegistrationStatus('failed');\n//             console.error('Registration failed:', error);\n//         }\n//     };\n//\n//\n//     return (\n//         <div className=\"container\">\n//             <div className=\"form-container\">\n//                 <h2 className=\"form-title\">Signup</h2>\n//                 {registrationStatus === 'success' ? (\n//                     <div className=\"success-message\">\n//                         Registration successful! You are now registered.\n//                     </div>\n//                 ) : registrationStatus === 'failed' ? (\n//                     <div className=\"error-message\">\n//                         Registration failed. Please check your information and try again.\n//                     </div>\n//                 ) : (\n//                     <form onSubmit={handleSubmit}>\n//                         <div className=\"form-group\">\n//                             <label htmlFor=\"email\">Email</label>\n//                             <input\n//                                 type=\"email\"\n//                                 id=\"email\"\n//                                 name=\"email\"\n//                                 value={formData.email}\n//                                 onChange={handleChange}\n//                                 required\n//                                 className=\"input-field\"\n//                             />\n//                         </div>\n//                         <div className=\"form-group\">\n//                             <label htmlFor=\"password\">Password</label>\n//                             <input\n//                                 type=\"password\"\n//                                 id=\"password\"\n//                                 name=\"password\"\n//                                 value={formData.password}\n//                                 onChange={handleChange}\n//                                 required\n//                                 className=\"input-field\"\n//                             />\n//                         </div>\n//                         <div className=\"form-group\">\n//                             <label htmlFor=\"username\">Username</label>\n//                             <input\n//                                 type=\"text\"\n//                                 id=\"username\"\n//                                 name=\"username\"\n//                                 value={formData.username}\n//                                 onChange={handleChange}\n//                                 required\n//                                 className=\"input-field\"\n//                             />\n//                         </div>\n//                         <button type=\"submit\" className=\"submit-button\">\n//                             Register\n//                         </button>\n//\n//                         <p className=\"login-link\">\n//                             Already have an account? <a href=\"/login\">Login</a>\n//                         </p>\n//                     </form>\n//                 )}\n//             </div>\n//         </div>\n//     );\n//\n// }\n//\n// export default Signup;\nimport React, { useState } from 'react';\nimport '../styles/Signup.css'; // Import the CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Signup() {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    username: ''\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"form-title\",\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: e => setFormData({\n              ...formData,\n              email: e.target.value\n            }),\n            required: true,\n            className: \"input-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            value: formData.password,\n            onChange: e => setFormData({\n              ...formData,\n              password: e.target.value\n            }),\n            required: true,\n            className: \"input-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            name: \"username\",\n            value: formData.username,\n            onChange: e => setFormData({\n              ...formData,\n              username: e.target.value\n            }),\n            required: true,\n            className: \"input-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login-link\",\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n}\n_s(Signup, \"5BYsMOYzb3+/5d9E/XwDTOMhYCc=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Signup","_s","formData","setFormData","email","password","username","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","name","value","onChange","e","target","required","href","_c","$RefreshReg$"],"sources":["C:/Projects/NodeJSProjects/map-mark-ui/src/pages/Signup.js"],"sourcesContent":["// import React, {useState} from 'react';\r\n// import '../styles/Signup.css'; // Import the CSS for styling\r\n// import {useHistory} from 'react-router-dom'; // Import useHistory for redirection\r\n//\r\n// function Signup() {\r\n//     const [formData, setFormData] = useState({\r\n//         email: '',\r\n//         password: '',\r\n//         username: '',\r\n//     });\r\n//\r\n//     const [registrationStatus, setRegistrationStatus] = useState(null);\r\n//\r\n//     const history = useHistory(); // Initialize useHistory\r\n//\r\n//     const handleChange = (e) => {\r\n//         const {name, value} = e.target;\r\n//         setFormData({...formData, [name]: value});\r\n//     };\r\n//\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//\r\n//         const apiUrl = 'http://localhost:3000/api/auth/signup'; // Update with your API endpoint\r\n//\r\n//         try {\r\n//             const response = await fetch(apiUrl, {\r\n//                 method: 'POST',\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                 },\r\n//                 body: JSON.stringify(formData),\r\n//             });\r\n//\r\n//             if (!response.ok) {\r\n//                 // Handle non-2xx HTTP responses here\r\n//                 throw new Error('Registration failed');\r\n//             }\r\n//\r\n//             const data = await response.json();\r\n//\r\n//             // Handle success response\r\n//             console.log('Registration successful:', data);\r\n//             setRegistrationStatus('success');\r\n//\r\n//             // Optionally, you can redirect the user to another page here if needed\r\n//             history.push('/home');\r\n//         } catch (error) {\r\n//             // Handle network error or non-successful response\r\n//             setRegistrationStatus('failed');\r\n//             console.error('Registration failed:', error);\r\n//         }\r\n//     };\r\n//\r\n//\r\n//     return (\r\n//         <div className=\"container\">\r\n//             <div className=\"form-container\">\r\n//                 <h2 className=\"form-title\">Signup</h2>\r\n//                 {registrationStatus === 'success' ? (\r\n//                     <div className=\"success-message\">\r\n//                         Registration successful! You are now registered.\r\n//                     </div>\r\n//                 ) : registrationStatus === 'failed' ? (\r\n//                     <div className=\"error-message\">\r\n//                         Registration failed. Please check your information and try again.\r\n//                     </div>\r\n//                 ) : (\r\n//                     <form onSubmit={handleSubmit}>\r\n//                         <div className=\"form-group\">\r\n//                             <label htmlFor=\"email\">Email</label>\r\n//                             <input\r\n//                                 type=\"email\"\r\n//                                 id=\"email\"\r\n//                                 name=\"email\"\r\n//                                 value={formData.email}\r\n//                                 onChange={handleChange}\r\n//                                 required\r\n//                                 className=\"input-field\"\r\n//                             />\r\n//                         </div>\r\n//                         <div className=\"form-group\">\r\n//                             <label htmlFor=\"password\">Password</label>\r\n//                             <input\r\n//                                 type=\"password\"\r\n//                                 id=\"password\"\r\n//                                 name=\"password\"\r\n//                                 value={formData.password}\r\n//                                 onChange={handleChange}\r\n//                                 required\r\n//                                 className=\"input-field\"\r\n//                             />\r\n//                         </div>\r\n//                         <div className=\"form-group\">\r\n//                             <label htmlFor=\"username\">Username</label>\r\n//                             <input\r\n//                                 type=\"text\"\r\n//                                 id=\"username\"\r\n//                                 name=\"username\"\r\n//                                 value={formData.username}\r\n//                                 onChange={handleChange}\r\n//                                 required\r\n//                                 className=\"input-field\"\r\n//                             />\r\n//                         </div>\r\n//                         <button type=\"submit\" className=\"submit-button\">\r\n//                             Register\r\n//                         </button>\r\n//\r\n//                         <p className=\"login-link\">\r\n//                             Already have an account? <a href=\"/login\">Login</a>\r\n//                         </p>\r\n//                     </form>\r\n//                 )}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n//\r\n// }\r\n//\r\n// export default Signup;\r\nimport React, {useState} from 'react';\r\nimport '../styles/Signup.css'; // Import the CSS for styling\r\n\r\nfunction Signup() {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '',\r\n        username: '',\r\n    });\r\n\r\n    return (\r\n        <div className=\"signup-container\">\r\n            <div className=\"signup-form\">\r\n                <h2 className=\"form-title\">Signup</h2>\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            value={formData.email}\r\n                            onChange={(e) => setFormData({...formData, email: e.target.value})}\r\n                            required\r\n                            className=\"input-field\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            value={formData.password}\r\n                            onChange={(e) => setFormData({...formData, password: e.target.value})}\r\n                            required\r\n                            className=\"input-field\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">Username</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            name=\"username\"\r\n                            value={formData.username}\r\n                            onChange={(e) => setFormData({...formData, username: e.target.value})}\r\n                            required\r\n                            className=\"input-field\"\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"submit-button\">\r\n                        Register\r\n                    </button>\r\n                </form>\r\n                <p className=\"login-link\">\r\n                    Already have an account? <a href=\"/login\">Login</a>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Signup;\r\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}