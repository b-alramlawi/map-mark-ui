{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\NodeJSProjects\\\\map-mark-ui\\\\src\\\\components\\\\GoogleMap.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import {GoogleMap, LoadScript} from '@react-google-maps/api';\n//\n// const containerStyle = {\n//     width: '100%', // Full width of the available space\n//     height: '100%', // Full height of the available space\n// };\n//\n//\n//\n// const center = {\n//     lat: 30.046981762780838,\n//     lng: 31.237174094852456\n// };\n//\n// function MyGoogleMap() {\n//     return (\n//         <LoadScript\n//             googleMapsApiKey=\"AIzaSyC3phyjN4feKgzWWAVQOURiVIkvYlSMWLg\"\n//         >\n//             <GoogleMap\n//                 mapContainerStyle={containerStyle}\n//                 center={center}\n//                 zoom={14}\n//             >\n//                 {/* You can add markers, polygons, or other map elements here */}\n//             </GoogleMap>\n//         </LoadScript>\n//     );\n// }\n//\n// export default MyGoogleMap;\n\nimport React, { useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '100%'\n};\nconst center = {\n  lat: 30.046981762780838,\n  lng: 31.237174094852456\n};\nfunction MyGoogleMap() {\n  _s();\n  const [map, setMap] = useState(null);\n  const [places, setPlaces] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n  const onMapLoad = map => {\n    setMap(map);\n  };\n  const onSearch = () => {\n    if (map) {\n      const service = new window.google.maps.places.PlacesService(map);\n\n      // Perform the place search\n      service.textSearch({\n        query: searchValue,\n        location: center,\n        radius: 5000 // Search radius in meters\n      }, (results, status) => {\n        if (status === 'OK') {\n          setPlaces(results);\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for places...\",\n      value: searchValue,\n      onChange: e => setSearchValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"AIzaSyC3phyjN4feKgzWWAVQOURiVIkvYlSMWLg\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: containerStyle,\n        center: center,\n        zoom: 14,\n        onLoad: onMapLoad,\n        children: places.map(place => /*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: place.geometry.location.lat(),\n            lng: place.geometry.location.lng()\n          },\n          label: place.name\n        }, place.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(MyGoogleMap, \"+J9VEFwNHFLmgZiDrdTY4Ce0s5g=\");\n_c = MyGoogleMap;\nexport default MyGoogleMap;\nvar _c;\n$RefreshReg$(_c, \"MyGoogleMap\");","map":{"version":3,"names":["React","useState","GoogleMap","LoadScript","Marker","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","MyGoogleMap","_s","map","setMap","places","setPlaces","searchValue","setSearchValue","onMapLoad","onSearch","service","window","google","maps","PlacesService","textSearch","query","location","radius","results","status","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","googleMapsApiKey","mapContainerStyle","zoom","onLoad","place","position","geometry","label","name","id","_c","$RefreshReg$"],"sources":["C:/Projects/NodeJSProjects/map-mark-ui/src/components/GoogleMap.js"],"sourcesContent":["// import React from 'react';\r\n// import {GoogleMap, LoadScript} from '@react-google-maps/api';\r\n//\r\n// const containerStyle = {\r\n//     width: '100%', // Full width of the available space\r\n//     height: '100%', // Full height of the available space\r\n// };\r\n//\r\n//\r\n//\r\n// const center = {\r\n//     lat: 30.046981762780838,\r\n//     lng: 31.237174094852456\r\n// };\r\n//\r\n// function MyGoogleMap() {\r\n//     return (\r\n//         <LoadScript\r\n//             googleMapsApiKey=\"AIzaSyC3phyjN4feKgzWWAVQOURiVIkvYlSMWLg\"\r\n//         >\r\n//             <GoogleMap\r\n//                 mapContainerStyle={containerStyle}\r\n//                 center={center}\r\n//                 zoom={14}\r\n//             >\r\n//                 {/* You can add markers, polygons, or other map elements here */}\r\n//             </GoogleMap>\r\n//         </LoadScript>\r\n//     );\r\n// }\r\n//\r\n// export default MyGoogleMap;\r\n\r\n\r\nimport React, {useState} from 'react';\r\nimport {GoogleMap, LoadScript, Marker} from '@react-google-maps/api';\r\n\r\nconst containerStyle = {\r\n    width: '100%',\r\n    height: '100%',\r\n};\r\n\r\nconst center = {\r\n    lat: 30.046981762780838,\r\n    lng: 31.237174094852456\r\n};\r\n\r\nfunction MyGoogleMap() {\r\n    const [map, setMap] = useState(null);\r\n    const [places, setPlaces] = useState([]);\r\n    const [searchValue, setSearchValue] = useState('');\r\n\r\n    const onMapLoad = (map) => {\r\n        setMap(map);\r\n    };\r\n\r\n    const onSearch = () => {\r\n        if (map) {\r\n            const service = new window.google.maps.places.PlacesService(map);\r\n\r\n            // Perform the place search\r\n            service.textSearch({\r\n                query: searchValue,\r\n                location: center,\r\n                radius: 5000, // Search radius in meters\r\n            }, (results, status) => {\r\n                if (status === 'OK') {\r\n                    setPlaces(results);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Search for places...\"\r\n                value={searchValue}\r\n                onChange={(e) => setSearchValue(e.target.value)}\r\n            />\r\n            <button onClick={onSearch}>Search</button>\r\n\r\n            <LoadScript googleMapsApiKey=\"AIzaSyC3phyjN4feKgzWWAVQOURiVIkvYlSMWLg\">\r\n                <GoogleMap\r\n                    mapContainerStyle={containerStyle}\r\n                    center={center}\r\n                    zoom={14}\r\n                    onLoad={onMapLoad}\r\n                >\r\n                    {places.map((place) => (\r\n                        <Marker\r\n                            key={place.id}\r\n                            position={{lat: place.geometry.location.lat(), lng: place.geometry.location.lng()}}\r\n                            label={place.name}\r\n                        />\r\n                    ))}\r\n                </GoogleMap>\r\n            </LoadScript>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyGoogleMap;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}