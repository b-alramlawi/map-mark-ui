{"ast":null,"code":"// // import React, {useState} from 'react';\n// // import {GoogleMap, LoadScript, Marker, InfoWindow} from '@react-google-maps/api';\n// // import '../styles/components/GoogleMapStyle.css'\n// //\n// // const containerStyle = {\n// //     width: '100%',\n// //     height: '100vh',\n// // };\n// //\n// // const center = {\n// //     lat: 30.046981762780838,\n// //     lng: 31.237174094852456,\n// // };\n// //\n// // function MyGoogleMap() {\n// //     const token = localStorage.getItem('authToken');\n// //     const userId = localStorage.getItem('userId'); // Get userId from localStorage\n// //     const [markers, setMarkers] = useState([]);\n// //     const [activeMarker, setActiveMarker] = useState(null);\n// //     const [isAddingBookmark, setIsAddingBookmark] = useState(false); // Flag to indicate bookmark creation mode\n// //\n// //     const handleMapClick = (event) => {\n// //         if (isAddingBookmark) {\n// //             const lat = event.latLng.lat();\n// //             const lng = event.latLng.lng();\n// //             const newMarker = {lat, lng, name: '', description: ''};\n// //             setMarkers([...markers, newMarker]);\n// //         }\n// //     };\n// //\n// //     const handleMarkerClick = (marker) => {\n// //         setActiveMarker(marker);\n// //     };\n// //\n// //     const handleNameChange = (event) => {\n// //         setActiveMarker({...activeMarker, name: event.target.value});\n// //     };\n// //\n// //     const handleDescriptionChange = (event) => {\n// //         setActiveMarker({...activeMarker, description: event.target.value});\n// //     };\n// //\n// //     const toggleBookmarkMode = () => {\n// //         setIsAddingBookmark(!isAddingBookmark);\n// //     };\n// //\n// //     const saveBookmark = async () => {\n// //         if (!activeMarker || !activeMarker.name) {\n// //             return;\n// //         }\n// //\n// //         // Replace 'your_user_id' with the actual user ID\n// //\n// //         const bookmarkToSend = {\n// //             userId,\n// //             name: activeMarker.name,\n// //             coordinates: {latitude: activeMarker.lat, longitude: activeMarker.lng},\n// //             description: activeMarker.description,\n// //         };\n// //\n// //         try {\n// //             const response = await fetch(`http://localhost:3000/api/auth/bookmarks/${userId}/add`, {\n// //                 method: 'POST',\n// //                 headers: {\n// //                     'Content-Type': 'application/json',\n// //                     'Authorization': token, // Include the authentication token\n// //                 },\n// //                 body: JSON.stringify(bookmarkToSend),\n// //             });\n// //\n// //             if (response.status === 201) {\n// //                 // Bookmark created successfully\n// //                 console.log('Bookmark created successfully');\n// //                 setMarkers(\n// //                     markers.map((marker) =>\n// //                         marker === activeMarker ? {...marker, name: '', description: ''} : marker\n// //                     )\n// //                 );\n// //                 setActiveMarker(null);\n// //                 setIsAddingBookmark(false); // Exit bookmark creation mode\n// //             } else {\n// //                 // Handle errors or display an error message\n// //                 console.error('Error creating bookmark');\n// //             }\n// //         } catch (error) {\n// //             // Handle network errors or other exceptions\n// //             console.error('Error:', error);\n// //         }\n// //     };\n// //\n// //     return (\n// //         <LoadScript googleMapsApiKey=\"AIzaSyC3phyjN4feKgzWWAVQOURiVIkvYlSMWLg\">\n// //             <GoogleMap\n// //                 mapContainerStyle={containerStyle}\n// //                 center={center}\n// //                 zoom={14}\n// //                 onClick={handleMapClick}\n// //             >\n// //                 {markers.map((marker, index) => (\n// //                     <Marker\n// //                         key={index}\n// //                         position={{lat: marker.lat, lng: marker.lng}}\n// //                         onClick={() => handleMarkerClick(marker)}\n// //                     />\n// //                 ))}\n// //\n// //                 {activeMarker && (\n// //                     <InfoWindow\n// //                         position={{lat: activeMarker.lat, lng: activeMarker.lng}}\n// //                         onCloseClick={() => setActiveMarker(null)}\n// //                     >\n// //                         <div className=\"info-window-content\">\n// //                             <input\n// //                                 type=\"text\"\n// //                                 placeholder=\"Bookmark Name\"\n// //                                 value={activeMarker.name}\n// //                                 onChange={handleNameChange}\n// //                                 className=\"input-field\"\n// //                             />\n// //                             <textarea\n// //                                 placeholder=\"Bookmark Description\"\n// //                                 value={activeMarker.description}\n// //                                 onChange={handleDescriptionChange}\n// //                                 className=\"input-field\"\n// //                             />\n// //                             <button className=\"save-button\" onClick={saveBookmark}>\n// //                                 Save Bookmark\n// //                             </button>\n// //                         </div>\n// //                     </InfoWindow>\n// //\n// //                 )}\n// //\n// //                 <div>\n// //                     {/* Inside the GoogleMap component */}\n// //                     <button\n// //                         className={`add-bookmark-button ${isAddingBookmark ? 'adding' : ''}`}\n// //                         onClick={toggleBookmarkMode}\n// //                     >\n// //                         {isAddingBookmark ? 'Cancel Bookmark' : 'Add Bookmark'}\n// //                     </button>\n// //\n// //                 </div>\n// //             </GoogleMap>\n// //         </LoadScript>\n// //     );\n// // }\n// //\n// // export default MyGoogleMap;\n// // import React, {useState, useEffect} from 'react';\n// // import {GoogleMap, LoadScript, Marker, InfoWindow} from '@react-google-maps/api';\n// // import '../styles/components/GoogleMapStyle.css';\n// //\n// // const containerStyle = {\n// //     width: '100%',\n// //     height: '100vh',\n// // };\n// //\n// // const center = {\n// //     lat: 30.046981762780838,\n// //     lng: 31.237174094852456,\n// // };\n// //\n// // function MyGoogleMap() {\n// //     const token = localStorage.getItem('authToken');\n// //     const userId = localStorage.getItem('userId');\n// //     const [markers, setMarkers] = useState([]);\n// //     const [activeMarker, setActiveMarker] = useState(null);\n// //     const [isAddingBookmark, setIsAddingBookmark] = useState(false);\n// //\n// //     useEffect(() => {\n// //         // Get the user's current location and add it as a marker\n// //         if (navigator.geolocation) {\n// //             navigator.geolocation.getCurrentPosition((position) => {\n// //                 const lat = position.coords.latitude;\n// //                 const lng = position.coords.longitude;\n// //                 const currentLocationMarker = {lat, lng, name: 'Current Location', description: 'You are here'};\n// //                 setMarkers([...markers, currentLocationMarker]);\n// //             });\n// //         }\n// //     }, [markers]);\n// //\n// //     const handleMapClick = (event) => {\n// //         if (isAddingBookmark) {\n// //             const lat = event.latLng.lat();\n// //             const lng = event.latLng.lng();\n// //             const newMarker = {lat, lng, name: '', description: ''};\n// //             setMarkers([...markers, newMarker]);\n// //         }\n// //     };\n// //\n// //     const handleMarkerClick = (marker) => {\n// //         setActiveMarker(marker);\n// //     };\n// //\n// //     const handleNameChange = (event) => {\n// //         setActiveMarker({...activeMarker, name: event.target.value});\n// //     };\n// //\n// //     const handleDescriptionChange = (event) => {\n// //         setActiveMarker({...activeMarker, description: event.target.value});\n// //     };\n// //\n// //     const toggleBookmarkMode = () => {\n// //         setIsAddingBookmark(!isAddingBookmark);\n// //     };\n// //\n// //     const saveBookmark = async () => {\n// //         if (!activeMarker || !activeMarker.name) {\n// //             return;\n// //         }\n// //\n// //         const bookmarkToSend = {\n// //             userId,\n// //             name: activeMarker.name,\n// //             coordinates: {latitude: activeMarker.lat, longitude: activeMarker.lng},\n// //             description: activeMarker.description,\n// //         };\n// //\n// //         try {\n// //             const response = await fetch(`http://localhost:3000/api/auth/bookmarks/${userId}/add`, {\n// //                 method: 'POST',\n// //                 headers: {\n// //                     'Content-Type': 'application/json',\n// //                     Authorization: token,\n// //                 },\n// //                 body: JSON.stringify(bookmarkToSend),\n// //             });\n// //\n// //             if (response.status === 201) {\n// //                 console.log('Bookmark created successfully');\n// //                 setMarkers(\n// //                     markers.map((marker) =>\n// //                         marker === activeMarker ? {...marker, name: '', description: ''} : marker\n// //                     )\n// //                 );\n// //                 setActiveMarker(null);\n// //                 setIsAddingBookmark(false);\n// //             } else {\n// //                 console.error('Error creating bookmark');\n// //             }\n// //         } catch (error) {\n// //             console.error('Error:', error);\n// //         }\n// //     };\n// //\n// //     return (\n// //         <LoadScript googleMapsApiKey=\"AIzaSyC3phyjN4feKgzWWAVQOURiVIkvYlSMWLg\">\n// //             <GoogleMap mapContainerStyle={containerStyle} center={center} zoom={14} onClick={handleMapClick}>\n// //                 {markers.map((marker, index) => (\n// //                     <Marker\n// //                         key={index}\n// //                         position={{lat: marker.lat, lng: marker.lng}}\n// //                         onClick={() => handleMarkerClick(marker)}\n// //                     />\n// //                 ))}\n// //\n// //                 {activeMarker && (\n// //                     <InfoWindow\n// //                         position={{lat: activeMarker.lat, lng: activeMarker.lng}}\n// //                         onCloseClick={() => setActiveMarker(null)}\n// //                     >\n// //                         <div className=\"info-window-content\">\n// //                             <input\n// //                                 type=\"text\"\n// //                                 placeholder=\"Bookmark Name\"\n// //                                 value={activeMarker.name}\n// //                                 onChange={handleNameChange}\n// //                                 className=\"input-field\"\n// //                             />\n// //                             <textarea\n// //                                 placeholder=\"Bookmark Description\"\n// //                                 value={activeMarker.description}\n// //                                 onChange={handleDescriptionChange}\n// //                                 className=\"input-field\"\n// //                             />\n// //                             <button className=\"save-button\" onClick={saveBookmark}>\n// //                                 Save Bookmark\n// //                             </button>\n// //                         </div>\n// //                     </InfoWindow>\n// //                 )}\n// //\n// //                 <div>\n// //                     <button\n// //                         className={`add-bookmark-button ${isAddingBookmark ? 'adding' : ''}`}\n// //                         onClick={toggleBookmarkMode}\n// //                     >\n// //                         {isAddingBookmark ? 'Cancel Bookmark' : 'Add Bookmark'}\n// //                     </button>\n// //                 </div>\n// //             </GoogleMap>\n// //         </LoadScript>\n// //     );\n// // }\n// //\n// // export default MyGoogleMap;\n//\n// import React, { useState, useEffect } from 'react';\n// import { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';\n// import '../styles/components/GoogleMapStyle.css';\n//\n// const containerStyle = {\n//     width: '100%',\n//     height: '100vh',\n// };\n//\n// const center = {\n//     lat: 30.046981762780838,\n//     lng: 31.237174094852456,\n// };\n//\n// function MyGoogleMap() {\n//     const token = localStorage.getItem('authToken');\n//     const userId = localStorage.getItem('userId');\n//     const [markers, setMarkers] = useState([]);\n//     const [activeMarker, setActiveMarker] = useState(null);\n//     const [isAddingBookmark, setIsAddingBookmark] = useState(false);\n//     const [isLoading, setIsLoading] = useState(false);\n//     const [status, setStatus] = useState('');\n//\n//     useEffect(() => {\n//         // Get the user's current location and add it as a marker\n//         if (navigator.geolocation) {\n//             navigator.geolocation.getCurrentPosition((position) => {\n//                 const lat = position.coords.latitude;\n//                 const lng = position.coords.longitude;\n//                 const currentLocationMarker = { lat, lng, name: 'Current Location', description: 'You are here' };\n//                 setMarkers([...markers, currentLocationMarker]);\n//             });\n//         }\n//\n//         // Fetch the user's bookmarks and add them as markers\n//         fetchBookmarks();\n//     }, [userId, token, markers]);\n//\n//     const fetchBookmarks = () => {\n//         setIsLoading(true);\n//         setStatus('');\n//\n//         fetch(`http://localhost:3000/api/auth/bookmarks/${userId}`, {\n//             method: 'GET',\n//             headers: {\n//                 'Authorization': `${token}`,\n//             },\n//         })\n//             .then((response) => response.json())\n//             .then((data) => {\n//                 setIsLoading(false);\n//\n//                 if (data.status.statusCode === 200) {\n//                     // Assuming data.data contains an array of bookmarks\n//                     const userBookmarks = data.data.map((bookmark) => ({\n//                         lat: bookmark.coordinates.latitude,\n//                         lng: bookmark.coordinates.longitude,\n//                         name: bookmark.name,\n//                         description: bookmark.description,\n//                     }));\n//                     setMarkers([...markers, ...userBookmarks]);\n//                 } else {\n//                     setStatus('Error fetching user data');\n//                 }\n//             })\n//             .catch((error) => {\n//                 setIsLoading(false);\n//                 setStatus('Error fetching user data');\n//                 console.error('Error fetching user data:', error);\n//             });\n//     };\n//\n//     const handleMapClick = (event) => {\n//         if (isAddingBookmark) {\n//             const lat = event.latLng.lat();\n//             const lng = event.latLng.lng();\n//             const newMarker = { lat, lng, name: '', description: '' };\n//             setMarkers([...markers, newMarker]);\n//         }\n//     };\n//\n//     const handleMarkerClick = (marker) => {\n//         setActiveMarker(marker);\n//     };\n//\n//     const handleNameChange = (event) => {\n//         setActiveMarker({ ...activeMarker, name: event.target.value });\n//     };\n//\n//     const handleDescriptionChange = (event) => {\n//         setActiveMarker({ ...activeMarker, description: event.target.value });\n//     };\n//\n//     const toggleBookmarkMode = () => {\n//         setIsAddingBookmark(!isAddingBookmark);\n//     };\n//\n//     const saveBookmark = async () => {\n//         if (!activeMarker || !activeMarker.name) {\n//             return;\n//         }\n//\n//         const bookmarkToSend = {\n//             userId,\n//             name: activeMarker.name,\n//             coordinates: { latitude: activeMarker.lat, longitude: activeMarker.lng },\n//             description: activeMarker.description,\n//         };\n//\n//         try {\n//             const response = await fetch(`http://localhost:3000/api/auth/bookmarks/${userId}/add`, {\n//                 method: 'POST',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                     Authorization: token,\n//                 },\n//                 body: JSON.stringify(bookmarkToSend),\n//             });\n//\n//             if (response.status === 201) {\n//                 console.log('Bookmark created successfully');\n//                 setMarkers(\n//                     markers.map((marker) =>\n//                         marker === activeMarker ? { ...marker, name: '', description: '' } : marker\n//                     )\n//                 );\n//                 setActiveMarker(null);\n//                 setIsAddingBookmark(false);\n//             } else {\n//                 console.error('Error creating bookmark');\n//             }\n//         } catch (error) {\n//             console.error('Error:', error);\n//         }\n//     };\n//\n//     return (\n//         <LoadScript googleMapsApiKey=\"AIzaSyC3phyjN4feKgzWWAVQOURiVIkvYlSMWLg\">\n//             <GoogleMap mapContainerStyle={containerStyle} center={center} zoom={14} onClick={handleMapClick}>\n//                 {markers.map((marker, index) => (\n//                     <Marker\n//                         key={index}\n//                         position={{ lat: marker.lat, lng: marker.lng }}\n//                         onClick={() => handleMarkerClick(marker)}\n//                     />\n//                 ))}\n//\n//                 {activeMarker && (\n//                     <InfoWindow\n//                         position={{ lat: activeMarker.lat, lng: activeMarker.lng }}\n//                         onCloseClick={() => setActiveMarker(null)}\n//                     >\n//                         <div className=\"info-window-content\">\n//                             <input\n//                                 type=\"text\"\n//                                 placeholder=\"Bookmark Name\"\n//                                 value={activeMarker.name}\n//                                 onChange={handleNameChange}\n//                                 className=\"input-field\"\n//                             />\n//                             <textarea\n//                                 placeholder=\"Bookmark Description\"\n//                                 value={activeMarker.description}\n//                                 onChange={handleDescriptionChange}\n//                                 className=\"input-field\"\n//                             />\n//                             <button className=\"save-button\" onClick={saveBookmark}>\n//                                 Save Bookmark\n//                             </button>\n//                         </div>\n//                     </InfoWindow>\n//                 )}\n//\n//                 <div>\n//                     <button\n//                         className={`add-bookmark-button ${isAddingBookmark ? 'adding' : ''}`}\n//                         onClick={toggleBookmarkMode}\n//                     >\n//                         {isAddingBookmark ? 'Cancel Bookmark' : 'Add Bookmark'}\n//                     </button>\n//                 </div>\n//             </GoogleMap>\n//         </LoadScript>\n//     );\n// }\n//\n// export default MyGoogleMap;","map":{"version":3,"names":[],"sources":["C:/Projects/NodeJSProjects/map-mark-ui/src/components/GoogleMap.js"],"sourcesContent":["// // import React, {useState} from 'react';\r\n// // import {GoogleMap, LoadScript, Marker, InfoWindow} from '@react-google-maps/api';\r\n// // import '../styles/components/GoogleMapStyle.css'\r\n// //\r\n// // const containerStyle = {\r\n// //     width: '100%',\r\n// //     height: '100vh',\r\n// // };\r\n// //\r\n// // const center = {\r\n// //     lat: 30.046981762780838,\r\n// //     lng: 31.237174094852456,\r\n// // };\r\n// //\r\n// // function MyGoogleMap() {\r\n// //     const token = localStorage.getItem('authToken');\r\n// //     const userId = localStorage.getItem('userId'); // Get userId from localStorage\r\n// //     const [markers, setMarkers] = useState([]);\r\n// //     const [activeMarker, setActiveMarker] = useState(null);\r\n// //     const [isAddingBookmark, setIsAddingBookmark] = useState(false); // Flag to indicate bookmark creation mode\r\n// //\r\n// //     const handleMapClick = (event) => {\r\n// //         if (isAddingBookmark) {\r\n// //             const lat = event.latLng.lat();\r\n// //             const lng = event.latLng.lng();\r\n// //             const newMarker = {lat, lng, name: '', description: ''};\r\n// //             setMarkers([...markers, newMarker]);\r\n// //         }\r\n// //     };\r\n// //\r\n// //     const handleMarkerClick = (marker) => {\r\n// //         setActiveMarker(marker);\r\n// //     };\r\n// //\r\n// //     const handleNameChange = (event) => {\r\n// //         setActiveMarker({...activeMarker, name: event.target.value});\r\n// //     };\r\n// //\r\n// //     const handleDescriptionChange = (event) => {\r\n// //         setActiveMarker({...activeMarker, description: event.target.value});\r\n// //     };\r\n// //\r\n// //     const toggleBookmarkMode = () => {\r\n// //         setIsAddingBookmark(!isAddingBookmark);\r\n// //     };\r\n// //\r\n// //     const saveBookmark = async () => {\r\n// //         if (!activeMarker || !activeMarker.name) {\r\n// //             return;\r\n// //         }\r\n// //\r\n// //         // Replace 'your_user_id' with the actual user ID\r\n// //\r\n// //         const bookmarkToSend = {\r\n// //             userId,\r\n// //             name: activeMarker.name,\r\n// //             coordinates: {latitude: activeMarker.lat, longitude: activeMarker.lng},\r\n// //             description: activeMarker.description,\r\n// //         };\r\n// //\r\n// //         try {\r\n// //             const response = await fetch(`http://localhost:3000/api/auth/bookmarks/${userId}/add`, {\r\n// //                 method: 'POST',\r\n// //                 headers: {\r\n// //                     'Content-Type': 'application/json',\r\n// //                     'Authorization': token, // Include the authentication token\r\n// //                 },\r\n// //                 body: JSON.stringify(bookmarkToSend),\r\n// //             });\r\n// //\r\n// //             if (response.status === 201) {\r\n// //                 // Bookmark created successfully\r\n// //                 console.log('Bookmark created successfully');\r\n// //                 setMarkers(\r\n// //                     markers.map((marker) =>\r\n// //                         marker === activeMarker ? {...marker, name: '', description: ''} : marker\r\n// //                     )\r\n// //                 );\r\n// //                 setActiveMarker(null);\r\n// //                 setIsAddingBookmark(false); // Exit bookmark creation mode\r\n// //             } else {\r\n// //                 // Handle errors or display an error message\r\n// //                 console.error('Error creating bookmark');\r\n// //             }\r\n// //         } catch (error) {\r\n// //             // Handle network errors or other exceptions\r\n// //             console.error('Error:', error);\r\n// //         }\r\n// //     };\r\n// //\r\n// //     return (\r\n// //         <LoadScript googleMapsApiKey=\"AIzaSyC3phyjN4feKgzWWAVQOURiVIkvYlSMWLg\">\r\n// //             <GoogleMap\r\n// //                 mapContainerStyle={containerStyle}\r\n// //                 center={center}\r\n// //                 zoom={14}\r\n// //                 onClick={handleMapClick}\r\n// //             >\r\n// //                 {markers.map((marker, index) => (\r\n// //                     <Marker\r\n// //                         key={index}\r\n// //                         position={{lat: marker.lat, lng: marker.lng}}\r\n// //                         onClick={() => handleMarkerClick(marker)}\r\n// //                     />\r\n// //                 ))}\r\n// //\r\n// //                 {activeMarker && (\r\n// //                     <InfoWindow\r\n// //                         position={{lat: activeMarker.lat, lng: activeMarker.lng}}\r\n// //                         onCloseClick={() => setActiveMarker(null)}\r\n// //                     >\r\n// //                         <div className=\"info-window-content\">\r\n// //                             <input\r\n// //                                 type=\"text\"\r\n// //                                 placeholder=\"Bookmark Name\"\r\n// //                                 value={activeMarker.name}\r\n// //                                 onChange={handleNameChange}\r\n// //                                 className=\"input-field\"\r\n// //                             />\r\n// //                             <textarea\r\n// //                                 placeholder=\"Bookmark Description\"\r\n// //                                 value={activeMarker.description}\r\n// //                                 onChange={handleDescriptionChange}\r\n// //                                 className=\"input-field\"\r\n// //                             />\r\n// //                             <button className=\"save-button\" onClick={saveBookmark}>\r\n// //                                 Save Bookmark\r\n// //                             </button>\r\n// //                         </div>\r\n// //                     </InfoWindow>\r\n// //\r\n// //                 )}\r\n// //\r\n// //                 <div>\r\n// //                     {/* Inside the GoogleMap component */}\r\n// //                     <button\r\n// //                         className={`add-bookmark-button ${isAddingBookmark ? 'adding' : ''}`}\r\n// //                         onClick={toggleBookmarkMode}\r\n// //                     >\r\n// //                         {isAddingBookmark ? 'Cancel Bookmark' : 'Add Bookmark'}\r\n// //                     </button>\r\n// //\r\n// //                 </div>\r\n// //             </GoogleMap>\r\n// //         </LoadScript>\r\n// //     );\r\n// // }\r\n// //\r\n// // export default MyGoogleMap;\r\n// // import React, {useState, useEffect} from 'react';\r\n// // import {GoogleMap, LoadScript, Marker, InfoWindow} from '@react-google-maps/api';\r\n// // import '../styles/components/GoogleMapStyle.css';\r\n// //\r\n// // const containerStyle = {\r\n// //     width: '100%',\r\n// //     height: '100vh',\r\n// // };\r\n// //\r\n// // const center = {\r\n// //     lat: 30.046981762780838,\r\n// //     lng: 31.237174094852456,\r\n// // };\r\n// //\r\n// // function MyGoogleMap() {\r\n// //     const token = localStorage.getItem('authToken');\r\n// //     const userId = localStorage.getItem('userId');\r\n// //     const [markers, setMarkers] = useState([]);\r\n// //     const [activeMarker, setActiveMarker] = useState(null);\r\n// //     const [isAddingBookmark, setIsAddingBookmark] = useState(false);\r\n// //\r\n// //     useEffect(() => {\r\n// //         // Get the user's current location and add it as a marker\r\n// //         if (navigator.geolocation) {\r\n// //             navigator.geolocation.getCurrentPosition((position) => {\r\n// //                 const lat = position.coords.latitude;\r\n// //                 const lng = position.coords.longitude;\r\n// //                 const currentLocationMarker = {lat, lng, name: 'Current Location', description: 'You are here'};\r\n// //                 setMarkers([...markers, currentLocationMarker]);\r\n// //             });\r\n// //         }\r\n// //     }, [markers]);\r\n// //\r\n// //     const handleMapClick = (event) => {\r\n// //         if (isAddingBookmark) {\r\n// //             const lat = event.latLng.lat();\r\n// //             const lng = event.latLng.lng();\r\n// //             const newMarker = {lat, lng, name: '', description: ''};\r\n// //             setMarkers([...markers, newMarker]);\r\n// //         }\r\n// //     };\r\n// //\r\n// //     const handleMarkerClick = (marker) => {\r\n// //         setActiveMarker(marker);\r\n// //     };\r\n// //\r\n// //     const handleNameChange = (event) => {\r\n// //         setActiveMarker({...activeMarker, name: event.target.value});\r\n// //     };\r\n// //\r\n// //     const handleDescriptionChange = (event) => {\r\n// //         setActiveMarker({...activeMarker, description: event.target.value});\r\n// //     };\r\n// //\r\n// //     const toggleBookmarkMode = () => {\r\n// //         setIsAddingBookmark(!isAddingBookmark);\r\n// //     };\r\n// //\r\n// //     const saveBookmark = async () => {\r\n// //         if (!activeMarker || !activeMarker.name) {\r\n// //             return;\r\n// //         }\r\n// //\r\n// //         const bookmarkToSend = {\r\n// //             userId,\r\n// //             name: activeMarker.name,\r\n// //             coordinates: {latitude: activeMarker.lat, longitude: activeMarker.lng},\r\n// //             description: activeMarker.description,\r\n// //         };\r\n// //\r\n// //         try {\r\n// //             const response = await fetch(`http://localhost:3000/api/auth/bookmarks/${userId}/add`, {\r\n// //                 method: 'POST',\r\n// //                 headers: {\r\n// //                     'Content-Type': 'application/json',\r\n// //                     Authorization: token,\r\n// //                 },\r\n// //                 body: JSON.stringify(bookmarkToSend),\r\n// //             });\r\n// //\r\n// //             if (response.status === 201) {\r\n// //                 console.log('Bookmark created successfully');\r\n// //                 setMarkers(\r\n// //                     markers.map((marker) =>\r\n// //                         marker === activeMarker ? {...marker, name: '', description: ''} : marker\r\n// //                     )\r\n// //                 );\r\n// //                 setActiveMarker(null);\r\n// //                 setIsAddingBookmark(false);\r\n// //             } else {\r\n// //                 console.error('Error creating bookmark');\r\n// //             }\r\n// //         } catch (error) {\r\n// //             console.error('Error:', error);\r\n// //         }\r\n// //     };\r\n// //\r\n// //     return (\r\n// //         <LoadScript googleMapsApiKey=\"AIzaSyC3phyjN4feKgzWWAVQOURiVIkvYlSMWLg\">\r\n// //             <GoogleMap mapContainerStyle={containerStyle} center={center} zoom={14} onClick={handleMapClick}>\r\n// //                 {markers.map((marker, index) => (\r\n// //                     <Marker\r\n// //                         key={index}\r\n// //                         position={{lat: marker.lat, lng: marker.lng}}\r\n// //                         onClick={() => handleMarkerClick(marker)}\r\n// //                     />\r\n// //                 ))}\r\n// //\r\n// //                 {activeMarker && (\r\n// //                     <InfoWindow\r\n// //                         position={{lat: activeMarker.lat, lng: activeMarker.lng}}\r\n// //                         onCloseClick={() => setActiveMarker(null)}\r\n// //                     >\r\n// //                         <div className=\"info-window-content\">\r\n// //                             <input\r\n// //                                 type=\"text\"\r\n// //                                 placeholder=\"Bookmark Name\"\r\n// //                                 value={activeMarker.name}\r\n// //                                 onChange={handleNameChange}\r\n// //                                 className=\"input-field\"\r\n// //                             />\r\n// //                             <textarea\r\n// //                                 placeholder=\"Bookmark Description\"\r\n// //                                 value={activeMarker.description}\r\n// //                                 onChange={handleDescriptionChange}\r\n// //                                 className=\"input-field\"\r\n// //                             />\r\n// //                             <button className=\"save-button\" onClick={saveBookmark}>\r\n// //                                 Save Bookmark\r\n// //                             </button>\r\n// //                         </div>\r\n// //                     </InfoWindow>\r\n// //                 )}\r\n// //\r\n// //                 <div>\r\n// //                     <button\r\n// //                         className={`add-bookmark-button ${isAddingBookmark ? 'adding' : ''}`}\r\n// //                         onClick={toggleBookmarkMode}\r\n// //                     >\r\n// //                         {isAddingBookmark ? 'Cancel Bookmark' : 'Add Bookmark'}\r\n// //                     </button>\r\n// //                 </div>\r\n// //             </GoogleMap>\r\n// //         </LoadScript>\r\n// //     );\r\n// // }\r\n// //\r\n// // export default MyGoogleMap;\r\n//\r\n// import React, { useState, useEffect } from 'react';\r\n// import { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';\r\n// import '../styles/components/GoogleMapStyle.css';\r\n//\r\n// const containerStyle = {\r\n//     width: '100%',\r\n//     height: '100vh',\r\n// };\r\n//\r\n// const center = {\r\n//     lat: 30.046981762780838,\r\n//     lng: 31.237174094852456,\r\n// };\r\n//\r\n// function MyGoogleMap() {\r\n//     const token = localStorage.getItem('authToken');\r\n//     const userId = localStorage.getItem('userId');\r\n//     const [markers, setMarkers] = useState([]);\r\n//     const [activeMarker, setActiveMarker] = useState(null);\r\n//     const [isAddingBookmark, setIsAddingBookmark] = useState(false);\r\n//     const [isLoading, setIsLoading] = useState(false);\r\n//     const [status, setStatus] = useState('');\r\n//\r\n//     useEffect(() => {\r\n//         // Get the user's current location and add it as a marker\r\n//         if (navigator.geolocation) {\r\n//             navigator.geolocation.getCurrentPosition((position) => {\r\n//                 const lat = position.coords.latitude;\r\n//                 const lng = position.coords.longitude;\r\n//                 const currentLocationMarker = { lat, lng, name: 'Current Location', description: 'You are here' };\r\n//                 setMarkers([...markers, currentLocationMarker]);\r\n//             });\r\n//         }\r\n//\r\n//         // Fetch the user's bookmarks and add them as markers\r\n//         fetchBookmarks();\r\n//     }, [userId, token, markers]);\r\n//\r\n//     const fetchBookmarks = () => {\r\n//         setIsLoading(true);\r\n//         setStatus('');\r\n//\r\n//         fetch(`http://localhost:3000/api/auth/bookmarks/${userId}`, {\r\n//             method: 'GET',\r\n//             headers: {\r\n//                 'Authorization': `${token}`,\r\n//             },\r\n//         })\r\n//             .then((response) => response.json())\r\n//             .then((data) => {\r\n//                 setIsLoading(false);\r\n//\r\n//                 if (data.status.statusCode === 200) {\r\n//                     // Assuming data.data contains an array of bookmarks\r\n//                     const userBookmarks = data.data.map((bookmark) => ({\r\n//                         lat: bookmark.coordinates.latitude,\r\n//                         lng: bookmark.coordinates.longitude,\r\n//                         name: bookmark.name,\r\n//                         description: bookmark.description,\r\n//                     }));\r\n//                     setMarkers([...markers, ...userBookmarks]);\r\n//                 } else {\r\n//                     setStatus('Error fetching user data');\r\n//                 }\r\n//             })\r\n//             .catch((error) => {\r\n//                 setIsLoading(false);\r\n//                 setStatus('Error fetching user data');\r\n//                 console.error('Error fetching user data:', error);\r\n//             });\r\n//     };\r\n//\r\n//     const handleMapClick = (event) => {\r\n//         if (isAddingBookmark) {\r\n//             const lat = event.latLng.lat();\r\n//             const lng = event.latLng.lng();\r\n//             const newMarker = { lat, lng, name: '', description: '' };\r\n//             setMarkers([...markers, newMarker]);\r\n//         }\r\n//     };\r\n//\r\n//     const handleMarkerClick = (marker) => {\r\n//         setActiveMarker(marker);\r\n//     };\r\n//\r\n//     const handleNameChange = (event) => {\r\n//         setActiveMarker({ ...activeMarker, name: event.target.value });\r\n//     };\r\n//\r\n//     const handleDescriptionChange = (event) => {\r\n//         setActiveMarker({ ...activeMarker, description: event.target.value });\r\n//     };\r\n//\r\n//     const toggleBookmarkMode = () => {\r\n//         setIsAddingBookmark(!isAddingBookmark);\r\n//     };\r\n//\r\n//     const saveBookmark = async () => {\r\n//         if (!activeMarker || !activeMarker.name) {\r\n//             return;\r\n//         }\r\n//\r\n//         const bookmarkToSend = {\r\n//             userId,\r\n//             name: activeMarker.name,\r\n//             coordinates: { latitude: activeMarker.lat, longitude: activeMarker.lng },\r\n//             description: activeMarker.description,\r\n//         };\r\n//\r\n//         try {\r\n//             const response = await fetch(`http://localhost:3000/api/auth/bookmarks/${userId}/add`, {\r\n//                 method: 'POST',\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                     Authorization: token,\r\n//                 },\r\n//                 body: JSON.stringify(bookmarkToSend),\r\n//             });\r\n//\r\n//             if (response.status === 201) {\r\n//                 console.log('Bookmark created successfully');\r\n//                 setMarkers(\r\n//                     markers.map((marker) =>\r\n//                         marker === activeMarker ? { ...marker, name: '', description: '' } : marker\r\n//                     )\r\n//                 );\r\n//                 setActiveMarker(null);\r\n//                 setIsAddingBookmark(false);\r\n//             } else {\r\n//                 console.error('Error creating bookmark');\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('Error:', error);\r\n//         }\r\n//     };\r\n//\r\n//     return (\r\n//         <LoadScript googleMapsApiKey=\"AIzaSyC3phyjN4feKgzWWAVQOURiVIkvYlSMWLg\">\r\n//             <GoogleMap mapContainerStyle={containerStyle} center={center} zoom={14} onClick={handleMapClick}>\r\n//                 {markers.map((marker, index) => (\r\n//                     <Marker\r\n//                         key={index}\r\n//                         position={{ lat: marker.lat, lng: marker.lng }}\r\n//                         onClick={() => handleMarkerClick(marker)}\r\n//                     />\r\n//                 ))}\r\n//\r\n//                 {activeMarker && (\r\n//                     <InfoWindow\r\n//                         position={{ lat: activeMarker.lat, lng: activeMarker.lng }}\r\n//                         onCloseClick={() => setActiveMarker(null)}\r\n//                     >\r\n//                         <div className=\"info-window-content\">\r\n//                             <input\r\n//                                 type=\"text\"\r\n//                                 placeholder=\"Bookmark Name\"\r\n//                                 value={activeMarker.name}\r\n//                                 onChange={handleNameChange}\r\n//                                 className=\"input-field\"\r\n//                             />\r\n//                             <textarea\r\n//                                 placeholder=\"Bookmark Description\"\r\n//                                 value={activeMarker.description}\r\n//                                 onChange={handleDescriptionChange}\r\n//                                 className=\"input-field\"\r\n//                             />\r\n//                             <button className=\"save-button\" onClick={saveBookmark}>\r\n//                                 Save Bookmark\r\n//                             </button>\r\n//                         </div>\r\n//                     </InfoWindow>\r\n//                 )}\r\n//\r\n//                 <div>\r\n//                     <button\r\n//                         className={`add-bookmark-button ${isAddingBookmark ? 'adding' : ''}`}\r\n//                         onClick={toggleBookmarkMode}\r\n//                     >\r\n//                         {isAddingBookmark ? 'Cancel Bookmark' : 'Add Bookmark'}\r\n//                     </button>\r\n//                 </div>\r\n//             </GoogleMap>\r\n//         </LoadScript>\r\n//     );\r\n// }\r\n//\r\n// export default MyGoogleMap;\r\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}