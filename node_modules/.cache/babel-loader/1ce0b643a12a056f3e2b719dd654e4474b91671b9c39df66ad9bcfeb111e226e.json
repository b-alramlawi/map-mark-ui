{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\NodeJSProjects\\\\map-mark-ui\\\\src\\\\components\\\\GoogleMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '100vh'\n};\nconst center = {\n  lat: 30.046981762780838,\n  lng: 31.237174094852456\n};\nfunction MyGoogleMap() {\n  _s();\n  const token = localStorage.getItem('authToken');\n  const userId = localStorage.getItem('userId'); // Get userId from localStorage\n  const [markers, setMarkers] = useState([]);\n  const [activeMarker, setActiveMarker] = useState(null);\n  const handleMapClick = event => {\n    const lat = event.latLng.lat();\n    const lng = event.latLng.lng();\n    const newMarker = {\n      lat,\n      lng,\n      name: '',\n      description: ''\n    };\n    setMarkers([...markers, newMarker]);\n  };\n  const handleMarkerClick = marker => {\n    setActiveMarker(marker);\n  };\n  const handleNameChange = event => {\n    setActiveMarker({\n      ...activeMarker,\n      name: event.target.value\n    });\n  };\n  const handleDescriptionChange = event => {\n    setActiveMarker({\n      ...activeMarker,\n      description: event.target.value\n    });\n  };\n  const saveBookmark = async () => {\n    if (!activeMarker || !activeMarker.name) {\n      return;\n    }\n\n    // Replace 'your_user_id' with the actual user ID\n\n    const bookmarkToSend = {\n      userId,\n      name: activeMarker.name,\n      coordinates: {\n        latitude: activeMarker.lat,\n        longitude: activeMarker.lng\n      },\n      description: activeMarker.description\n    };\n    try {\n      const response = await fetch(`http://localhost:3000/api/auth/bookmarks/${userId}/add`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': token // Include the authentication token\n        },\n\n        body: JSON.stringify(bookmarkToSend)\n      });\n      if (response.status === 201) {\n        // Bookmark created successfully\n        console.log('Bookmark created successfully');\n        setMarkers(markers.map(marker => marker === activeMarker ? {\n          ...marker,\n          name: '',\n          description: ''\n        } : marker));\n        setActiveMarker(null);\n      } else {\n        // Handle errors or display an error message\n        console.error('Error creating bookmark');\n      }\n    } catch (error) {\n      // Handle network errors or other exceptions\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyC3phyjN4feKgzWWAVQOURiVIkvYlSMWLg\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 14,\n      onClick: handleMapClick,\n      children: [markers.map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: marker.lat,\n          lng: marker.lng\n        },\n        onClick: () => handleMarkerClick(marker)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)), activeMarker && /*#__PURE__*/_jsxDEV(InfoWindow, {\n        position: {\n          lat: activeMarker.lat,\n          lng: activeMarker.lng\n        },\n        onCloseClick: () => setActiveMarker(null),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Bookmark Name\",\n            value: activeMarker.name,\n            onChange: handleNameChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Bookmark Description\",\n            value: activeMarker.description,\n            onChange: handleDescriptionChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveBookmark,\n            children: \"Save Bookmark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n_s(MyGoogleMap, \"jQUGGKJhBhWglsYFjIzImN06BgY=\");\n_c = MyGoogleMap;\nexport default MyGoogleMap;\nvar _c;\n$RefreshReg$(_c, \"MyGoogleMap\");","map":{"version":3,"names":["React","useState","GoogleMap","LoadScript","Marker","InfoWindow","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","MyGoogleMap","_s","token","localStorage","getItem","userId","markers","setMarkers","activeMarker","setActiveMarker","handleMapClick","event","latLng","newMarker","name","description","handleMarkerClick","marker","handleNameChange","target","value","handleDescriptionChange","saveBookmark","bookmarkToSend","coordinates","latitude","longitude","response","fetch","method","headers","body","JSON","stringify","status","console","log","map","error","googleMapsApiKey","children","mapContainerStyle","zoom","onClick","index","position","fileName","_jsxFileName","lineNumber","columnNumber","onCloseClick","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Projects/NodeJSProjects/map-mark-ui/src/components/GoogleMap.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {GoogleMap, LoadScript, Marker, InfoWindow} from '@react-google-maps/api';\r\n\r\nconst containerStyle = {\r\n    width: '100%',\r\n    height: '100vh',\r\n};\r\n\r\nconst center = {\r\n    lat: 30.046981762780838,\r\n    lng: 31.237174094852456,\r\n};\r\n\r\nfunction MyGoogleMap() {\r\n    const token = localStorage.getItem('authToken');\r\n    const userId = localStorage.getItem('userId'); // Get userId from localStorage\r\n    const [markers, setMarkers] = useState([]);\r\n    const [activeMarker, setActiveMarker] = useState(null);\r\n\r\n    const handleMapClick = (event) => {\r\n        const lat = event.latLng.lat();\r\n        const lng = event.latLng.lng();\r\n        const newMarker = {lat, lng, name: '', description: ''};\r\n        setMarkers([...markers, newMarker]);\r\n    };\r\n\r\n    const handleMarkerClick = (marker) => {\r\n        setActiveMarker(marker);\r\n    };\r\n\r\n    const handleNameChange = (event) => {\r\n        setActiveMarker({...activeMarker, name: event.target.value});\r\n    };\r\n\r\n    const handleDescriptionChange = (event) => {\r\n        setActiveMarker({...activeMarker, description: event.target.value});\r\n    };\r\n\r\n    const saveBookmark = async () => {\r\n        if (!activeMarker || !activeMarker.name) {\r\n            return;\r\n        }\r\n\r\n        // Replace 'your_user_id' with the actual user ID\r\n\r\n        const bookmarkToSend = {\r\n            userId,\r\n            name: activeMarker.name,\r\n            coordinates: {latitude: activeMarker.lat, longitude: activeMarker.lng},\r\n            description: activeMarker.description,\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(`http://localhost:3000/api/auth/bookmarks/${userId}/add`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': token, // Include the authentication token\r\n\r\n                },\r\n                body: JSON.stringify(bookmarkToSend),\r\n            });\r\n\r\n            if (response.status === 201) {\r\n                // Bookmark created successfully\r\n                console.log('Bookmark created successfully');\r\n                setMarkers(\r\n                    markers.map((marker) =>\r\n                        marker === activeMarker ? {...marker, name: '', description: ''} : marker\r\n                    )\r\n                );\r\n                setActiveMarker(null);\r\n            } else {\r\n                // Handle errors or display an error message\r\n                console.error('Error creating bookmark');\r\n            }\r\n        } catch (error) {\r\n            // Handle network errors or other exceptions\r\n            console.error('Error:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <LoadScript googleMapsApiKey=\"AIzaSyC3phyjN4feKgzWWAVQOURiVIkvYlSMWLg\">\r\n            <GoogleMap\r\n                mapContainerStyle={containerStyle}\r\n                center={center}\r\n                zoom={14}\r\n                onClick={handleMapClick}\r\n            >\r\n                {markers.map((marker, index) => (\r\n                    <Marker\r\n                        key={index}\r\n                        position={{lat: marker.lat, lng: marker.lng}}\r\n                        onClick={() => handleMarkerClick(marker)}\r\n                    />\r\n                ))}\r\n\r\n                {activeMarker && (\r\n                    <InfoWindow\r\n                        position={{lat: activeMarker.lat, lng: activeMarker.lng}}\r\n                        onCloseClick={() => setActiveMarker(null)}\r\n                    >\r\n                        <div>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Bookmark Name\"\r\n                                value={activeMarker.name}\r\n                                onChange={handleNameChange}\r\n                            />\r\n                            <textarea\r\n                                placeholder=\"Bookmark Description\"\r\n                                value={activeMarker.description}\r\n                                onChange={handleDescriptionChange}\r\n                            />\r\n                            <button onClick={saveBookmark}>Save Bookmark</button>\r\n                        </div>\r\n                    </InfoWindow>\r\n                )}\r\n            </GoogleMap>\r\n        </LoadScript>\r\n    );\r\n}\r\n\r\nexport default MyGoogleMap;\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAAQC,SAAS,EAAEC,UAAU,EAAEC,MAAM,EAAEC,UAAU,QAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjF,MAAMC,cAAc,GAAG;EACnBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACZ,CAAC;AAED,MAAMC,MAAM,GAAG;EACXC,GAAG,EAAE,kBAAkB;EACvBC,GAAG,EAAE;AACT,CAAC;AAED,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC/C,MAAMC,MAAM,GAAGF,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMuB,cAAc,GAAIC,KAAK,IAAK;IAC9B,MAAMb,GAAG,GAAGa,KAAK,CAACC,MAAM,CAACd,GAAG,CAAC,CAAC;IAC9B,MAAMC,GAAG,GAAGY,KAAK,CAACC,MAAM,CAACb,GAAG,CAAC,CAAC;IAC9B,MAAMc,SAAS,GAAG;MAACf,GAAG;MAAEC,GAAG;MAAEe,IAAI,EAAE,EAAE;MAAEC,WAAW,EAAE;IAAE,CAAC;IACvDR,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEO,SAAS,CAAC,CAAC;EACvC,CAAC;EAED,MAAMG,iBAAiB,GAAIC,MAAM,IAAK;IAClCR,eAAe,CAACQ,MAAM,CAAC;EAC3B,CAAC;EAED,MAAMC,gBAAgB,GAAIP,KAAK,IAAK;IAChCF,eAAe,CAAC;MAAC,GAAGD,YAAY;MAAEM,IAAI,EAAEH,KAAK,CAACQ,MAAM,CAACC;IAAK,CAAC,CAAC;EAChE,CAAC;EAED,MAAMC,uBAAuB,GAAIV,KAAK,IAAK;IACvCF,eAAe,CAAC;MAAC,GAAGD,YAAY;MAAEO,WAAW,EAAEJ,KAAK,CAACQ,MAAM,CAACC;IAAK,CAAC,CAAC;EACvE,CAAC;EAED,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACd,YAAY,IAAI,CAACA,YAAY,CAACM,IAAI,EAAE;MACrC;IACJ;;IAEA;;IAEA,MAAMS,cAAc,GAAG;MACnBlB,MAAM;MACNS,IAAI,EAAEN,YAAY,CAACM,IAAI;MACvBU,WAAW,EAAE;QAACC,QAAQ,EAAEjB,YAAY,CAACV,GAAG;QAAE4B,SAAS,EAAElB,YAAY,CAACT;MAAG,CAAC;MACtEgB,WAAW,EAAEP,YAAY,CAACO;IAC9B,CAAC;IAED,IAAI;MACA,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAE,4CAA2CvB,MAAO,MAAK,EAAE;QACnFwB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE5B,KAAK,CAAE;QAE5B,CAAC;;QACD6B,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,cAAc;MACvC,CAAC,CAAC;MAEF,IAAII,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;QACzB;QACAC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;QAC5C7B,UAAU,CACND,OAAO,CAAC+B,GAAG,CAAEpB,MAAM,IACfA,MAAM,KAAKT,YAAY,GAAG;UAAC,GAAGS,MAAM;UAAEH,IAAI,EAAE,EAAE;UAAEC,WAAW,EAAE;QAAE,CAAC,GAAGE,MACvE,CACJ,CAAC;QACDR,eAAe,CAAC,IAAI,CAAC;MACzB,CAAC,MAAM;QACH;QACA0B,OAAO,CAACG,KAAK,CAAC,yBAAyB,CAAC;MAC5C;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZ;MACAH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAClC;EACJ,CAAC;EAED,oBACI7C,OAAA,CAACJ,UAAU;IAACkD,gBAAgB,EAAC,yCAAyC;IAAAC,QAAA,eAClE/C,OAAA,CAACL,SAAS;MACNqD,iBAAiB,EAAE/C,cAAe;MAClCG,MAAM,EAAEA,MAAO;MACf6C,IAAI,EAAE,EAAG;MACTC,OAAO,EAAEjC,cAAe;MAAA8B,QAAA,GAEvBlC,OAAO,CAAC+B,GAAG,CAAC,CAACpB,MAAM,EAAE2B,KAAK,kBACvBnD,OAAA,CAACH,MAAM;QAEHuD,QAAQ,EAAE;UAAC/C,GAAG,EAAEmB,MAAM,CAACnB,GAAG;UAAEC,GAAG,EAAEkB,MAAM,CAAClB;QAAG,CAAE;QAC7C4C,OAAO,EAAEA,CAAA,KAAM3B,iBAAiB,CAACC,MAAM;MAAE,GAFpC2B,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGb,CACJ,CAAC,EAEDzC,YAAY,iBACTf,OAAA,CAACF,UAAU;QACPsD,QAAQ,EAAE;UAAC/C,GAAG,EAAEU,YAAY,CAACV,GAAG;UAAEC,GAAG,EAAES,YAAY,CAACT;QAAG,CAAE;QACzDmD,YAAY,EAAEA,CAAA,KAAMzC,eAAe,CAAC,IAAI,CAAE;QAAA+B,QAAA,eAE1C/C,OAAA;UAAA+C,QAAA,gBACI/C,OAAA;YACI0D,IAAI,EAAC,MAAM;YACXC,WAAW,EAAC,eAAe;YAC3BhC,KAAK,EAAEZ,YAAY,CAACM,IAAK;YACzBuC,QAAQ,EAAEnC;UAAiB;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B,CAAC,eACFxD,OAAA;YACI2D,WAAW,EAAC,sBAAsB;YAClChC,KAAK,EAAEZ,YAAY,CAACO,WAAY;YAChCsC,QAAQ,EAAEhC;UAAwB;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CAAC,eACFxD,OAAA;YAAQkD,OAAO,EAAErB,YAAa;YAAAkB,QAAA,EAAC;UAAa;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACf;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAErB;AAAChD,EAAA,CA7GQD,WAAW;AAAAsD,EAAA,GAAXtD,WAAW;AA+GpB,eAAeA,WAAW;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}